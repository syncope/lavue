.\" Man page generated from reStructuredText.
.
.TH "LAVUELIB" "1" "Jun 19, 2023" "2.83" "LaVue"
.SH NAME
lavuelib \- lavuelib Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.sp
LaVue is a simple implementation of a live viewer front end.
It is supposed to show a live image view from xray\-detectors at PETRA3 @ desy.de,
e.g. \fBPilatus\fP, \fBLambda\fP, \fBEiger\fP, \fBPerkinElmer\fP, \fBPCO\fP, \fBLimaCCD\fP, and others.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
Authors: Christoph Rosemann <christoph.rosemann at desy.de>, Jan Kotański <jan.kotanski at desy.de>, André Rothkirch <andre.rothkirch at desy.de>
.SH INSTALLATION
.sp
LaVue requires the following python packages: \fBqt5/qt4\fP  \fBpyqtgraph\fP  \fBnumpy\fP  \fBzmq\fP  \fBscipy\fP
.sp
It is also recommended to install: \fBpytango\fP  \fBhidra\fP  \fBpil\fP  \fBfabio\fP  \fBrequests\fP  \fBh5py\fP  \fBpninexus\fP  \fBnxstools\fP
.SS From sources
.sp
Download the latest LaVue version from \fI\%https://github.com/lavue\-org/lavue\fP
.sp
Extract sources and run
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ python setup.py install
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The \fBsetup.py\fP script may need: \fBsetuptools\fP  \fBsphinx\fP  \fBnumpy\fP  \fBpytest\fP python packages as well as \fBqtbase5\-dev\-tools\fP or \fBlibqt4\-dev\-bin\fP\&.
.SS Debian packages
.sp
Debian \fIbookworm\fP, \fIbullseye\fP, \fIbuster\fP or Ubuntu  \fIlunar\fP, \fIjammy\fP, \fIfocal\fP packages can be found in the HDRI repository.
.sp
To install the debian packages, add the PGP repository key
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ sudo su
$ curl \-s http://repos.pni\-hdri.de/debian_repo.pub.gpg  | gpg \-\-no\-default\-keyring \-\-keyring gnupg\-ring:/etc/apt/trusted.gpg.d/debian\-hdri\-repo.gpg \-\-import
$ chmod 644 /etc/apt/trusted.gpg.d/debian\-hdri\-repo.gpg
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and then download the corresponding source list, e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ cd /etc/apt/sources.list.d
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ wget http://repos.pni\-hdri.de/bookworm\-pni\-hdri.list
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ wget http://repos.pni\-hdri.de/bullseye\-pni\-hdri.list
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ wget http://repos.pni\-hdri.de/jammy\-pni\-hdri.list
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ wget http://repos.pni\-hdri.de/focal\-pni\-hdri.list
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
respectively.
.sp
Finally,
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get update
$ apt\-get install python3\-lavue
$ apt\-get install lavue\-controller
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ apt\-get install lavue\-controller3
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
for python 3 version (for older debian/ubuntu releases).
.SS From pip
.sp
To install it from pip you need to install pyqt5 in advance, e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ python3 \-m venv myvenv
$ . myvenv/bin/activate

$ pip install pyqt5
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ pip install PyQt5==5.14
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
and then
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ pip install lavue
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Moreover it is also good to install the following python packages:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ pip install fabio
$ pip install pillow
$ pip install pyFAI
$ pip install lavuefilters
$ pip install pytango
.ft P
.fi
.UNINDENT
.UNINDENT
.SH START THE VIEWER
.sp
To start LaVue
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavue
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavue3
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
for python 3 version (for older debian/ubuntu releases).
.SS Start the Viewer in the expert mode
.sp
Changing LaVue settings is available in the expert mode, i.e.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavue \-m expert
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
under an additional button: Configuration.
.SS Launching options
.sp
To get all possible command\-line parameters
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavue \-h

usage: lavue [\-h] [\-v] [\-m MODE] [\-y STYLE] [\-e STYLESHEET] [\-j INSTANCE]
             [\-f IMAGEFILE] [\-s SOURCE] [\-c CONFIGURATION] [\-z] [\-o MBUFFER]
             [\-\-channel CHANNEL] [\-b BKGFILE] [\-k MASKFILE] [\-p MASKHIGHVALUE]
             [\-t TRANSFORMATION] [\-i SCALING] [\-l LEVELS] [\-q AUTOFACTOR]
             [\-g GRADIENT] [\-r VIEWRANGE] [\-x] [\-u TOOL] [\-a TANGODEVICE]
             [\-d DOORDEVICE] [\-n ANALYSISDEVICE]

2d detector live image viewer

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-v, \-\-version         program version
  \-m MODE, \-\-mode MODE  interface mode, i.e. user, expert
  \-y STYLE, \-\-style STYLE
                        Qt style
  \-e STYLESHEET, \-\-stylesheet STYLESHEET
                        Qt stylesheet
  \-j INSTANCE, \-\-instance INSTANCE
                        LaVue instance with separate configuration
  \-ns, \-\-no\-space\-instance
                        the configuration file name without a space character
                          (in the future major release it will become the default one)
  \-\-organization ORGANIZATION
                        Organization name
  \-\-domain DOMAIN
                        Organization domain name
  \-\-configuration\-path CONFIGPATH
                        Configuration path
  \-f IMAGEFILE, \-\-image\-file IMAGEFILE
                        image file name to show, e.g. /tmp/myfile2.nxs://entry/data/pilatus,,\-1
  \-s SOURCE, \-\-source SOURCE
                        image source, i.e. hidra, http, tangoattr,
                            tangoevents, tangofile, doocsprop, tineprop,
                            epicspv, zmq, asapo, nxsfile, test
                        multiple\-source names is separated by semicolon \(aq;\(aq
  \-c CONFIGURATION, \-\-configuration CONFIGURATION
                        configuration strings for the image source separated by comma, e.g.
                          hidra \-> \(aq\-c haspilatus300k.desy.de\(aq
                          http \-> \(aq\-c haso228eiger/1.5.0\(aq
                          tangoattr \-> \(aq\-c sys/tg_test/1/double_image_ro\(aq
                          tangoevents \-> \(aq\-c sys/lamccds/1/video_last_image\(aq
                          tangofile \-> \(aq\-c p00/plt/1/LastImageTaken,p00/plt/1/LastImagePath\(aq
                          zmq \-> \(aq\-c haso228:5535,topic\(aq
                          doocsprop \-> \(aq\-c TTF2.FEL/BLFW2.CAM/BL0M1.CAM/IMAGE_EXT\(aq
                          nxsfile \-> \(aq\-c /tmp/myfile.nxs://entry/data/pilatus\(aq
                                  or \(aq\-c /tmp/myfile2.nxs://entry/data/pilatus,0,34\(aq
                          tineprop \-> \(aq\-c /HASYLAB/P00_LM00/Output/Frame\(aq
                          asapo \-> \(aq\-c pilatus,substream2\(aq
                          epicspv \-> \(aq\-c \(aq00SIM0:cam1:,[640,480]\(aq
                       configuration for multiple\-sources is separated by semicolon \(aq;\(aq
  \-\-offset OFFSET relative offset x,y[,TRANSFORMATION]
                        where x,y are position of the first pixel for a particular image source
                        while optional TRANSFORMATION can be:
                          flip\-up\-down, flipud, fud, flip\-left\-right, fliplr, flr, transpose, t,
                          rot90, r90, rot180, r180, r270, rot270, rot180+transpose, rot180t or r180t
                        offset for multiple\-sources is separated by semicolon \(aq;\(aq
                        e.g.
                           ;200,300;,54;121,3
                           200,300;100,
                           200,300;100,200,t
                           ;200,300,r45;,52;11,3,r180t
  \-w RANGEWINDOW, \-\-range\-window RANGEWINDOW
                        range window slices, i.e. x1:x2,y1:y2 , e.g. \-w 10:500,20:200
                          where \(aqm\(aq is \(aq\-\(aq
  \-\-ds\-factor DSFACTOR integer down\-sampling factor
  \-\-ds\-reduction DSREDUCTION
                        down\-sampling reduction function, i.e. \(aqmax\(aq, \(aqmin\(aq, \(aqmean\(aq or \(aqsum\(aq
  \-z, \-\-filters apply image filters
  \-o MBUFFER, \-\-memory\-buffer MBUFFER
                     size of memory buffer in frames
  \-\-channel CHANNEL
                     default channel number or \(aqsum\(aq, \(aqmean\(aq, \(aqrgb\(aq or RGB channels separated by comma e.g.\(aq0,1,3\(aq
  \-b BKGFILE, \-\-bkg\-file BKGFILE
                        background file\-name to load
  \-\-bkg\-scale BKGSCALE background scaling factor
  \-\-bright\-field\-file BRIGHTFIELDFILE
                        bright field file\-name to load
  \-\-bright\-field\-scale BRIGHTFIELDSCALE
                     bright field scaling factor
  \-k MASKFILE, \-\-mask\-file MASKFILE
                     mask file\-name to load
  \-p MASKHIGHVALUE, \-\-mask\-high\-value MASKHIGHVALUE
                        highest pixel value to show
  \-t TRANSFORMATION, \-\-transformation TRANSFORMATION
                        image transformation, i.e.
                          flip\-up\-down, flip\-left\-right, transpose,
                          rot90, rot180, rot270, rot180+transpose
  \-\-overflow OVERFLOWVALUE
                        above the overflow value all pixels are shown in a special color defined in the configuration
  \-i SCALING, \-\-scaling SCALING
                        intensity scaling, i.e. sqrt, linear, log
  \-l LEVELS, \-\-levels LEVELS
                        intensity display levels e.g. \-l m20,20
                          where \(aqm\(aq is \(aq\-\(aq
                        the RGB channel levels can be added separated by \(aq;\(aq e.g.
                          \-l \(aq0,40;1,35;0,30;2,45;green\(aq
                              where 0,40 are the main intensity dispay levels
                                    1,35 are the red channel intensity dispay levels
                                    0,30 are the green channel intensity dispay levels
                                    2,45 are the blue channel intensity dispay levels
                                       and the green channel level widgets are selected
  \-q AUTOFACTOR, \-\-factor AUTOFACTOR
                        factor of the highest pick for automatic levels in %, e.g. \-q 0.5
  \-g GRADIENT, \-\-gradient GRADIENT
                        color gradient, i.e. grey, highcontrast, thermal, flame,
                          bipolar, spectrum, spectrumclip, greyclip, reversegrey, cyclic,
                          yellowy, inverted
                        the multi channel color gradients can be added separated by \(aq;\(aq e.g.  \-g \(aqthermal;flame\(aq
  \-r VIEWRANGE, \-\-range VIEWRANGE
                        viewbox range, i.e. xmin,ymin,xsize,ysize , e.g. \-r 5.6,m60.7,543.2,444.11
                            where \(aqm\(aq is \(aq\-\(aq
  \-x, \-\-start           connect the image source
  \-u TOOL, \-\-tool TOOL  utility tool, i.e. intensity, roi, movemotors, meshscan, maxima,
                          linecut, projections, 1d\-plot, angle/q, q+roi+proj, parameters, diffractogram
  \-\-tool\-configuration TOOLCONFIG
                          JSON dictionary with tool configuration, e.g. {"rows_to_plot":"0,1","buffer_size":512}
  \-a TANGODEVICE, \-\-tango\-device TANGODEVICE
                        tango device of LavueController to communicated with clients during the run
  \-d DOORDEVICE, \-\-door DOORDEVICE
                        door device to communicated with sardana during the run
  \-n ANALYSISDEVICE, \-\-analysis\-device ANALYSISDEVICE
                        tango analysis device of LambdaOnlineAnalysis to communicate with analysis clients during the run
  \-\-log LOG logging level, i.e. debug, info, warning, error, critical
.ft P
.fi
.UNINDENT
.UNINDENT
.SH GUI USER GUIDE
.INDENT 0.0
.IP \(bu 2
A widget with Image Source(s)  is in the corner of the main window top left side where a lavue user chooses  a detector image source.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
Below it  the Range Window and Down\-Sampling group allows for selecting a displayed image part and down\-sampling it  with a given reduction function
.IP \(bu 2
In the Filters group users adds his/her plugins for evaluating images
.IP \(bu 2
the Memory buffer group allows to access previously displayed images
.IP \(bu 2
In the Image preparation group a background and mask image can be selected as well simple image transformation, i.e. flip, transpose.
.IP \(bu 2
In the Intensity display scaling frame the user selects what intensity scaling should be selected to fit the proper colors on the 2D\-image display.
.IP \(bu 2
The Display levels and colors widget is used so set minimum and maximum displayed intensity and choose the display color gradient.
.IP \(bu 2
The Image statistics part shows the basic statistic information about the 2D\-image.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
On the top right side of the main window the user finds an \fBImage/File name\fP label as well as a button for Load images from a file\-system, \fBReload\fP images from a file \-system, this Help, the Configuration and Quit buttons.
.IP \(bu 2
Below them the detector 2D image is displayed with associated \fB1D\-plots\fP\&.
.UNINDENT
.INDENT 0.0
.IP \(bu 2
At the bottom of the right side the user selects Specialized Image Tools which provide a simple analysis of the detector image.
.UNINDENT
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.SS Image Sources and stitching images
.sp
The user can select in the \fBIMAGE SOURCES\fP combo\-box  the following source types:
.INDENT 0.0
.IP \(bu 2
Hidra \- image from a Hidra server, e.g. Pilatus, Perkin Elmer
.IP \(bu 2
HTTP response \- image from an http response, e.g. Eiger
.IP \(bu 2
Tango Attribute \- image from a tango attribute, e.g. Lambda, PCO, AGIPD, Jungfrau or LimaCCDs detectors
.IP \(bu 2
Tango Events \- image from a tango attribute passed via tango events, e.g. LimaCCDs detectors
.IP \(bu 2
Tango File \- image defined by file and directory tango attributes, e.g. Pilatus w/o Hidra
.IP \(bu 2
DOOCS Property \- image from a doocs property, e.g.  FLASH detectors
.IP \(bu 2
ZMQ Stream \- image from a simple ZMQ server, e.g. lavuezmqstreamfromtango SERVER
.IP \(bu 2
Nexus File \- image from a Nexus/Hdf5 file, e.g. written with SWMR
.IP \(bu 2
Tine Property \- image from a tine property, e.g. bpm camera
.IP \(bu 2
Epics PV \- image from a Epics Process Variables
.IP \(bu 2
ASAPO \- images from a ASAPO server, e.g. data from detectors or postprocessed data
.IP \(bu 2
Test \- random test image
.UNINDENT
.sp
By enlarging a number of image sources in  the \fIexpert\fP mode:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Configuration \-> General \-> Number of image sources
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
the user  can \fBcombine images\fP from different sources, i.e. different detectors or detector modules.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBOffset\fP: \fBx,y[,TRANSFORMATION]\fP  where \fBx\fP, \fBy\fP are position of the first pixel for a particular image source while optional \fBTRANSFORMATION\fP can be  \fBflip\-up\-down\fP, \fBflipud\fP, \fBfud\fP, \fBflip\-left\-right\fP, \fBfliplr\fP, \fBflr\fP, \fBtranspose\fP, \fBt\fP, \fBrot90\fP, \fBr90\fP, \fBrot180\fP, \fBr180\fP, \fBr270\fP, \fBrot270\fP, \fBrot180+transpose\fP, \fBrot180t\fP or \fBr180t\fP
.IP \(bu 2
\fBCheckbox\fP in the tag widget allows for switch on/off the corresponding image source
.UNINDENT
.sp
\fBStart\fP/ \fBStop\fP button is only at the first source but it applies to all image sources.
.SS Hirda
.sp
Images from a Hidra server, e.g. \fIPilatus\fP or \fIPerkinElmer\fP detectors
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBHidra\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBServer:\fP selects the Hidra server host name. The possible names can be predefined in the Configuration dialog.
.IP \(bu 2
\fBClient:\fP shows the Hidra client host name and the data port. The data port can be changed in the Configuration dialog.
.IP \(bu 2
\fBStatus:\fP shows the Hidra connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.SS HTTP response
.sp
Images from http response serves, e.g. \fIEigerDectris\fP
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBHTTP response\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBURL:\fP selects the url or its shortcut to the detector HTTP server.
e.g. \fIhaso228eiger/1.5.0\fP
or \fIhttp://haso228eiger/monitor/api/1.5.0/images/monitor\fP .
 The possible URLs can be preselected in the configuration dialog.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.SS Tango Attribute
.sp
Images from a tango attribute, e.g. \fILambda\fP, \fIPCO\fP, \fIAGIPD\fP, \fIJungfrau\fP or \fILimaCCDs\fP detectors
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBTango Attribute\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBAttribute:\fP selects the tango attributes of the detector last image, 
e.g. \fIsys/tg_test/1/double_image_ro\fP  or \fIhaslambda02:10000/petra3/lambda/01/LiveLastImageData\fP\&.  The possible attributes can be preselected in the configuration dialog.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.sp
LaVue can read also Tango \fBDevEncoded\fP attributes. Thus, in order to read \fBLimaCCDs\fP images:
.INDENT 0.0
.IP 1. 3
set its \fBvideo_active\fP attribute (or \fBvideo_live\fP attribute) to true
.IP 2. 3
select the \fBvideo_last_image\fP attribute of \fBLimaCCDs\fP as a Tango Attribute source
.UNINDENT
.sp
or during your scan
.INDENT 0.0
.IP 1. 3
select the \fBlast_image\fP attribute of \fBLimaCCDs\fP as a Tango Attribute source
.UNINDENT
.sp
By clicking on an \fBempty start\fP in the Attribute combobox you can add a label to the current  item (only in the expert mode).
.sp
By clicking on an \fBfull start\fP in the Attribute combobox you can remove the label of the current  item (only in the expert mode).
.SS Tango Events
.sp
Images from a tango attribute passed via \fBTango::CHANGE_EVENT\fP or \fBTango::DATA_READY_EVENT\fP, e.g. \fILimaCCDs\fP detectors.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBTango Events\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBAttribute:\fP selects the tango attributes of the detector last image,
 e.g. \fIhaso000:10000/petra3/limaccds/01/video_last_image\fP\&.
The possible attributes can be preselected in the configuration dialog.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.sp
LaVue can read also Tango \fBDevEncoded\fP attributes. Thus, in order to read \fBLimaCCDs\fP images:
.INDENT 0.0
.IP 1. 3
set \fBTangoEvent\fP property of \fBLimaCCDs\fP to true
.IP 2. 3
set its \fBvideo_active\fP attribute (or \fBvideo_live\fP attribute) to true
.IP 3. 3
select the \fBvideo_last_image\fP attribute of \fBLimaCCDs\fP as a Tango Attribute source
.UNINDENT
.sp
or during your scan
.INDENT 0.0
.IP 1. 3
set TangoEvent property of \fBLimaCCDs\fP to true
.IP 2. 3
select the \fBlast_image\fP attribute of \fBLimaCCDs\fP as a Tango Attribute source.
.UNINDENT
.sp
By clicking on an \fBempty start\fP in the Attribute combobox you can add a label to the current  item (only in the expert mode).
.sp
By clicking on an \fBfull start\fP in the Attribute combobox you can remove the label of the current  item (only in the expert mode).
.SS Tango File
.sp
Images defined by file and directory tango attributes, e.g. \fIPilatus\fP without Hidra
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBTango File\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBFile Attr:\fP selects the tango attributes of the last image file,
 e.g. \fIp09/pilatus/haso228k/LastImageTaken\fP or
 e.g. \fIp09/pilatus/haso228k/LastImageTaken\fP
 The possible file attributes can be preselected in the configuration dialog.
.IP \(bu 2
\fBDir Attr:\fP selects the tango attributes of the last image file directory,
 e.g. \fIp09/pilatus/haso228k/LastImagePath\fP
 The possible file directory attributes can be preselected in the configuration dialog.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.sp
The Tango File attribute and Tango Dir attribute contains a string with the file name and its directory in a raw format or \fIfile:/\fP , \fIh5file:/\fP
or \fIhttp:/\fP, \fIhttps:/\fP scheme.
.SS DOOCS property
.sp
Images from a tango attribute, e.g. \fIFLASH\fP detectors
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBDOOCS Property\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBProperty:\fP selects the doocs property,
 e.g. \fITTF2.FEL/BLFW2.CAM/BL0M0.CAM/IMAGE_EXT\fP\&.
 The possible properties can be preselected in the configuration dialog.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.sp
By clicking on an \fBempty start\fP in the Property combobox you can add a label to the current  item (only in the expert mode).
.sp
By clicking on an \fBfull start\fP in the Property combobox you can remove the label of the current  item (only in the expert mode).
.SS ZMQ stream
.sp
Images from a simple ZMQ server, e.g. lavuezmqstreamfromtango SERVER. It is used to send \fIpost\-processed images\fP
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBZMQ Stream\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBZMQ Server:\fP selects the zmq server host and zmq  data port. Moreover the user can also select the required zmq topic and ZMQ HWM (how many images is in buffer), i.e. \fIhost:port[/topic[/HWM]]\fP or \fIhost:port[:topic[:HWM]]\fP (with the ZMQ configuration colon separator)
.IP \(bu 2
\fBDataSource:\fP name of zmq topic. Possible datasources can be predefined in the configuration or sent in ZMQ metadata.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.sp
The \fBZMQ Stream\fP metadata part can also contain other informations like axes labels or axes start position and scale.
.SS NeXus File
.sp
Images from a NeXus/HDF5 file, e.g. written in the SWMR mode (Single\-Writer\-Multiple\-Reader) or after the scan.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBNeXus File\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBFile:\fP nexus file name with its full path e.g. \fI/gpfs/current/H2O_test.nxs\fP
.IP \(bu 2
\fBField:\fP nexus field with its path inside nexus file e.g. \fI/entry12345/data/lambda\fP
.IP \(bu 2
\fBStacking:\fP stacking dimension of images inside a 3D field. Usually, for Nexus format is 0, i.e. the first dimension.
.IP \(bu 2
\fBFrame:\fP nexus field frame to display. The default value is  \-1, i.e. the last frame.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.SS Tine Property
.sp
Images from a tine property, e.g. \fITine Camera\fP
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBTine Property\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBAddr/Prop:\fP selects the tine address and property of the detector last image,
 e.g. \fI/HASYLAB/P00_LM00/Output/Frame\fP
 The possible address/property can be preselected in the configuration dialog.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.sp
By clicking on an \fBempty start\fP in the Addr/Prop combobox you can add a label to the current  item (only in the expert mode).
.sp
By clicking on an \fBfull start\fP in the Addr/Prop combobox you can remove the label of the current  item (only in the expert mode).
.SS Epics PV
.sp
Images from a Epics Process Variables
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBEpics PV\fP image source frame contains the following fields:
.INDENT 0.0
.INDENT 3.5
\fBPV Name:\fP selects the Process Variable name with  the detector last image data,
The possible attributes can be preselected in the configuration dialog.
\fBShape:\fP selects the Process Variable name shape, e.g. \fI640,480\fP
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.UNINDENT
.sp
By clicking on an \fBempty start\fP in the PV name and Shape combobox you can add a label to the current  item (only in the expert mode).
.sp
By clicking on an \fBfull start\fP in the PV name and Shape combobox you can remove the label of the current  item (only in the expert mode).
.SS ASAPO
.sp
Images from a  \fI\%ASAP::O\fP server, e.g. detector servers. It is used to \fIsend post\-processed images\fP
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBASAPO\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBDatasource:\fP name of asapo datasource. Possible datasources can be predefined in the configuration. The default one is \fIdetector\fP
.IP \(bu 2
\fBStream:\fP name of asapo stream. List of streams  is fetched from the ASAPO server. The default one in default while \fI**ALL**\fP corresponds to the last one image from all datasources.
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.sp
In order to use \fBASAPO\fP image source user has to set an asapo \fIserver\fP, an asapo \fItoken\fP and an asapo \fIbeamtime\fP in the lavue Configuration.
.SS Test
.sp
Random test images
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBTest\fP image source frame contains the following fields:
.INDENT 0.0
.IP \(bu 2
\fBStatus:\fP shows the connection status. It also displays a port of ZMQ security stream if it is enabled.
.IP \(bu 2
\fBStart/Stop\fP button to launch or interrupt image querying
.UNINDENT
.SS Range Window and Down\-Sampling
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBRange Window and Down\-Sampling\fP widget allows to reduce the displayed image by selecting its \fBx\fP and \fBy slices\fP in python notation.
.sp
Moreover,  the user can reduce the image by applying down\-sampling with a specific factor and a reduction function.
.INDENT 0.0
.IP \(bu 2
\fBSlices:\fP x,y numpy\-like slices
.IP \(bu 2
\fBDS Factor:\fP down\-sampling factor, i.e. 5 means: a 5x5 pixel block is reduced to 1 pixel.
.IP \(bu 2
\fBDS Reduction:\fP down\-sampling reduction function, i.e. \fImax\fP, \fImin\fP, \fImean\fP or \fIsum\fP .
.UNINDENT
.SS LaVue Filters
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The \fBFilters\fP widget allows to change an image before displaying it by applying a set of user defined filters.
.sp
\fBCheckbox\fP switch on/off filters. They are applied in the order from left to right.
.sp
To configure filters see filter\-plugins\-settings
.sp
Examples of the filters can be found at filter\-plugins
.SS Memory Buffer
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
With use or \fBMemory buffer\fP you get access to past images.
.INDENT 0.0
.IP \(bu 2
\fBOn/Off checkbox\fP \- switches on or off buffering of the images
.IP \(bu 2
\fBSize\fP \- number of images in the circular memory buffer. Its green background means that the buffer is  full and new images with overwrite the old ones
.IP \(bu 2
\fBReset\fP \- reset content o the buffer
.UNINDENT
.sp
Earlier images can be selected in the \fBChannel\fP widget. The user can select also there a \fBsum\fP or \fBmean\fP of all buffer images or an \fBRGB\fP view.
.SS Image Preparation
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBBackground/DarkField image:\fP subtract background or dark field image from a file or from an image source
.IP \(bu 2
\fBNormalization/BrightField image:\fP apply normalization or bright field image correction from a file or from an image source, i.e. \fI(image \- DF) / (BF \- DF)\fP
.IP \(bu 2
\fBDF scaling factor:\fP multiplicative correction to the background or dark field image
.IP \(bu 2
\fBBF scaling factor:\fP multiplicative correction to the brightfield  image
.IP \(bu 2
\fBMask image:\fP mask plotted image with respect to a file.
Convention of zero mask pixels can be set in the configuration,  by default none\-zero masks pixel to zero.
.IP \(bu 2
\fBMask values above:\fP mask image pixels which have intensity above the given value
.IP \(bu 2
\fBTransformation:\fP all 8 possible. Whether axes are changing with transformations or not can be set in the configuration.
.UNINDENT
.sp
Background image and mask image can be loaded from the file formats supported by \fI\%fabio\fP or a \fI\%NeXus file\fP\&.
.SS Scaling and Display Levels
.sp
In \fBDisplay levels and colors\fP user sets mapping between image pixel intensities and displayed colors on the 2D plot.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBoverflow:\fP maximal intensity value above one all pixels are plotted in a special color defined in the configuration
.IP \(bu 2
\fBscaling:\fP \fIsqrt\fP, \fIlinear\fP or \fIlog\fP – basic intensity scale for 2D images
applied to \fIImage Statistics/1D plot\fP or not  – depending on \fIConfiguration\fP
.IP \(bu 2
\fBLevels:\fP maximum and minimum intensity displayed. It can be automatic or set by user
.IP \(bu 2
\fBAuto levels %:\fP switch to automatic levels settings. You can provide the levels as a cut factor in % of the highest pick.
.IP \(bu 2
\fBBin edges\fP: bin edges algorithm for finding histogram levels
.IP \(bu 2
\fBStep\fP: step parameter for the bin edges algorithm for finding histogram levels
.IP \(bu 2
\fBHistogram\fP: set intensity levels and color gradients on histogram plot
.IP \(bu 2
\fBColor gradients\fP: 12 various basic settings with possibility to adjust with ticks
.UNINDENT
.sp
By clicking the right\-mouse\-button on the color gradient bar you can \fBsave\fP or \fBremove\fP your current \fBcustomize color gradient\fP into the local configuration (only in the expert mode).
.sp
For multi\-channel images user can select a separate color channel, a sum or mean of all color channels or an RGB view.
.sp
With Map images to color channels in  \fIConfiguration/General\fP checked on the user can adjust intensity display levels for each image sources separately on \fBRGB histogram\fP, e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavue \-s test\e;tangoattr \-c \e;sys/tg_test/1/double_image_ro \-i linear \-\-channel rgb \-l green \-x
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
lunches lavue with two image sources: test and sys/tg_test/1/double_image_ro tango attribute
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
The test image source in the red channel has the intensity maximal value ~30 times larger than the tango image source image.  With the RGB histogram lavue adjusts the intensity levels separately for the each color channel so both images are visible in one time.
.sp
To display RGB image channels with the \fBgradient color maps\fP set \fBConfiguration \-> General \-> Image Display \-> Image channels with gradient colors\fP i.e.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
Other option to make both image visible is to use the \fBWeightedSum\fP filter from lavuelib.plugins.filters which performs the weighted sum of all channel images.
.SS Image Statistics
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
In the \fBImage Statistics\fP group the following fields are shown:
.INDENT 0.0
.IP \(bu 2
\fBScaling\fP: intensity scaling applied to statistics and 1\-D plots. In can be changed in the configuration.
.IP \(bu 2
\fBMaximum\fP: maximal intensity value
.IP \(bu 2
\fBMean\fP: mean intensity value
.IP \(bu 2
\fBVariance\fP: intensity distribution variance
.UNINDENT
.SS 2D Plot
.sp
On the mouse right\-click in the 2D\-plot area a menu is displayed with options to adjust the plot.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBView All:\fP resizes the plot to display the whole image
.IP \(bu 2
\fBX/Y Axis:\fP  adjusts parameters of axes, i.e. ranges,  inversions.
.IP \(bu 2
\fBMouse Mode:\fP selects mouse mode, i.e. 3 or 1 button
.IP \(bu 2
\fBSet Aspect Locked:\fP locks the aspect ration
.IP \(bu 2
\fBView 1:1 pixels:\fP resizes the plot to set detector pixel of screen pixel size
.UNINDENT
.SS Specialized Tools
.sp
In the bottom\-right corner \fIComboBox\fP the user selects one of the \fBSpecialized Image Tools\fP:
.INDENT 0.0
.IP \(bu 2
Intensity \- shows intensity of the selected pixels
.IP \(bu 2
ROI \- selects Regions Of Interest and culculates a sum of their pixel intensities
.IP \(bu 2
LineCut \- selects Line Cuts and shows their 1d intensity plots
.IP \(bu 2
Angle/Q \- shows pixel coordinates in q\-space or theta\-angles
.IP \(bu 2
MoveMotor \- moves the selected motors to the position pointed by mouse
.IP \(bu 2
MeshScan \- performs sardana mesh scan on the selected ROI region
.IP \(bu 2
1d\-Plot \- plots 1d\-plots of the selected image rows
.IP \(bu 2
Projections \- plots horizontal and vertical projections of the current image
.IP \(bu 2
Q+ROI+Proj \- combines Angle/Q, ROI and Projections
.IP \(bu 2
Maxima \- points pixels with the highest intensity
.IP \(bu 2
Parameters \- reads and writes tango attributes to change detector settings
.IP \(bu 2
Diffractogram \- shows a result of azimuth integration on 1d plot
.UNINDENT
.sp
The \fBconfiguration\fP of tools can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or as a \fBtoolconfig\fP variable in the \fBLavueState\fP attribute of lavuecontroller, e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
import tango
import json

lc = tango.DeviceProxy("p09/lavuecontroller/1")

lc.LavueState = json.dumps({"tool":"intensity", "toolconfig":\(aq{"crosshair_locker":true}\(aq})
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Intensity Tool
.sp
\fBIntensity Tool\fP shows intensity of the selected pixels.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBPixel intensity\fP pointed by mouse and its position
.IP \(bu 2
\fBAxes Labels\fP and \fBScales:\fP also changeable from ZMQ Source
.IP \(bu 2
\fBCrosshair locker:\fP show red horizontal and vertical lines denoting a selected point
.UNINDENT
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a \fBtoolconfig\fP variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBcrosshair_locker\fP (boolean), \fBxunits\fP (string), \fByunits\fP (string), \fBxtext\fP (string), \fBytext\fP (string), \fBposition\fP ([float, float]), \fBscale\fP ([float, float])
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u intensity \-s test \-\-tool\-configuration \e{\e"cross_hair\e":false,\e"position\e":[112,125.5],\e"scale\e":[2,3]\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS ROI Tool
.sp
\fBROI Tool\fP selects Regions Of Interest and culculates a sum of their pixel intensities
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBROI alias(es)\fP for roi tango devices
.IP \(bu 2
\fBAdd\fP to or \fBFetch\fP from sardana environment (see below). If lavue is working with ANALYSISDEVICE , i.e. lavue \-n <device>,  \fBROIs\fP bounds are sending also to tango SPECTRUM  RoIs  attribute of the device, e.g. LambdaOnlineAnalysis server.
.IP \(bu 2
\fBSum of\fP the selected \fBROI\fP or all \fBROIs\fP\&. The used version can be selected in the configuration.
.UNINDENT
.sp
Moreover, in configuration can be set if the sums of calculated ROIs should be sent to \fBLavueController\fP tango server.
.sp
After adding ROIs to sardana  the following environment variables are created or updated
.INDENT 0.0
.IP \(bu 2
\fBDetectorROIs\fP: \fI\%JSON\fP dictionary with  all Regions Of Interests ranges, e.g.
 \fI{"pilatus_roi1": [[195, 73, 277, 145]], "pilatus_roi2":[[305, 65, 455, 125]], "old_pilatus_roi":[[19, 27, 73, 146]]}\fP
.IP \(bu 2
\fBDetectorROIsValues\fP: \fI\%JSON\fP dictionary with Regions Of Interests sums, e.g.
 \fI{"pilatus_roi1": [44940.0], "pilatus_roi2": [8167.0]}}\fP
.IP \(bu 2
\fBDetectorROIsParams\fP: \fI\%JSON\fP list of image transformations performed by lavue, e.g.
 \fI["transpose", "flip\-left\-right", "flip\-up\-down"]\fP
.IP \(bu 2
\fBDetectorROIsOrder\fP: \fI\%JSON\fP list of ROI aliases representing they order, e.g.
 \fI["pilatus_roi1", "pilatus_roi2"]\fP
.UNINDENT
.sp
The \fBconfiguration\fP of the tool can be set with a \fI\%JSON\fP dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBaliases\fP (list of strings), \fBrois_number\fP (integer)
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u roi \-\-tool\-configuration \e{\e"rois_number\e":2,\e"aliases\e":[\e"pilatus_roi1\e",\e"polatus_roi2\e"]}
.ft P
.fi
.UNINDENT
.UNINDENT
.SS LineCut Tool
.sp
\fBLineCut Tool\fP selects Line Cuts and shows their 1d intensity plots
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBX in 1d:\fP Points, X\-Pixels, Y\-Pixels
.IP \(bu 2
\fBAll Cuts:\fP displays all cuts on the 1d\-plot
.UNINDENT
.sp
The \fBwidth\fP of the line\-cut can be set the handle in the middle of the line\-cut selector.
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBx_coordinates\fP (points, x\-pixels  or y\-pixels string), \fBcuts_number\fP (integer), \fBall_cuts\fP (boolean)
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u linecut \-\-tool\-configuration \e{\e"cuts_number\e":2,\e"x_coordinates\e":\e"y\-pixels\e",\e"all_cuts\e":true}
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Angle/Q Tool
.sp
\fBAngle/Q Tool\fP shows pixel coordinates in q\-space or theta\-angles
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBGeometry:\fP detector geometry parameters.  They can be pass in both ways via \fBLavueController\fP tango server
.IP \(bu 2
\fBtheta angles\fP or \fBq\-space\fP selects the radial transformation
.IP \(bu 2
\fBpixel/polar\-th/polar\-q:\fP selects Cartesian or polar plot
.IP \(bu 2
\fBRange:\fP select range and scale of polar plots
.UNINDENT
.sp
The radial center can be selected on Cartesian 2D\-plot with a mouse double\-click.
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBplot_type\fP (pixels, polar\-th  or polar\-q string), \fBunits\fP (angles  or q\-spaces string), \fBplot_range\fP ( (start, end, size) for polar, theta and q coordinates  i.e.  a list of  [float, float, float]), \fBgeometry\fP (string:float dictionary with the  \fBcenterx\fP, \fBcentery\fP, \fBenergy\fP, \fBpixelsizex\fP, \fBpixelsizey\fP, \fBdetdistance\fP keywords)
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u angle/q \-s test \-\-tool\-configuration \e{\e"plot_type\e":\e"polar\-q\e",\e"units\e":\e"angles\e",\e"plot_range\e":[[0,180,300],[10,30,400],[0,1,500]],\e"geometry\e":\e{\e"centerx\e":123.4,\e"centery\e":93.4,\e"pixelsizex\e":70,\e"pixelsizey\e":70.2,\e"energy\e":5050,\e"detdistance\e":50.5\e}\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS MoveMotor Tool
.sp
\fBMoveMotor Tool\fP moves the selected motors to the position pointed by mouse
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBX, Y:\fP final  x,y positions
.IP \(bu 2
\fBMotors:\fP selects x,y motors
.IP \(bu 2
\fBMove/Stop\fP motors action
.IP \(bu 2
\fBTrack/Untrack:\fP show/hide the current motors positions
.IP \(bu 2
\fBPixel intensity\fP pointed by mouse and its position
.IP \(bu 2
\fBAxes Labels and Scales:\fP also changeable from ZMQ Source
.UNINDENT
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBmotors\fP ([string, string]), \fBx_position\fP (float), \fBy_position\fP (float), \fBxunits\fP (string), \fByunits\fP (string), \fBxtext\fP (string), \fBytext\fP (string), \fBposition\fP ([float, float]), \fBscale\fP ([float, float]), \fBmove\fP (boolean), \fBstop\fP (boolean),
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u movemotors \-s test \-\-tool\-configuration \e{\e"motors\e":[\e"mot02\e",\e"mot03\e"],\e"x_position\e":202.1,\e"y_position\e":123,\e"position\e":[112,145.5],\e"scale\e":[2,3],\e"move\e":true\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS MeshScan Tool
.sp
\fBMeshScan Tool\fP performs sardana mesh scan on the selected ROI region
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBIntervals:\fP select x,y intervals and integration time
.IP \(bu 2
\fBMotors:\fP select x,y motors
.IP \(bu 2
\fBScan/Stop:\fP sardana mesh macro with the active MG
.IP \(bu 2
\fBPixel intensity\fP pointed by mouse and its position
.IP \(bu 2
\fBAxes Labels and Scales\fP: also changeable from ZMQ Source
.UNINDENT
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBmotors\fP ([string, string]), \fBx_intervals\fP (integer), \fBy_intervals\fP (integer), \fBinterval_time\fP (float), \fBxunits\fP (string), \fByunits\fP (string), \fBxtext\fP (string), \fBytext\fP (string), \fBposition\fP ([float, float]), \fBscale\fP ([float, float]), \fBscan\fP  (boolean), \fBstop\fP  (boolean),
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u meshscan \-s test \-\-tool\-configuration \e{\e"motors\e":[\e"mot02\e",\e"mot03\e"],\e"x_intervals\e":20,\e"y_intervals\e":123,\e"interval_time\e":0.1,\e"position\e":[112,145.5],\e"scale\e":[2,3],\e"scan\e":true\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS 1d\-Plot Tool
.sp
\fB1d\-Plot Tool\fP plots 1d\-plots of the selected image rows
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBRows to plot:\fP e.g. \fB1,2,9:10\fP or \fB100:120:2\fP, \fBALL\fP for all rows
.IP \(bu 2
\fBLabels:\fP rename labels of the 1d\-plot curves
.IP \(bu 2
\fBX in the first row:\fP tread the first row as 1d X\-axis
.IP \(bu 2
\fBBuffer size:\fP size of the buffer to collect one curve data in time
.IP \(bu 2
\fBReset:\fP reset the curve buffer
.IP \(bu 2
\fBCollect/Stop:\fP start and stop collecting curve data
.UNINDENT
.sp
It works for \fBMCAs\fP\&.
.sp
The \fB*configuration\fP of the tool can be set with a JSON dictionary passed in the \fB\-\-tool\-configuration\fP option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBrows_to_plot\fP (string), \fBlabels\fP (list of strings), \fBbuffer_size\fP (integer), \fBcollect\fP (boolean), \fBreset\fP (boolean), \fB1d_stretch\fP (integer)
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u 1d\-plot \-s tangoattr\e;tangoattr \-c aspectro\e;fspecto \-\-tool\-configuration \e{\e"rows_to_plot\e":\e"0,1\e",\e"1d_stretch\e":1000,\e"labels\e":\e[\e"sample\e 1\e"\e,\e"water\e"]\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Projections Tool
.sp
\fBProjections Tool\fP plots horizontal and vertical projections of the current image
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBRow/Column slice\fP e.g. 9:10 or 100:120:2, <empty> for all
.IP \(bu 2
\fBMapping:\fP mean or sum
.IP \(bu 2
\fBPixel intensity\fP pointed by mouse and its position
.UNINDENT
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBmapping\fP (\fBsum\fP  or \fBmean\fP string), \fBrows\fP (string with a python slice), \fBcolumns\fP (string with a python slice)
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u projections \-s test \-\-tool\-configuration \e{\e"mapping\e":\e"sum\e",\e"rows\e":\e"10:200:5\e",\e"columns\e":\e"50:150\e"\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Q+ROI+Proj Tool
.sp
\fBQ+ROI+Proj Tool\fP combines Angle/Q, ROI and Projections
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
Projections:
.INDENT 0.0
.IP \(bu 2
\fBRow/Column slice\fP e.g. \fB9:10\fP or \fB100:120:2\fP, \fB<empty>\fP for all
.IP \(bu 2
\fBMapping:\fP mean or sum
.UNINDENT
.sp
ROI:
.INDENT 0.0
.IP \(bu 2
\fBROI alias(es)\fP for roi tango devices
.IP \(bu 2
\fBAdd\fP to or \fBFetch\fP from sardana environment
.IP \(bu 2
\fBSum of\fP the selected \fBROI\fP or all \fBROIs\fP\&. The used version can be selected in the configuration.
.UNINDENT
.sp
Geometry:
.INDENT 0.0
.IP \(bu 2
\fBGeometry: detector geometry parameters.  They can be pass in both ways via **LavueController\fP tango server
.IP \(bu 2
\fBtheta angles\fP or \fBq\-space\fP selects the radial transformation
.IP \(bu 2
\fBPixel intensity\fP pointed by mouse and its position
.UNINDENT
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBaliases\fP (list of strings), \fBrois_number\fP (integer), \fBmapping\fP (\fBsum\fP or \fBmean\fP string), \fBrows\fP (string with a python slice), \fBcolumns\fP (string with a python slice), \fBunits\fP (\fBangles\fP  or \fBq\-spaces\fP string), \fBgeometry\fP (string:float dictionary with the  \fBcenterx\fP, \fBcentery\fP, \fBenergy\fP, \fBpixelsizex\fP, \fBpixelsizey\fP, \fBdetdistance\fP keywords)
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u q+roi+proj \-s test \-\-tool\-configuration \e{\e"rois_number\e":2,\e"aliases\e":[\e"pilatus_roi1\e",\e"polatus_roi2\e"],\e"mapping\e":\e"sum\e",\e"rows\e":\e"10:200:5\e",\e"columns\e":\e"50:150\e",\e"units\e":\e"angles\e",\e"geometry\e":\e{\e"centerx\e":123.4,\e"centery\e":93.4,\e"pixelsizex\e":70,\e"pixelsizey\e":70.2,\e"energy\e":5050,\e"detdistance\e":50.5\e}\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Maxima Tool
.sp
\fBMaxima Tool\fP points pixels with the highest intensity
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBMaxima:\fP a list of pixels with the highest intensity, i.e  nr: intensity_value at (x, y)
 A number of maxima to find can be selected in a spin\-box on the right
.IP \(bu 2
\fBGeometry:\fP detector geometry parameters.  They can be pass in both ways via LavueController tango server
.IP \(bu 2
\fBtheta angles\fP or \fBq\-space\fP  selects the radial transformation
.UNINDENT
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBmaxima_number\fP  (integer), \fBcurrent_maximum\fP  (integer), \fBunits\fP (\fBangles\fP  or \fBq\-spaces\fP string), \fBgeometry\fP (string:float dictionary with the \fBcenterx\fP, \fBcentery\fP, \fBenergy\fP, \fBpixelsizex\fP, \fBpixelsizey\fP, \fBdetdistance\fP keywords)
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u maxima \-s test \-\-tool\-configuration \e{\e"maxima_number\e":10,\e"units\e":\e"angles\e",\e"geometry\e":\e{\e"centerx\e":123.4,\e"centery\e":93.4,\e"pixelsizex\e":70,\e"pixelsizey\e":70.2,\e"energy\e":5050,\e"detdistance\e":50.5\e}\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Parameters Tool
.sp
\fBParameters Tool\fP allows to read and write tango attributes to change detector settings
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBSetup:\fP add and remove tango device attributes and their labels to the list of parameters
.IP \(bu 2
\fBApply:\fP write parameter values from the white edit widget to the corresponding tango device attribute
.UNINDENT
.sp
\fBRead values\fP of parameters are displayed in the corresponding green widgets.
.sp
The configuration of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBtango_det_attrs\fP (string:string dictonary)
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u parameters \-s test \-\-tool\-configuration \e{\e"tango_det_attrs\e":\e{\e"lmbd2\e":\e"p00/lambda/dellek/LiveLastImageData\e",\e"tangotest\e":\e"sys/tg_test/1/long_image_ro\e",\e"mca01\e":\e"p00/mca/exp.01/Data\e"\e}\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Diffractogram Tool
.sp
\fBDiffractogram Tool\fP shows a result of azimuth integration on 1d plot
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBCalibration\fP loads pyFAI calibration files, e.g. in PONI format
.IP \(bu 2
\fBRange\fP defines the integration ranges
.IP \(bu 2
combobox with \fBUnits\fP sets x\-axis units of the 1d diffractogram plot
.IP \(bu 2
\fBShow/Stop\fP \- switches on/off continuous mode of diffractogram update with each  image
.IP \(bu 2
\fBNext\fP \- (re\-)computes a diffractogram for the current image
.IP \(bu 2
combobox with a \fBNumber\fP of diffractograms corresponding to different ranges
.UNINDENT
.sp
Ranges and 1d plots \fBcolors\fP can be changed in the lavue Configuration by setting \fBRanges and ROIs Colors\fP\&.
.sp
Also in the Configuration the user can change
.INDENT 0.0
.IP \(bu 2
\fBDiffractogram size:\fP number of points in the diffractogram
.IP \(bu 2
\fBCorrect Solid Angle:\fP correct solid angle flag for diffractogram
.UNINDENT
.sp
A contour plot of diffractograms (collected in time) can be created with use of the \fBBuffering\fP widget
.INDENT 0.0
.IP \(bu 2
\fBBuffer size:\fP maximal number of diffractograms in the heat\-map plot
.IP \(bu 2
\fBReset:\fP reset the diffractogram buffer
.IP \(bu 2
\fBCollect/Stop:\fP start or stop collect diffractograms in the buffer
.IP \(bu 2
\fBMain plot:\fP select 2D\-plot i.e. Image shows the original image,  \fBBuffer <?>\fP   shows a buffer for the \fB<?>\fP diffractogram range
.UNINDENT
.sp
The \fBconfiguration\fP of the tool can be set with a JSON dictionary passed in the  \fB\-\-tool\-configuration\fP  option in command line or a toolconfig variable of \fBLavueController.LavueState\fP with the following keys:
.sp
\fBcalibration\fP (string), \fBdiff_number\fP (integer), \fBdiff_ranges\fP ( [azimuth_start, azimuth_end, radial_start, radial_end] for each diffractogram i.e.   lists of  four floats), \fBdiff_units\fP ( \fB"q [1/nm]"\fP, \fB"q [1/A]"\fP, \fB"2th [deg]"\fP, \fB"2th [rad]"\fP, \fB"r [mm]"\fP, \fB"r [pixel]"\fP string), \fBbuffer_size\fP (integer), \fBbuffering\fP (boolean), \fBcollect\fP (boolean), \fBshow_diff\fP (boolean), \fBmain_plot\fP (image, buffer 1, buffer 2, buffer 3 or buffer 4 string)
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
lavue \-u diffractogram \-s test \-\-tool\-configuration \e{\e"calibration\e":\e"test/images/eiger4n_al203_13.45kev.poni\e",\e"diff_number\e":2,\e"diff_ranges\e":[[10,20,0,10],[\-5,5,5,15]],\e"diff_units\e":\e"r\e [mm]\e",\e"buffering\e":true,\e"buffer_size\e":512\e} \-\-start
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Images from FileSystem
.sp
By pressing the \fBLoad\fP button user can open the existing file.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
For \fI\%NeXus Files\fP an additional dialog is displayed
.INDENT 0.0
.IP \(bu 2
\fBNeXus image fields:\fP  selects NeXus field
.IP \(bu 2
\fBStacking dimension:\fP dimension of the 3D field which enumerates the consecutive frames.
.IP \(bu 2
\fBFrame to display:\fP an image frame of 3D field to be displayed,  \-1 means the last one.
.UNINDENT
.sp
NeXus image frames can be also changed by clicking on the slider/buttons nearby the Load button.
.SS Configuration
.sp
The \fIConfiguration\fP button appears in the top\-right corner in the expert mode, i.e.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavue \-m expert
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
It opens the configuration dialog where the user select matching LaVue \fBsettings\fP\&.
.INDENT 0.0
.IP \(bu 2
On normal exit of LaVue the settings are \fBstored\fP at \fI$HOME/.config/DESY/LaVue.conf\fP
.IP \(bu 2
The settings are \fBloaded\fP back from: \fI$HOME/.config/DESY/LaVue.conf\fP  when the user starts LaVue.
.UNINDENT
.SS General Settings
.sp
The first tab of the configuration dialog contains \fBGeneral Settings\fP\&. It is divided into a few groups:
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
\fBImage source\fP
.INDENT 0.0
.IP \(bu 2
\fBRefresh time in s:\fP select a minimal time between consecutive frames
.IP \(bu 2
\fBAuto enlarge refresh time\fP automatically changes the refresh time if it is too small
.IP \(bu 2
\fBNumber of image sources:\fP  a number of different image sources  from which images should be stitched
.IP \(bu 2
\fBMap images to color channels:\fP places images form different image sources to separate color channels
.IP \(bu 2
\fBInterrupt on source errors:\fP stops live image viewing on image source errors
.IP \(bu 2
\fBDisplay specific for a source:\fP store/retrieve display parameters for an each image source separately
.IP \(bu 2
\fBSource timeout in ms:\fP maximal time in milliseconds to wait for a response , e.g. from  Hidra or HTTP image sources
.UNINDENT
.sp
\fBStatistics and 1d plots\fP
.INDENT 0.0
.IP \(bu 2
\fBIntensity scaling:\fP applies the intensity display scaling to image statistics and 1d\-plots
.IP \(bu 2
\fBCalculate variance:\fP perform calculations of variance from image pixel intensities
.UNINDENT
.sp
\fBZMQ security stream\fP
.INDENT 0.0
.IP \(bu 2
\fBEnabled:\fP turns on sending the ZMQ security stream with basic information about the image, e.g. maximal intensity
.IP \(bu 2
\fBAutomatic port:\fP selects a port number for the ZMQ security stream automatically
.IP \(bu 2
\fBPort:\fP defines a port number for the ZMQ security stream
.UNINDENT
.sp
\fBImage display\fP
.INDENT 0.0
.IP \(bu 2
\fBMaximal memory buffer size:\fP maximal frame number in the memory buffer
.IP \(bu 2
\fBMask pixels with NAN:\fP stores masked pixels as a float Not\-A\-Number (NAN)
.IP \(bu 2
\fBMax value added to negative mask:\fP add maximal type value of current image to the negative high value mask
.IP \(bu 2
\fBPixel masks with zero values:\fP causes that zero pixel values of mask image are interpreted as masking
.IP \(bu 2
\fBIntensity overflow color:\fP causes that pixels with intesity over the overflow value are ploted in the color
.IP \(bu 2
\fBKeep original coordinates:\fP causes the 2D\-plot axes transforms with image transformation
.IP \(bu 2
\fBLazy image slider:\fP plot a new image after the image slider is focused out
.IP \(bu 2
\fBAspect Ratio locked:\fP sets the aspect ratio to 1:1 in the 2D\-plot
.IP \(bu 2
\fBAuto Down\-Sample:\fP turns on auto\-down\-sampling mode of pyqtgraph
.IP \(bu 2
\fBFloat type for intensity:\fP  type to which intensity is converted if it is changed to float type
.IP \(bu 2
\fBAccelerate memory buffer sum:\fP speeds up calculation of an image sum for the memory buffer tool
.IP \(bu 2
\fBImage channels with gradient colors:\fP use gradient color maps to display pixel intensities in the RGB\-channel  mode
.IP \(bu 2
\fBRanges and ROIs Colors:\fP allows to defined colors of Ranges or ROIs selection frames. Colors are used cyclically
.UNINDENT
.sp
\fBROIs\fP
.INDENT 0.0
.IP \(bu 2
\fBShow all ROIs values:\fP calculates ROIs sum values for all ROI frames
.IP \(bu 2
\fBSend ROIs values:\fP sends ROIs sum values to \fILaVueController\fP tango server
.IP \(bu 2
\fBSingle ROIs aliases:\fP adds \fIrois1\fP, \fIroi2\fP, \fIroi3\fP, ... aliases if a number of rois is higher than their aliases
.UNINDENT
.sp
\fBTools\fP
.INDENT 0.0
.IP \(bu 2
\fBStore detector geometry for Angle/Q:\fP store the detector geometry for the Angle/Q tool in the configuration settings
.IP \(bu 2
\fBGeometry form a source:\fP fetch metadata parameters describing detector geometry from the image source
.IP \(bu 2
\fBDisplay extension refresh time in s:\fP Minimum refresh time for display extensions
.IP \(bu 2
\fBParameter polling interval in s:\fP time in seconds between read\-outs of detector tango attributes in the Parameters tool
.IP \(bu 2
\fBCrosshair locker switched on:\fP  initial status of intensity crosshair locker
.IP \(bu 2
\fBDiffractogram size:\fP number of points in the diffractogram
.IP \(bu 2
\fBCorrect Solid Angle:\fP correct solid angle flag for diffractogram
.IP \(bu 2
\fBSend results to LavueController:\fP sends the current tool results to \fILaVueController\fP tango server
.UNINDENT
.sp
\fBSardana\fP
.INDENT 0.0
.IP \(bu 2
\fBEnabled:\fP turns on communication with Sardana
.IP \(bu 2
\fBDoor:\fP Door tango device to communicate with Sardana
.IP \(bu 2
\fBAdd ROIs to MG:\fP causes the ROIs Apply button adds the corresponding ROIs aliases into the current Sardana Measurement Group
.IP \(bu 2
\fBFetch ROIs order:\fP read a ROIs order from Sardana environment variables
.UNINDENT
.SS Layout Settings
.sp
The second tab of the configuration dialog contains \fBLayout\fP options. It allows for the user to hide unwanted group widgets.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
\fBShow widget\fP
.INDENT 0.0
.IP \(bu 2
\fBFilters:\fP shows the filter widget
.IP \(bu 2
\fBMemory buffer:\fP shows the memory buffer widget
.IP \(bu 2
\fBSubtraction:\fP shows the background subtraction sub\-group
.IP \(bu 2
\fBSubtraction factor:\fP multiplicative scaling factors for background
.IP \(bu 2
\fBNormalization:\fP shows the bright field image sub\-group
.IP \(bu 2
\fBNormalization factor:\fP multiplicative scaling factors for bright field image
.IP \(bu 2
\fBMask:\fP shows mask the image widget
.IP \(bu 2
\fBMask high values:\fP shows mask high value widget
.IP \(bu 2
\fBTransforms:\fP shows the transformation widget
.IP \(bu 2
\fBIntensity overflow:\fP shows the Intensity overflow group
.IP \(bu 2
\fBIntensity scale:\fP shows the Intensity display scaling group
.IP \(bu 2
\fBIntensity levels:\fP shows the display levels sub\-group
.IP \(bu 2
\fBAdditional histogram options:\fP  shows additional  options: bin edges algorithm and data steps to tune auto finding histogram levels
.IP \(bu 2
\fBHistogram:\fP shows the intensity histogram
.IP \(bu 2
\fBStatistics:\fP shows the image statistics group
.IP \(bu 2
\fBFrame Rate:\fP shows frame rate (in Hz)
.IP \(bu 2
\fBImage Steps:\fP shows image step widgets for loaded files
.UNINDENT
.sp
\fBImage Source Selection\fP
.sp
allows select, deselect or rearrange order  (by drag and drop) image source items in Image Source ComboBox
.sp
\fBTool Widget Selection\fP
.sp
allows select, deselect or rearrange order (by drag and drop) tool items in Tool Widget ComboBox
.SS Hidra/HTTP/ZMQ/ASAPO/NeXus Image Source Settings
.sp
The third tab of the configuration dialog contains \fBImage Sources\fP configuration.
It allows for the user to adjust image sources and their dialogs.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
\fBHidra\fP
.INDENT 0.0
.IP \(bu 2
\fBDetector servers:\fP  possible hidra detector hosts separated by spaces
.IP \(bu 2
\fBData port:\fP hidra data port or ports separated by spaces (for the multi image source mode). The default port gap in the multi image source mode is 200. Each instance of lavue on the same host should use a different data port.
.IP \(bu 2
\fBUse default detector servers:\fP add default detector server names from the DESY pool
.UNINDENT
.sp
\fBHTTP response\fP
.INDENT 0.0
.IP \(bu 2
\fBURLs:\fP \fI\%JSON\fP dictionary assigning labels to HTTP urls
.UNINDENT
.sp
\fBZMQ Stream\fP
.INDENT 0.0
.IP \(bu 2
\fBServers and Ports:\fP \fI\%JSON\fP dictionary assigning labels to server and port of ZMQ stream
.IP \(bu 2
\fBAutomatic datasources:\fP selects possible datasources from ZMQ stream metadata
.IP \(bu 2
\fBDatasources:\fP defines possible datasources, i.e. ZMQ topics, separated by spaces
.IP \(bu 2
\fBColon conf. separator:\fP use ":" character to separate topic and HWM in the ZMQ configuration string i.e.  host:port[:topic[:HWM]]  ZMQ configuration syntax instead of host:port[/topic[/HWM]]
.UNINDENT
.sp
\fBASAPO\fP
.INDENT 0.0
.IP \(bu 2
\fBServer:\fP ASAPO servers, i.e. host:port
.IP \(bu 2
\fBToken:\fP token to asapo servers
.IP \(bu 2
\fBBeamtime:\fP a name of beamtime used by asapo
.IP \(bu 2
\fBDatasources:\fP defines possible datasource names which are separated by spaces
.IP \(bu 2
\fBSource Path:\fP a path to ASAPO files, e.g. /asap3/petra.gpfs/{beamline}/{year}/data/{beamtime_id}
.UNINDENT
.sp
\fBNexus File\fP
.INDENT 0.0
.IP \(bu 2
\fBKeep the file open:\fP does not close the nexus file after reading the field frame
.IP \(bu 2
\fBStart from the last image:\fP displays only the last image frame
.UNINDENT
.SS Tango/DOOCS/Tine/Epics Image Source Settings
.sp
The fourth tab of the configuration dialog contains \fBImage Sources\fP configuration.
It allows for the user to adjust image sources and their dialogs.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
\fBTango Attribute\fP
.INDENT 0.0
.IP \(bu 2
\fBAttributes:\fP \fI\%JSON\fP dictionary assigning labels to image \fI\%TANGO\fP device attributes
.UNINDENT
.sp
\fBTango Events\fP
.INDENT 0.0
.IP \(bu 2
\fBAttributes:\fP \fI\%JSON\fP dictionary assigning labels to image \fI\%TANGO\fP device attributes
.UNINDENT
.sp
\fBTango File\fP
.INDENT 0.0
.IP \(bu 2
\fBFile Attributes:\fP \fI\%JSON\fP dictionary assigning labels to file \fI\%TANGO\fP device attributes
.IP \(bu 2
\fBDir Attributes:\fP \fI\%JSON\fP dictionary assigning labels to directory \fI\%TANGO\fP device attributes
.IP \(bu 2
\fBFile/Dir translation:\fP \fI\%JSON\fP dictionary translating file path and file names.
 It can be useful when files are automatically copied from detector PC to other location.
.UNINDENT
.sp
\fBDOOCS Property\fP
.INDENT 0.0
.IP \(bu 2
\fBProperties:\fP \fI\%JSON\fP dictionary assigning labels to image \fI\%DOOCS\fP device properties
.UNINDENT
.sp
\fBTine Property\fP
.INDENT 0.0
.IP \(bu 2
\fBProperties:\fP \fI\%JSON\fP dictionary assigning labels to image Tine device properties
.UNINDENT
.sp
\fBEpics PV\fP
.INDENT 0.0
.IP \(bu 2
\fBPV Names:\fP \fI\%JSON\fP dictionary assigning labels to image \fI\%Epics\fP device process variables
.IP \(bu 2
\fBPV Shapes:\fP \fI\%JSON\fP dictionary assigning labels to image \fI\%Epics\fP device process variable shapes
.UNINDENT
.SS Filter plugins settings
.sp
The fifth tab of the configuration dialog contains \fBFilters configuration\fP\&. It allows to add the user filter\-plugins defined by classes or functions in python packages.
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.sp
Filter plugin table buttons:
.INDENT 0.0
.IP \(bu 2
\fBInsert Row Above:\fP inserts  a row for a filter plugin above the selected row
.IP \(bu 2
\fBInsert Row Below:\fP inserts a row for a filter plugin below the selected row
.IP \(bu 2
\fBDelete Row:\fP deletes the selected row
.UNINDENT
.sp
Filter plugin table columns:
.INDENT 0.0
.IP \(bu 2
\fBpackage.module.class or package.module.function:\fP location of user plugin class or function in package.module directories
.IP \(bu 2
\fBinitialization parameters:\fP string which with initialization parameters of filter plugin class constructor
.UNINDENT
.SH LAVUECONTROLLER SERVER
.sp
\fBLavueController\fP server allows for communication with LaVue GUI via tango interface, e.g. with user scripts or macros
.INDENT 0.0
.INDENT 2.5
[image]
.UNINDENT
.UNINDENT
.SS Attributes
.sp
The user can \fBpass to\fP and \fBread back\fP from the LaVue GUI  the following attributes:
.INDENT 0.0
.IP \(bu 2
\fBBeamCenterX\fP: x\-coordinate of the beam center in pixels, e.g. used in \fIAngle/Q Tool\fP
.IP \(bu 2
\fBBeamCenterY\fP: y\-coordinate of the beam center in pixels, e.g. used in \fIAngle/Q Tool\fP
.IP \(bu 2
\fBPixelSizeX\fP: x\-size of the detector pixel  in micrometers, e.g. used in \fIAngle/Q Tool\fP
.IP \(bu 2
\fBPixelSizeY\fP: y\-size of the detector pixel  in micrometers, e.g. used in \fIAngle/Q Tool\fP
.IP \(bu 2
\fBDetectorDistance\fP: detector distance from the sample in mm, e.g. used in \fIAngle/Q Tool\fP
.IP \(bu 2
\fBEnergy\fP:  beam energy in \fIeV\fP, e.g. used in \fIAngle/Q Tool\fP
.IP \(bu 2
\fBDetectorROIs\fP: \fI\%JSON\fP dictionary with  Regions Of Interests ranges, e.g.
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"pilatusrois": [[67, 131, 124, 153], [67, 69, 117, 119], [134, 129, 184, 179]]}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Moreover the user can \fBread\fP from the LaVue GUI:
.INDENT 0.0
.IP \(bu 2
\fBDetectorROIsValues\fP: \fI\%JSON\fP dictionary with Regions Of Interests sums, e.g.
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"pilatusrois": [8167.0, 2262.0, 478.0, 1069.0]}
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBDetectorROIsParams\fP: \fI\%JSON\fP list of image transformations performed by lavue, e.g.
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
["transpose", "flip\-left\-right", "flip\-up\-down"]
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fBToolResults\fP: \fI\%JSON\fP dictionary with tool results, i.e. 1d diffractogram plot or position of peaks
.UNINDENT
.sp
Finally, the user can change state of lavue by writing to
.INDENT 0.0
.IP \(bu 2
\fBLavueState\fP: \fI\%JSON\fP dictionary with lavue configuration with parameters corresponding to command\-line parameters of lavue  (to display them: \fIlavue \-h\fP). The currently supported commands are:  \fIsource\fP, \fIconfiguration\fP, \fIstart\fP, \fIstop\fP, \fIimagefile\fP, \fIoffset\fP, \fIrangewindow\fP, \fIdsfactor\fP, \fIdsreduction\fP, \fIfilters\fP, \fImbuffer\fP, \fImaskfile\fP, \fImaskhighvalue\fP, \fItransformation\fP, \fIscaling\fP, \fIlevels\fP, \fIautofactor\fP, \fIgradient\fP, \fIviewrange\fP, \fItool\fP, \fItoolconfig\fP, \fItangodevice\fP, \fIdoordevice\fP, \fIanalysisdevice\fP, \fIlog\fP\&.
.UNINDENT
.sp
e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
import tango
import json

lc = tango.DeviceProxy("p09/lavuecontroller/1")

# start the Test source
lc.LavueState = json.dumps({"source": "test", "start": True})

# stop an image source
lc.LavueState = json.dumps({"stop":True})

# set the hidra source with a server configured
lc.LavueState = json.dumps({"source": "hidra", "configuration": "haspilatus1m.desy.de"})

# start Tango Attribute image source with a tango attribute from TangoTest server
# lc.LavueState = json.dumps({"source": "tangoattr", "configuration": "sys/tg_test/1/double_image_ro", "start": True})

# set ROI tool in the tool combobox
lc.LavueState = json.dumps({"tool": "roi"})

# set display intensity levels
lc.LavueState = json.dumps({"levels": "m20,20"})

# set level auto factor
lc.LavueState = json.dumps({"autofactor": 1})

# set auto levels
lc.LavueState = json.dumps({"autofactor": ""})

# set mask values above
lc.LavueState = json.dumps({"maskhighvalue": 30000})

# set flip\-up\-down transformation
lc.LavueState = json.dumps({"transformation": "flip\-up\-down"})

# set log intensity scaling
lc.LavueState = json.dumps({"scaling": "log"})

# set eiger image source with configuration defined by alias "eiger"
#   (otherwise you have to set as configuration the whole URL string)
lc.LavueState = json.dumps({"source":"http", "configuration":"eiger", "start":True})
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You can \fBread\fP the current LaVue state via \fBLavueState\fP\&. To update the \fBviewrange\fP parameter write  to \fBLavueState\fP  an empty \fI\%JSON\fP dictionary or \fB{"__update__": true}\fP\&.
.SS Properties
.sp
The \fBDynamicROIsValues\fP device property can be set to true or false. When it is true dynamic attributes with ROIs sums are added.
.sp
They names are defined by ROIs aliases from Lavue GUI.
.sp
The \fBDynamicROIs\fP device property can be set to true or false. When it is true dynamic attributes with ROIs bounds are added.
.sp
They names are defined by ROIs aliases from Lavue GUI.
.sp
The \fBROIAttributesNames\fP device property contains names of dynamic attributes which will be created event if the corresponding ROIs aliases in Lavue GUI are missing.
.SH LAVUE MONITOR
.sp
An example of \fBmonitor script\fP which fetches metadata from the ZMQ security stream is deployed with lavue GUI.
.sp
It can be \fBlaunched\fP via
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavuemonitor
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To get all \fBpossible\fP command\-line \fBparameters\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavuemonitor \-h

usage: lavuemonitor [\-h] [\-i MAXVAL] [\-g TIMEGAP] [\-c COMMAND] [\-r] [\-p PORT]
                    [\-z HOST] [\-t TOPIC] [\-\-debug]

ZMQ Client for laVue status

optional arguments:
  \-h, \-\-help            show this help message and exit
  \-i MAXVAL, \-\-max\-intensity MAXVAL
                        maximal pixel value (default: 1000.)
  \-g TIMEGAP, \-\-time\-gap TIMEGAP
                        maximal time gap in seconds (default: 1.)
  \-c COMMAND, \-\-stop\-command COMMAND
                        stop command
  \-r, \-\-raw             check raw image
  \-p PORT, \-\-port PORT  zmq port (default: automatic)

  \-z HOST, \-\-host HOST  zmq host (default: localhost)
  \-t TOPIC, \-\-topic TOPIC
                        zmq topic (default: 10001)
  \-\-debug               debug mode
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
On debian systems it is installed at \fI/usr/bin/lavuemonitor\fP\&.  \fBBased on\fP it the user can write its own scripts.
.SH ZMQ STREAM SERVER EXAMPLES
.sp
An example of ZMQ Stream server (lavuezmqstreamfromtango) which sends images from TANGO attribribute to lavue via a PICKLE protocol is deployed with the GUI.
.sp
It can be launched by, e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavuezmqstreamfromtango  \-\-port 5535
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Another example of ZMQ Stream server (lavuezmqstreamtest) which sends random images to lavue via a JSON protocol (from v1.27.1) can be launched by, e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavuezmqstreamtest  \-\-port 5535
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To get all possible command\-line parameters
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavuezmqstreamfromtango \-h

usage: lavuezmqstreamfromtango [\-h] [\-g TIMEGAP] [\-p PORT] [\-t TOPIC]
                               [\-n PREFIX] [\-a ATTRIBUTE] [\-\-no\-dict]
                               [\-\-debug]


ZMQ Pickle test server


optional arguments:

  \-h, \-\-help            show this help message and exit
  \-g TIMEGAP, \-\-time\-gap TIMEGAP
                        maximal time gap in seconds (default: 0.1)
  \-p PORT, \-\-port PORT  zmq port (default: automatic)
  \-t TOPIC, \-\-topic TOPIC
                        zmq topic (default: first one from datasources)
  \-n PREFIX, \-\-name\-prefix PREFIX
                        image name prefix
  \-a ATTRIBUTE, \-\-attribute ATTRIBUTE
                        tango attribute (default: sys/tg_test/1/double_image_ro)
  \-\-no\-dict             create zmq stream without dictionary
  \-\-debug               debug mode
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ lavuezmqstreamtest \-h


usage: lavuezmqstreamtest [\-h] [\-g TIMEGAP] [\-p PORT] [\-t TOPIC]
                               [\-n PREFIX] [\-\-no\-dict][\-\-debug]

ZMQ JSON test server

optional arguments:

  \-h, \-\-help            show this help message and exit
  \-g TIMEGAP, \-\-time\-gap TIMEGAP
                        maximal time gap in seconds (default: 0.1)
  \-p PORT, \-\-port PORT  zmq port (default: automatic)
  \-t TOPIC, \-\-topic TOPIC
                        zmq topic (default: first one from datasources)
  \-n PREFIX, \-\-name\-prefix PREFIX
                        image name prefix
  \-\-no\-dict             create zmq stream without dictionary
  \-\-debug               debug mode
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
On debian systems the above scripts are installed at \fI/usr/bin/lavuezmqstreamfromtango\fP .  Based on it the user can write its own servers.
.SH FILTER PLUGINS
.sp
A user \fBFilter plugin\fP can be defined by a \fBclass\fP or a \fBfunction\fP in a python package.
.sp
A \fBfilter plugin\fP defined by a \fBfunction\fP is a simple python function with four arguments: \fInumpy_image\fP, \fIimage_name\fP, \fIJSON_metadata\fP, \fIImageWidget\fP\&.
.sp
This function \fBreturns\fP \fInew_numpy_image\fP or \fINone\fP or \fItuple\fP (\fInew_numpy_image\fP, \fIfiltermetadata_dict\fP) , e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from scipy import ndimage

def rot45(image, imagename, metadata, imagewg):
""" rotate image by 45 deg

:param image: numpy array with an image
:type image: :class:\(ganumpy.ndarray\(ga
:param imagename: image name
:type imagename: :obj:\(gastr\(ga
:param metadata: JSON dictionary with metadata
:type metadata: :obj:\(gastr\(ga
:param imagewg: image wigdet
:type imagewg: :class:\(galavuelib.imageWidget.ImageWidget\(ga
:returns: numpy array with an image
:rtype: :class:\(ganumpy.ndarray\(ga or \(gaNone\(ga
"""
return ndimage.rotate(image, 45)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
A \fBfilter plugin\fP defined by a \fBclass\fP it should have defined \fB__call__\fP method with four arguments: \fInumpy_image\fP, \fIimage_name\fP, \fIJSON_metadata\fP, \fIImageWidget\fP\&.
.sp
This \fB__call__\fP function returns \fInew_numpy_image\fP or \fINone\fP or \fItuple\fP  (\fInew_numpy_image\fP, \fIfiltermetadata_dict\fP) .
.sp
Moreover, the class \fIconstructor\fP has one configuration string argument initialized by an initialization parameter, e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
import numpy as np
import json


class HGap(object):

""" Horizontal gap filter"""

def __init__(self, configuration=None):
    """ converts the configuration string into a list of indexes

    :param configuration: JSON list with horizontal gap pixels to add
    :type configuration: :obj:\(gastr\(ga
    """
    #: (:obj:\(galist\(ga <:obj: \(gastr\(ga>) list of indexes for gap
    self.__indexes = [int(idx) for idx in json.loads(configuration)]

def __call__(self, image, imagename, metadata, imagewg):
    """ inserts rows into the image

    :param image: numpy array with an image
    :type image: :class:\(ganumpy.ndarray\(ga
    :param imagename: image name
    :type imagename: :obj:\(gastr\(ga
    :param metadata: JSON dictionary with metadata
    :type metadata: :obj:\(gastr\(ga
    :param imagewg: image wigdet
    :type imagewg: :class:\(galavuelib.imageWidget.ImageWidget\(ga
    :returns: numpy array with an image
    :rtype: :class:\(ganumpy.ndarray\(ga or \(gaNone\(ga
    """
    return np.insert(image, self.__indexes, 0, axis=1)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Moreover,  it can have an \fBinitialize()\fP or \fBterminate()\fP method to perform an action of switching \fBon\fP or \fBoff\fP filters respectively.
.sp
More sophisticated examples can be found at \fI\%lavuefilters\fP:
.INDENT 0.0
.IP \(bu 2
\fIlavuefilters.memoplugins.HistoryDump\fP contains a filter which collects distinct images displayed by lavue in memory
.IP \(bu 2
\fIlavuefilters.h5pyplugins.H5PYdumpdiff\fP contains a filter which dumps distict images displayed by lavue to an hdf5 file
.IP \(bu 2
\fIlavuefilters.h5pyplugins.H5PYdump\fP contains a filter which dumps images displayed by lavue to an hdf5 file
.UNINDENT
.sp
To configure filters see filter\-plugins\-settings\&.
.SH DEVELOPER GUIDE
.SS API reference
.SS lavuelib package
.SS Subpackages
.SS lavuelib.plugins package
.SS lavuelib.plugins.filters module
.sp
set of image sources
.INDENT 0.0
.TP
.B class lavuelib.plugins.filters.HGap(configuration=None)
Bases: \fI\%object\fP
.sp
Horizontal gap filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- JSON list with horizontal gap pixels to add
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.plugins.filters.VGap(configuration=None)
Bases: \fI\%object\fP
.sp
Vertical gap filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- JSON list with vertical gap pixels to add
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.plugins.filters.WeightedSum(configuration=None)
Bases: \fI\%object\fP
.sp
Weighted sum of channel images
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- JSON list of channel image weights
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.plugins.filters.rot45(image, imagename, metadata, imagewg)
rotate image by 45 deg
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBimage\fP (\fI\%numpy.ndarray\fP) \-\- numpy array with an image
.IP \(bu 2
\fBimagename\fP (\fI\%str\fP) \-\- image name
.IP \(bu 2
\fBmetadata\fP (\fI\%str\fP) \-\- JSON dictionary with metadata
.IP \(bu 2
\fBimagewg\fP (\fBlavuelib.imageWidget.ImageWidget\fP) \-\- image wigdet
.UNINDENT
.TP
.B Returns
numpy array with an image
.TP
.B Return type
\fI\%numpy.ndarray\fP or \fINone\fP
.UNINDENT
.UNINDENT
.SS Submodules
.SS lavuelib.axesDialog module
.sp
detector axis widget
.INDENT 0.0
.TP
.B class lavuelib.axesDialog.AxesDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
detector axis widget class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B xposition
(\fI\%float\fP) x\-coordinates of the first pixel
.UNINDENT
.INDENT 7.0
.TP
.B xscale
(\fI\%float\fP) x\-scale of pixels
.UNINDENT
.INDENT 7.0
.TP
.B xtext
(\fI\%str\fP) text of x\-axis
.UNINDENT
.INDENT 7.0
.TP
.B xunits
(\fI\%str\fP) units of x\-axis
.UNINDENT
.INDENT 7.0
.TP
.B yposition
(\fI\%float\fP) y\-coordinates of the first pixel
.UNINDENT
.INDENT 7.0
.TP
.B yscale
(\fI\%float\fP) y\-scale of pixels
.UNINDENT
.INDENT 7.0
.TP
.B ytext
(\fI\%str\fP) text of y\-axis
.UNINDENT
.INDENT 7.0
.TP
.B yunits
(\fI\%str\fP) units of y\-axis
.UNINDENT
.UNINDENT
.SS lavuelib.bkgSubtractionWidget module
.sp
background subtraction widget
.INDENT 0.0
.TP
.B class lavuelib.bkgSubtractionWidget.BkgSubtractionWidget(parent=None, settings=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Define bkg image and subtract from displayed image.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBsettings\fP (\fI\%lavuelib.settings.Settings\fP) \-\- lavue configuration settings
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B applyStateChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) apply state change signal
.UNINDENT
.INDENT 7.0
.TP
.B bkgFileSelected
(\fBpyqtgraph.QtCore.pyqtSignal\fP) bkg file selected signal
.UNINDENT
.INDENT 7.0
.TP
.B bkgScalingFactor()
provides background scaling factor
.INDENT 7.0
.TP
.B Returns
background scaling factor
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B bkgScalingFactorChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) bkg scaling factor change signal
.UNINDENT
.INDENT 7.0
.TP
.B checkBkgSubtraction(state)
unchecks apply CheckBox if state is 1 and it is checked
and reset the display
.INDENT 7.0
.TP
.B Parameters
\fBstate\fP (\fI\%int\fP) \-\- checkbox state
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isBkgSubApplied()
if background subtraction applied
:returns: apply status
:rtype: \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B setBackground(fname)
sets the image background
.INDENT 7.0
.TP
.B Parameters
\fBfname\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setBkgScalingFactor(scale)
sets the background scaling factor
.INDENT 7.0
.TP
.B Parameters
\fBscale\fP (\fI\%float\fP or \fI\%str\fP) \-\- background scaling factor
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDisplayedName(name)
sets displayed file name
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showScalingFactors(show=True)
.UNINDENT
.INDENT 7.0
.TP
.B useCurrentImageAsBkg
(\fBpyqtgraph.QtCore.pyqtSignal\fP) use current image signal
.UNINDENT
.UNINDENT
.SS lavuelib.channelGroupBox module
.sp
level widget
.INDENT 0.0
.TP
.B class lavuelib.channelGroupBox.ChannelGroupBox(parent=None, settings=None, expertmode=False)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Set minimum and maximum displayed values and its color.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBsettings\fP (\fI\%lavuelib.settings.Settings\fP) \-\- lavue configuration settings
.IP \(bu 2
\fBexpertmode\fP (\fI\%bool\fP) \-\- expert mode flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changeView(showlevels=None)
shows or hides the histogram widget
.INDENT 7.0
.TP
.B Parameters
\fBshowlevels\fP (\fI\%bool\fP) \-\- if levels should be shown
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B channelChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) color channel changed signal
.UNINDENT
.INDENT 7.0
.TP
.B channelLabel()
provides color channel label
.INDENT 7.0
.TP
.B Returns
color channel label
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B channelLabels()
provides channel labels
.INDENT 7.0
.TP
.B Returns
list of channel labels
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B colorChannel()
provides color channel
.INDENT 7.0
.TP
.B Returns
color channel
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rgbChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) rgb color channel changed signal
.UNINDENT
.INDENT 7.0
.TP
.B rgbchannels()
.UNINDENT
.INDENT 7.0
.TP
.B setChannel(channel, force=False)
sets color channel
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBchannel\fP (\fI\%int\fP) \-\- color channel
.IP \(bu 2
\fBforce\fP (\fI\%bool\fP) \-\- force change
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setChannelItemText(iid, text)
sets channel item text
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBiid\fP (\fI\%str\fP) \-\- label id
.IP \(bu 2
\fBiid\fP \-\- label text
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDefaultColorChannel(channel)
sets default color channel
.INDENT 7.0
.TP
.B Parameters
\fBchannel\fP (\fI\%int\fP or \fI\%int\fP) \-\- default color channel(s)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setNumberOfChannels(number)
sets maximum number of color channel
.INDENT 7.0
.TP
.B Parameters
\fBnumber\fP (\fI\%int\fP) \-\- number of color channel
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showGradient(status=True)
resets color channel
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- show gradient flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateBChannel()
update blue channel
.UNINDENT
.INDENT 7.0
.TP
.B updateChannelLabels(chlabels=None)
update channel labels
.INDENT 7.0
.TP
.B Parameters
\fBchlabels\fP (\fI\%dict\fP <\fI\%int\fP \fI\%str\fP>) \-\- dictionary with channel labels
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateGChannel()
update green channel
.UNINDENT
.INDENT 7.0
.TP
.B updateRChannel()
update red channel
.UNINDENT
.UNINDENT
.SS lavuelib.commandThread module
.sp
command thread
.INDENT 0.0
.TP
.B class lavuelib.commandThread.CommandThread(instance, commands, parent)
Bases: \fI\%lavuelib.omniQThread.OmniQThread\fP
.sp
thread which executes a list of commands
.sp
thread contructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBinstance\fP (\fBinstanceobj\fP or \fI\%type\fP) \-\- command instance
.IP \(bu 2
\fBcommands\fP (\fI\%list\fP <\fI\%str\fP>) \-\- a list of commands
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- thread parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B commands
(\fI\%list\fP <\fI\%str\fP>) a list of commands
.UNINDENT
.INDENT 7.0
.TP
.B error
(\fI\%Exception\fP) error thrown by the executed command
.UNINDENT
.INDENT 7.0
.TP
.B finished
(\fBpyqtgraph.QtCore.pyqtSignal\fP) finished signal
.UNINDENT
.INDENT 7.0
.TP
.B instance
(\fBinstanceobj\fP or \fI\%type\fP) command instance
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.commandThread.logger = <Logger lavuelib.commandThread (WARNING)>
(\fI\%logging.Logger\fP) logger object
.UNINDENT
.SS lavuelib.configDialog module
.sp
configuration widget
.INDENT 0.0
.TP
.B class lavuelib.configDialog.ConfigDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accelbuffersum
(\fI\%bool\fP) accelerate buffer sum
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B addrois
(\fI\%bool\fP) add rois enabled
.UNINDENT
.INDENT 7.0
.TP
.B asapobeamtime
(\fI\%str\fP) asapo beamtime id
.UNINDENT
.INDENT 7.0
.TP
.B asapodatasources
(\fI\%list\fP < \fI\%str\fP > ) asapo datasources
.UNINDENT
.INDENT 7.0
.TP
.B asaposerver
(\fI\%str\fP) asapo server
.UNINDENT
.INDENT 7.0
.TP
.B asaposourcepath
(\fI\%str\fP) asapo sourcepath
.UNINDENT
.INDENT 7.0
.TP
.B asapotoken
(\fI\%str\fP) asapo token
.UNINDENT
.INDENT 7.0
.TP
.B aspectlocked
(\fI\%bool\fP) aspect ratio locked
.UNINDENT
.INDENT 7.0
.TP
.B autodownsample
(\fI\%bool\fP) auto down sample
.UNINDENT
.INDENT 7.0
.TP
.B autorefreshtime
(\fI\%bool\fP) auto enlarge refresh time
.UNINDENT
.INDENT 7.0
.TP
.B autozmqtopics
(\fI\%bool\fP) topics for ZMQ stream source fetched from the stream
.UNINDENT
.INDENT 7.0
.TP
.B availimagesources
(\fI\%str\fP) list with available image source widget names
.UNINDENT
.INDENT 7.0
.TP
.B availtoolwidgets
(\fI\%str\fP)  list with available tool widget names
.UNINDENT
.INDENT 7.0
.TP
.B calcvariance
(\fI\%bool\fP) calculate variance
.UNINDENT
.INDENT 7.0
.TP
.B correctsolidangle
(\fI\%bool\fP) correct solid angle flag
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B crosshairlocker
(\fI\%bool\fP) crosshair locker switched on
.UNINDENT
.INDENT 7.0
.TP
.B defdetservers
(\fI\%bool\fP) use default detector servers
.UNINDENT
.INDENT 7.0
.TP
.B detservers
(\fI\%str\fP) json hidra detector server list
.UNINDENT
.INDENT 7.0
.TP
.B diffnpt
(\fI\%int\fP) number of points for diffractogram
.UNINDENT
.INDENT 7.0
.TP
.B door
(\fI\%str\fP) device name of sardana door
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B filters
(\fI\%str\fP) json list with filters
.UNINDENT
.INDENT 7.0
.TP
.B floattype
(\fI\%str\fP) float type for pixel intensity
.UNINDENT
.INDENT 7.0
.TP
.B geometryfromsource
(\fI\%bool\fP) fetch geometry from source
.UNINDENT
.INDENT 7.0
.TP
.B gradientcolors
(\fI\%bool\fP) image channels shown with gradient colors
.UNINDENT
.INDENT 7.0
.TP
.B hidraport
(\fI\%str\fP) hidra data port
.UNINDENT
.INDENT 7.0
.TP
.B imagechannels
(\fI\%bool\fP) map image sources to color channels
.UNINDENT
.INDENT 7.0
.TP
.B imagesources
(\fI\%str\fP) json list with image source widget names
.UNINDENT
.INDENT 7.0
.TP
.B interruptonerror
(\fI\%bool\fP) interrupt on error
.UNINDENT
.INDENT 7.0
.TP
.B keepcoords
(\fI\%bool\fP) keep original coordinates
.UNINDENT
.INDENT 7.0
.TP
.B lazyimageslider
(\fI\%bool\fP) lazy image slider
.UNINDENT
.INDENT 7.0
.TP
.B maxmbuffersize
(\fI\%str\fP) maximal number of images in memory buffer
.UNINDENT
.INDENT 7.0
.TP
.B nanmask
(\fI\%bool\fP) nan mask enabled
.UNINDENT
.INDENT 7.0
.TP
.B negmask
(\fI\%bool\fP) adding maximal type value to negative high value mask
.UNINDENT
.INDENT 7.0
.TP
.B nrsources
(\fI\%int\fP) number of image sources
.UNINDENT
.INDENT 7.0
.TP
.B nxslast
(\fI\%bool\fP) nexus file source starts from the last image
.UNINDENT
.INDENT 7.0
.TP
.B nxsopen
(\fI\%bool\fP) nexus file source keeps the file open
.UNINDENT
.INDENT 7.0
.TP
.B orderrois
(\fI\%bool\fP) fetch rois order enabled
.UNINDENT
.INDENT 7.0
.TP
.B overflowcolor
(\fI\%str\fP) json list with overflow color
.UNINDENT
.INDENT 7.0
.TP
.B refreshtime
(\fI\%float\fP) refresh time in s
.UNINDENT
.INDENT 7.0
.TP
.B roiscolors
(\fI\%str\fP) json list with rois colors
.UNINDENT
.INDENT 7.0
.TP
.B sardana
(\fI\%bool\fP) sardana enabled
.UNINDENT
.INDENT 7.0
.TP
.B secautoport
(\fI\%bool\fP) find security stream port automatically
.UNINDENT
.INDENT 7.0
.TP
.B secport
(\fI\%str\fP) security stream port
.UNINDENT
.INDENT 7.0
.TP
.B secstream
(\fI\%bool\fP) security stream enabled
.UNINDENT
.INDENT 7.0
.TP
.B sendresults
(\fI\%bool\fP) send results to LavueController flag
.UNINDENT
.INDENT 7.0
.TP
.B sendrois
(\fI\%bool\fP) send rois to LavueController flag
.UNINDENT
.INDENT 7.0
.TP
.B showaddhisto
(\fI\%bool\fP) show color distribution additional histogram widget
.UNINDENT
.INDENT 7.0
.TP
.B showallrois
(\fI\%bool\fP) show all rois flag
.UNINDENT
.INDENT 7.0
.TP
.B showfilters
(\fI\%bool\fP) show filter widget
.UNINDENT
.INDENT 7.0
.TP
.B showframerate
(\fI\%bool\fP) show frame rate widget
.UNINDENT
.INDENT 7.0
.TP
.B showhighvaluemask
(\fI\%bool\fP) show high value mask widget
.UNINDENT
.INDENT 7.0
.TP
.B showhisto
(\fI\%bool\fP) show color distribution histogram widget
.UNINDENT
.INDENT 7.0
.TP
.B showlevels
(\fI\%bool\fP) show intensity levels widget
.UNINDENT
.INDENT 7.0
.TP
.B showmask
(\fI\%bool\fP) show mask widget
.UNINDENT
.INDENT 7.0
.TP
.B showmbuffer
(\fI\%bool\fP) show memory buffer widget
.UNINDENT
.INDENT 7.0
.TP
.B shownorm
(\fI\%bool\fP) show image normalization widget
.UNINDENT
.INDENT 7.0
.TP
.B shownormsf
(\fI\%bool\fP) show image normalization scaling factor widget
.UNINDENT
.INDENT 7.0
.TP
.B showoverflow
(\fI\%bool\fP) show intensity overflow widget
.UNINDENT
.INDENT 7.0
.TP
.B showrange
(\fI\%bool\fP) show range window widget
.UNINDENT
.INDENT 7.0
.TP
.B showscale
(\fI\%bool\fP) show intensity scale widget
.UNINDENT
.INDENT 7.0
.TP
.B showstats
(\fI\%bool\fP) show statistics widget
.UNINDENT
.INDENT 7.0
.TP
.B showsteps
(\fI\%bool\fP) show image step widget
.UNINDENT
.INDENT 7.0
.TP
.B showsub
(\fI\%bool\fP) show bakcground subtraction widget
.UNINDENT
.INDENT 7.0
.TP
.B showsubsf
(\fI\%bool\fP) show bakcground subtraction scaling factor widget
.UNINDENT
.INDENT 7.0
.TP
.B showtrans
(\fI\%bool\fP) show transformation widget
.UNINDENT
.INDENT 7.0
.TP
.B singlerois
(\fI\%bool\fP) set roi1, roi2, roi3, ... when alias names are missing
.UNINDENT
.INDENT 7.0
.TP
.B sourcedisplay
(\fI\%bool\fP) store display parameters for specific sources
.UNINDENT
.INDENT 7.0
.TP
.B statswoscaling
(\fI\%bool\fP) statistics without intensity scaling
.UNINDENT
.INDENT 7.0
.TP
.B storegeometry
(\fI\%bool\fP) store detector geometry
.UNINDENT
.INDENT 7.0
.TP
.B timeout
(\fI\%int\fP) image source timeout in ms
.UNINDENT
.INDENT 7.0
.TP
.B toolpollinginterval
(\fI\%float\fP) tool polling interval is s
.UNINDENT
.INDENT 7.0
.TP
.B toolrefreshtime
(\fI\%float\fP) tool refresh time is s
.UNINDENT
.INDENT 7.0
.TP
.B toolwidgets
(\fI\%str\fP)  json list with tool widget names
.UNINDENT
.INDENT 7.0
.TP
.B zeromask
(\fI\%bool\fP) zero mask enabled
.UNINDENT
.INDENT 7.0
.TP
.B zmqcolon
(\fI\%bool\fP) zmq colon configuration separator
.UNINDENT
.INDENT 7.0
.TP
.B zmqtopics
(\fI\%list\fP < \fI\%str\fP>) list of topics for ZMQ stream source
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.configDialog.TableWidgetDragCheckBoxes(parent)
Bases: \fBPyQt5.QtWidgets.QTableWidget\fP
.sp
TableWidget with drag and drop checkboxes
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B create(selected, available, itemnames=None)
populates table
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBselected\fP (\fI\%list\fP < \fI\%str\fP>) \-\- all selected aliases
.IP \(bu 2
\fBavailable\fP (\fI\%list\fP < \fI\%str\fP>) \-\- all available aliases
.IP \(bu 2
\fBitemnames\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- dictionary of alias names
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dropEvent(event)
replaces rows in the table
.INDENT 7.0
.TP
.B Parameters
\fBevent\fP (\fBpyqtgraph.QtCore.QEvent\fP:) \-\- drop event
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getChecks(available)
update checks in checkboxdata
.INDENT 7.0
.TP
.B Parameters
\fBavailable\fP (\fI\%list\fP < \fI\%str\fP>) \-\- all available aliases
.TP
.B Returns
all selected aliases
.TP
.B Return type
\fI\%list\fP < \fI\%str\fP>
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.controllerClient module
.sp
tango lavue controller client
.INDENT 0.0
.TP
.B class lavuelib.controllerClient.ControllerClient(device)
Bases: \fBPyQt5.QtCore.QObject\fP
.sp
lavue controller client
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBdevice\fP (\fI\%str\fP) \-\- tango device name
.UNINDENT
.INDENT 7.0
.TP
.B beamCenterXChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) beam Center X changed signal
.UNINDENT
.INDENT 7.0
.TP
.B beamCenterYChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) beam Center Y changed signal
.UNINDENT
.INDENT 7.0
.TP
.B detectorDistanceChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) detector distance changed signal
.UNINDENT
.INDENT 7.0
.TP
.B detectorROIsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) detector ROIs changed signal
.UNINDENT
.INDENT 7.0
.TP
.B device()
provides tango device name
.INDENT 7.0
.TP
.B Returns
tango device name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B energyChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) energy changed signal
.UNINDENT
.INDENT 7.0
.TP
.B lavueStateChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) lavueState changed signal
.UNINDENT
.INDENT 7.0
.TP
.B pixelSizeXChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) pixel Size X changed signal
.UNINDENT
.INDENT 7.0
.TP
.B pixelSizeYChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) pixel Size Y changed signal
.UNINDENT
.INDENT 7.0
.TP
.B subscribe()
subscribe callback methods
.UNINDENT
.INDENT 7.0
.TP
.B unsubscribe()
unsubscribe callback methods
.UNINDENT
.INDENT 7.0
.TP
.B writeAttribute(name, value)
writes attribute value of device
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- attribute value
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.controllerClient.TANGO = True
(\fI\%bool\fP) tango imported
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.controllerClient.TangoCB(client, name, signal)
Bases: \fI\%object\fP
.sp
tango attribute callback class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBclient\fP (\fI\%str\fP) \-\- tango controller client
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBsignal\fP (\fBpyqtgraph.QtCore.pyqtSignal\fP) \-\- signal to emit
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B push_event(*args, **kwargs)
callback method receiving the event
.UNINDENT
.UNINDENT
.SS lavuelib.dataFetchThread module
.sp
data fetch thread
.INDENT 0.0
.TP
.B class lavuelib.dataFetchThread.DataFetchThread(datasource, alist, tid=0)
Bases: \fI\%lavuelib.omniQThread.OmniQThread\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdatasource\fP (\fI\%lavuelib.imageSource.BaseSource\fP) \-\- image source
.IP \(bu 2
\fBalist\fP (\fI\%ExchangeList\fP) \-\- exchange object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changeStatus(status)
change connection status
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- connection status
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B fetching()
provides read flag
.UNINDENT
.INDENT 7.0
.TP
.B getTimeStamp()
get time stamp
.INDENT 7.0
.TP
.B Returns
time stamp
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isFetching()
is datasource source connected
.INDENT 7.0
.TP
.B Returns
if datasource source connected
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B newDataNameFetched
(\fBpyqtgraph.QtCore.pyqtSignal\fP) new data name signal
.UNINDENT
.INDENT 7.0
.TP
.B ready()
continue acquisition
.UNINDENT
.INDENT 7.0
.TP
.B setDataSource(datasource)
sets datasource
:param datasource: datasource object
:type datasource: \fI\%lavuelib.imageSource.BaseSource\fP
.UNINDENT
.INDENT 7.0
.TP
.B setTimeStamp(tmstamp)
set time stamp
.INDENT 7.0
.TP
.B Parameters
\fBtmstamp\fP (\fI\%int\fP) \-\- set timestamp
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B stop()
stop the thread
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.dataFetchThread.ExchangeList
Bases: \fI\%object\fP
.sp
subclass for data caching
.sp
constructor
.INDENT 7.0
.TP
.B addData(name, data, metadata=\(aq\(aq)
write data into exchange object
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- image name
.IP \(bu 2
\fBdata\fP (\fI\%numpy.ndarray\fP) \-\- image data
.IP \(bu 2
\fBmetadata\fP (\fI\%str\fP) \-\- json dictionary with image metadata
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B readData()
read data from exchange object
.INDENT 7.0
.TP
.B Returns
tuple of exchange object (name, data, metadata)
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP, \fI\%numpy.ndarray\fP, \fI\%str\fP >
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.dataFetchThread.GLOBALAUTOREFRESHTIME = True
(\fI\%bool\fP) auto enlarge time
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.dataFetchThread.GLOBALREFRESHTIME = 0.1
(\fI\%float\fP) refresh time in seconds
.UNINDENT
.SS lavuelib.diffRangeDialog module
.sp
detector range widget
.INDENT 0.0
.TP
.B class lavuelib.diffRangeDialog.DiffRangeTabDialog(nranges=1, parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
diffractogram range widget class
.sp
constructort
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B azend
(\fI\%float\fP) end position of azimuth angle
.UNINDENT
.INDENT 7.0
.TP
.B azstart
(\fI\%float\fP) start position of azimuth angle
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B radend
(\fI\%float\fP) end position of radial coordinate
.UNINDENT
.INDENT 7.0
.TP
.B radstart
(\fI\%float\fP) start position of radial coordinate
.UNINDENT
.INDENT 7.0
.TP
.B radunitindex
(\fI\%int\fP) radial angle index
.UNINDENT
.INDENT 7.0
.TP
.B radunits
(\fI\%list\fP <\fBunicode\fP>) list of units
.UNINDENT
.UNINDENT
.SS lavuelib.displayExtensions module
.sp
image display widget
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.BaseMarkExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
base mark extension
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes Mark Position lines
.UNINDENT
.INDENT 7.0
.TP
.B updatePositionMark(xdata, ydata, scaled=False)
updates the position mark
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBxdata\fP (\fI\%float\fP) \-\- x pixel position
.IP \(bu 2
\fBydata\fP (\fI\%float\fP) \-\- y\-pixel position
.IP \(bu 2
\fBscaled\fP (\fI\%bool\fP) \-\- scaled flag
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.CenterExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B mouse_doubleclick(x, y, locked)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.IP \(bu 2
\fBlocked\fP (\fI\%bool\fP) \-\- double click lock
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mouse_position(x, y)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes Center lines
.UNINDENT
.INDENT 7.0
.TP
.B updateCenter(xdata, ydata)
updates the image center
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBxdata\fP (\fI\%float\fP) \-\- x pixel position
.IP \(bu 2
\fBydata\fP (\fI\%float\fP) \-\- y\-pixel position
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.CutExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B changeCutRegion(_=None)
changes the current roi region
.UNINDENT
.INDENT 7.0
.TP
.B currentCut()
provides current cut id
.INDENT 7.0
.TP
.B Returns
cut id
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B cutCoords()
provides cuts coordinates
.INDENT 7.0
.TP
.B Returns
cuts coordinates
.TP
.B Return type
\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B cutCoordsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) cut coordinate changed signal
.UNINDENT
.INDENT 7.0
.TP
.B cutData(cid=None)
provides the current cut data
.INDENT 7.0
.TP
.B Parameters
\fBcid\fP (\fI\%int\fP) \-\- cut id
.TP
.B Returns
current cut data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isCutsEnabled()
provides flag cuts enabled
.INDENT 7.0
.TP
.B Returns
cut enabled flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes Cuts
.UNINDENT
.INDENT 7.0
.TP
.B updateCuts(cid, coords)
update Cuts
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcid\fP (\fI\%int\fP) \-\- cut id
.IP \(bu 2
\fBcoords\fP (\fI\%list\fP < [float, float, float, float] >) \-\- cut coordinates
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.DisplayExtension(parent=None)
Bases: \fBPyQt5.QtCore.QObject\fP
.sp
display extension for ImageDisplayWidget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B coordinates()
returns coordinates
.UNINDENT
.INDENT 7.0
.TP
.B enabled()
is extension enabled
.INDENT 7.0
.TP
.B Returns
is extension enabled
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mouse_click(x, y)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mouse_doubleclick(x, y, locked)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.IP \(bu 2
\fBlocked\fP (\fI\%bool\fP) \-\- double click lock
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mouse_position(x, y)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) extension name
.UNINDENT
.INDENT 7.0
.TP
.B refreshTime()
provides refresh time
.INDENT 7.0
.TP
.B Returns
refresh time in seconds
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scalingLabel()
provides scaling label
.INDENT 7.0
.TP
.B Returns
scaling label
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setRefreshTime(refreshtime)
sets refresh time
.INDENT 7.0
.TP
.B Parameters
\fBrefreshtime\fP (\fI\%float\fP) \-\- refresh time in seconds
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes subwidget
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.HandleWithSignals(pos, center, parent)
Bases: \fBpyqtgraph.graphicsItems.ROI.Handle\fP
.sp
handle with signals
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpos\fP (\fI[\fP\fI\%float\fP\fI, \fP\fI\%float\fP\fI]\fP) \-\- position of handle
.IP \(bu 2
\fBcenter\fP (\fI[\fP\fI\%float\fP\fI, \fP\fI\%float\fP\fI]\fP) \-\- center of handle
.IP \(bu 2
\fBparent\fP (\fI\%pyqtgraph.graphicsItems.ROI.ROI\fP) \-\- roi object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B hoverEvent(ev)
hover event
.INDENT 7.0
.TP
.B Parameters
\fBev\fP (\fBpyqtgraph.QtCore.QEvent\fP:) \-\- close event
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B hovered
(\fBpyqtgraph.QtCore.pyqtSignal\fP) hover event emitted
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.LockerExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B coordinates()
returns coordinates
.UNINDENT
.INDENT 7.0
.TP
.B mouse_doubleclick(x, y, locked)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.IP \(bu 2
\fBlocked\fP (\fI\%bool\fP) \-\- double click lock
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mouse_position(x, y)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes locker lines
.UNINDENT
.INDENT 7.0
.TP
.B updateLocker(xdata, ydata)
updates the locker position
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBxdata\fP (\fI\%float\fP) \-\- x pixel position
.IP \(bu 2
\fBydata\fP (\fI\%float\fP) \-\- y\-pixel position
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.MarkExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.BaseMarkExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B mouse_doubleclick(x, y, locked)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.IP \(bu 2
\fBlocked\fP (\fI\%bool\fP) \-\- double click lock
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mouse_position(x, y)
sets vLine and hLine positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y coordinate
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.MaximaExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B setMaximaPos(positionlist, offset=None)
sets maxima postions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpositionlist\fP (\fI\%list\fP < (float, float) >) \-\- [(x1, y1), ... , (xn, yn)]
.IP \(bu 2
\fBoffset\fP ([ \fI\%float\fP, \fI\%float\fP]) \-\- offset of position
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes maxima
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.MeshExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B changeROIRegion(_=None)
changes the current roi region
.UNINDENT
.INDENT 7.0
.TP
.B currentROI()
provides current roi id
.INDENT 7.0
.TP
.B Returns
roi id
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isROIsEnabled()
provides flag rois enabled
.INDENT 7.0
.TP
.B Returns
roi enabled flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B roiCoords()
provides rois coordinates
.INDENT 7.0
.TP
.B Returns
rois coordinates
.TP
.B Return type
\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B roiCoordsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi coordinate changed signal
.UNINDENT
.INDENT 7.0
.TP
.B scalingLabel()
provides scaling label
.INDENT 7.0
.TP
.B Returns
scaling label
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes ROIs
.UNINDENT
.INDENT 7.0
.TP
.B updateROIs(rid, coords)
update ROIs
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrid\fP (\fI\%int\fP) \-\- roi id
.IP \(bu 2
\fBcoords\fP (\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >) \-\- roi coordinates
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.ROIExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B calcROIsum()
calculates the current roi sum
.INDENT 7.0
.TP
.B Returns
sum roi value, roi id
.TP
.B Return type
(\fI\%float\fP, \fI\%int\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B calcROIsums()
calculates all roi sums
.INDENT 7.0
.TP
.B Returns
sum roi value, roi id
.TP
.B Return type
:obj:list < float >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changeROIRegion(_=None)
changes the current roi region
.UNINDENT
.INDENT 7.0
.TP
.B currentROI()
provides current roi id
.INDENT 7.0
.TP
.B Returns
roi id
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isROIsEnabled()
provides flag rois enabled
.INDENT 7.0
.TP
.B Returns
roi enabled flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B roiCoords()
provides rois coordinates
.INDENT 7.0
.TP
.B Returns
rois coordinates
.TP
.B Return type
\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B roiCoordsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi coordinate changed signal
.UNINDENT
.INDENT 7.0
.TP
.B scalingLabel()
provides scaling label
.INDENT 7.0
.TP
.B Returns
scaling label
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setColors(colors=None)
sets colors
.INDENT 7.0
.TP
.B Parameters
\fBcolors\fP (\fI\%str\fP) \-\- json list of roi colors
.TP
.B Returns
change status
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes ROIs
.UNINDENT
.INDENT 7.0
.TP
.B updateROIs(rid, coords)
update ROIs
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrid\fP (\fI\%int\fP) \-\- roi id
.IP \(bu 2
\fBcoords\fP (\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >) \-\- roi coordinates
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.RegionItem(points=None, pen=\(aqw\(aq, **args)
Bases: \fI\%pyqtgraph.graphicsItems.IsocurveItem.IsocurveItem\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpoints\fP (\fI\%list\fP < (float, float) >) \-\- list of points
.IP \(bu 2
\fBpen\fP (\fBpyqtgraph.QtGui.QPen\fP) \-\- qt pen
.IP \(bu 2
\fBargs\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- more params
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B generatePath()
generate QPainterPath
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.RegionsExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B currentRegion()
provides current region id
.INDENT 7.0
.TP
.B Returns
region id
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isRegionEnabled()
provides flag regions enabled
.INDENT 7.0
.TP
.B Returns
region enabled flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B regionPoints()
provides region coordinates
.INDENT 7.0
.TP
.B Returns
region coordinates
.TP
.B Return type
\fI\%list\fP <  \fI\%list\fP <  \fI\%list\fP
< (\fI\%float\fP, \fI\%float\fP) > > >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B regionPointsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) region points changed signal
.UNINDENT
.INDENT 7.0
.TP
.B scalingLabel()
provides scaling label
.INDENT 7.0
.TP
.B Returns
scaling label
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setColors(colors=None)
sets colors
.INDENT 7.0
.TP
.B Parameters
\fBcolors\fP (\fI\%str\fP) \-\- json list of roi colors
.TP
.B Returns
change status
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transpose()
transposes Regions
.UNINDENT
.INDENT 7.0
.TP
.B updateRegions(points, rid=None)
update Regions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrid\fP (\fI\%int\fP) \-\- rng id
.IP \(bu 2
\fBpoints\fP (\fI\%list\fP <  \fI\%list\fP <  \fI\%list\fP
< (\fI\%float\fP, \fI\%float\fP) > > >) \-\- rng coordinates
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.SimpleLineROI(pos1, pos2, width=1e\-05, **args)
Bases: \fI\%pyqtgraph.graphicsItems.ROI.LineROI\fP
.sp
simple line roi
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpos1\fP (\fI[\fP\fI\%float\fP\fI, \fP\fI\%float\fP\fI]\fP) \-\- start position
.IP \(bu 2
\fBpos2\fP (\fI[\fP\fI\%float\fP\fI, \fP\fI\%float\fP\fI]\fP) \-\- end position
.IP \(bu 2
\fBargs\fP (\fBdict\(ga<:obj:\(gastr\fP, \fI\%any\fP>) \-\- dictionary with ROI parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getCoordinates()
provides the roi coordinates
.INDENT 7.0
.TP
.B Parameters
\fBtrans\fP (\fI\%bool\fP) \-\- transposed flag
.TP
.B Returns
x1, y1, x2, y2 positions of the roi
.TP
.B Return type
[\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP]
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.TrackingExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.BaseMarkExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.displayExtensions.VHBoundsExtension(parent=None)
Bases: \fI\%lavuelib.displayExtensions.DisplayExtension\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B show(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateHBounds(ydata1, ydata2)
updates the horizontal bounds
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBydata1\fP (\fI\%float\fP) \-\- first y\-pixel position
.IP \(bu 2
\fBydata2\fP (\fI\%float\fP) \-\- second y\-pixel position
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateVBounds(xdata1, xdata2)
updates the vertical bounds
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBxdata1\fP (\fI\%float\fP) \-\- first x\-pixel position
.IP \(bu 2
\fBxdata2\fP (\fI\%float\fP) \-\- second x\-pixel position
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.edDictDialog module
.sp
editable list dialog
.INDENT 0.0
.TP
.B class lavuelib.edDictDialog.EdDictDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
editable list dialog
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBQtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
creates widget GUI
.UNINDENT
.INDENT 7.0
.TP
.B dirty
(\fI\%bool\fP) dirty flag
.UNINDENT
.INDENT 7.0
.TP
.B headers
(\fI\%list\fP <\fI\%str\fP>) table headers
.UNINDENT
.INDENT 7.0
.TP
.B newvalues
(\fI\%list\fP <\fI\%str\fP>) table headers
.UNINDENT
.INDENT 7.0
.TP
.B record
(\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) data (name, value) dictionary
.UNINDENT
.INDENT 7.0
.TP
.B title
(\fI\%str\fP) dialog title
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.edDictDialog.logger = <Logger lavue (WARNING)>
(\fI\%logging.Logger\fP) logger object
.UNINDENT
.SS lavuelib.edListDialog module
.sp
editable list dialog
.INDENT 0.0
.TP
.B class lavuelib.edListDialog.EdListDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
editable list dialog
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBQtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
creates widget GUI
.UNINDENT
.INDENT 7.0
.TP
.B dirty
(\fI\%bool\fP) dirty flag
.UNINDENT
.INDENT 7.0
.TP
.B headers
(\fI\%list\fP <\fI\%str\fP>) table headers
.UNINDENT
.INDENT 7.0
.TP
.B record
(\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) data (name, value) dictionary
.UNINDENT
.INDENT 7.0
.TP
.B title
(\fI\%str\fP) dialog title
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.edListDialog.logger = <Logger lavue (WARNING)>
(\fI\%logging.Logger\fP) logger object
.UNINDENT
.SS lavuelib.filewriter module
.sp
Provides abstraction for file writer
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTAttribute(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
virtual file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property dtype
attribute data type
.INDENT 7.0
.TP
.B Returns
attribute data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read attribute value
.INDENT 7.0
.TP
.B Returns
python object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property shape
attribute shape
.INDENT 7.0
.TP
.B Returns
attribute shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write attribute value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- python object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTAttributeManager(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create(name, dtype, shape=None, overwrite=False)
create a new attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBshape\fP (\fBlist\(ga< :obj:\(gaint\fP>) \-\- attribute shape
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.UNINDENT
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B names()
key values
.INDENT 7.0
.TP
.B Returns
attribute names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTDataFilter(h5object=None, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
file tree data filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property filterid
getter for compression filter id
.INDENT 7.0
.TP
.B Returns
compression rate
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property options
getter for compression options
.INDENT 7.0
.TP
.B Returns
compression options
.TP
.B Return type
\fI\%tuple\fP <\fI\%int\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property rate
getter for compression rate
.INDENT 7.0
.TP
.B Returns
compression rate
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property shuffle
getter for compression shuffle
.INDENT 7.0
.TP
.B Returns
compression shuffle
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTDeflate(h5object=None, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTDataFilter\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTField(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
file writer field
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%FTAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property dtype
field data type
.INDENT 7.0
.TP
.B Returns
field data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B grow(dim=0, ext=1)
grow the field
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdim\fP (\fI\%int\fP) \-\- growing dimension
.IP \(bu 2
\fBdim\fP \-\- size of the grow
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read the field value
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property shape
field shape
.INDENT 7.0
.TP
.B Returns
field shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property size
field size
.INDENT 7.0
.TP
.B Returns
field size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write the field value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTFile(h5object, filename)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBwriter\fP (\fBH5PYWriter\fP or \fBH5CppWriter\fP) \-\- writer module
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod currenttime()
returns current time string
.INDENT 7.0
.TP
.B Returns
current time
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B default_field()
field pointed by default attributes
.INDENT 7.0
.TP
.B Returns
field pointed by default attributes
.TP
.B Return type
\fI\%FTField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B flush()
flash the data
.UNINDENT
.INDENT 7.0
.TP
.B hasswmr()
if has swmr_mode
.INDENT 7.0
.TP
.B Returns
has swmr_mode
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) file name
.UNINDENT
.INDENT 7.0
.TP
.B property readonly
check if file is readonly
.INDENT 7.0
.TP
.B Returns
readonly flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen(readonly=False, swmr=False, libver=None)
reopen attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBswmr\fP (\fI\%bool\fP) \-\- swmr flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version, default: \(aqlatest\(aq
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B root()
root object
.INDENT 7.0
.TP
.B Returns
parent object
.TP
.B Return type
\fI\%FTGroup\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTGroup(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
file tree group
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%FTAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_field(name, type_code, shape=None, chunk=None, dfilter=None)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBtype_code\fP (\fI\%str\fP) \-\- nexus field type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBchunk\fP (\fI\%list\fP < \fI\%int\fP >) \-\- chunk
.IP \(bu 2
\fBdfilter\fP (\fI\%FTDeflate\fP) \-\- filter deflater
.UNINDENT
.TP
.B Returns
file tree field
.TP
.B Return type
\fI\%FTField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_group(n, nxclass=\(aq\(aq)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBnxclass\fP (\fI\%str\fP) \-\- group type
.UNINDENT
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%FTGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_virtual_field(name, layout, fillvalue=None)
creates a virtual filed tres element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBlayout\fP (\fBH5CppFieldLayout\fP) \-\- virual field layout
.IP \(bu 2
\fBfillvalue\fP (\fI\%int\fP or \fBnp.ndarray\fP) \-\- fill value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B exists(name)
if child exists
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- child name
.TP
.B Returns
existing flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B names()
read the child names
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%list\fP <\fIstr\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open(name)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fI\%FTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open_link(name)
open a file tree element as link
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fI\%FTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property size
group size
.INDENT 7.0
.TP
.B Returns
group size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B stepsperfile
(\fI\%int\fP) steps per file
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTHyperslab(offset=None, block=None, count=None, stride=None)
Bases: \fI\%object\fP
.sp
hyperslab class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoffset\fP (\fI\%tuple\fP) \-\- a list of offsets
.IP \(bu 2
\fBblock\fP (\fI\%tuple\fP) \-\- a list of blocks
.IP \(bu 2
\fBcount\fP (\fI\%tuple\fP) \-\- a list of counts
.IP \(bu 2
\fBstride\fP (\fI\%tuple\fP) \-\- a list of strides
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTLink(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
file tree link
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the link
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property target_path
target path
.INDENT 7.0
.TP
.B Returns
target path
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTObject(h5object, tparent=None)
Bases: \fI\%object\fP
.sp
virtual file tree object
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fI\%FTObject\fP) \-\- tree parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B append(child)
append child weakref
.INDENT 7.0
.TP
.B Parameters
\fBtparent\fP (\fI\%FTObject\fP) \-\- tree parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close element
.UNINDENT
.INDENT 7.0
.TP
.B property h5object
provide object of native library
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if attribute is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property parent
return the parent object
.INDENT 7.0
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%FTGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reload()
reload a list of valid children
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTTargetFieldView(h5object=None)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
target field view for VDS
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filewriter.FTVirtualFieldLayout(h5object=None)
Bases: \fI\%lavuelib.filewriter.FTObject\fP
.sp
virtual field layout
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.INDENT 7.0
.TP
.B add(key, source, sourcekey=None)
add target field to layout
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBkey\fP (\fI\%tuple\fP) \-\- slide or selection
.IP \(bu 2
\fBsource\fP (\fI\%FTTargetFieldView\fP) \-\- target field
.IP \(bu 2
\fBsourcekey\fP (\fI\%tuple\fP) \-\- slide or selection
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.create_file(filename, overwrite=False, **pars)
create a new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%FTFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.data_filter(parent=None)
create deflate filter
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%FTDeflate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.deflate_filter(parent=None)
create deflate filter
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%FTDeflate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.first(array)
get first element if the only
.INDENT 7.0
.TP
.B Parameters
\fBarray\fP (\fI\%any\fP) \-\- numpy array
.TP
.B Returns
first element of the array
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.get_links(parent)
get links
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.TP
.B Returns
list of link objects
.TP
.B Return type
.INDENT 7.0
.TP
.B obj
\fIlist\fP <\fI\%FTLink\fP>
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.link(target, parent, name)
create link
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- link name
.UNINDENT
.TP
.B Returns
link object
.TP
.B Return type
\fI\%FTLink\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.load_file(membuffer, filename=None, readonly=False, **pars)
load a file from memory byte buffer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmembuffer\fP (\fI\%bytes\fP or \fI\%io.BytesIO\fP) \-\- memory buffer
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file objects
.TP
.B Return type
\fBH5PYFile\fP or \fBH5CppFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.open_file(filename, readonly=False, **pars)
open the new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%FTFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.setwriter(wr)
sets writer
.INDENT 7.0
.TP
.B Parameters
\fBwr\fP (\fBH5PYWriter\fP or \fBH5CppWriter\fP) \-\- writer module
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.target_field_view(filename, fieldpath, shape, dtype=None, maxshape=None, parent=None)
create target field view for VDS
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.UNINDENT
.TP
.B Returns
target field object
.TP
.B Return type
\fI\%FTTargetFieldView\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.unlimited(parent=None)
return dataspace UNLIMITED variable for the current writer module
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.TP
.B Returns
dataspace UNLIMITED variable
.TP
.B Return type
\fBh5cpp.dataspace.UNLIMITED\fP or \fBh5py.UNLIMITED\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.virtual_field_layout(shape, dtype, maxshape=None, parent=None)
creates a virtual field layout for a VDS file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBparent\fP (\fI\%FTObject\fP) \-\- parent object
.UNINDENT
.TP
.B Returns
virtual layout
.TP
.B Return type
\fI\%FTVirtualFieldLayout\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.filewriter.writerlock = <unlocked _thread.lock object>
(\fI\%threading.Lock\fP) writer module
.UNINDENT
.SS lavuelib.filters module
.sp
set of image sources
.INDENT 0.0
.TP
.B class lavuelib.filters.BaseFilter(configuration=None)
Bases: \fI\%object\fP
.sp
filter base class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBname\fP \-\- image name
.UNINDENT
.INDENT 7.0
.TP
.B initialize()
initialize the filter
.UNINDENT
.INDENT 7.0
.TP
.B terminate()
stop filter
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.filters.FilterList(configlist=None)
Bases: \fI\%list\fP
.sp
Filter list
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBconfiglist\fP (:    \fI\%list\fP < [\fI\%str\fP , \fI\%str\fP] >) \-\- list with filter configuration
.UNINDENT
.INDENT 7.0
.TP
.B appendFilters(configlist)
appends filters
.INDENT 7.0
.TP
.B Parameters
\fBconfiglist\fP (:    \fI\%list\fP < [\fI\%str\fP , \fI\%str\fP] >) \-\- list with filter configuration
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reset(configlist)
reset filters
.INDENT 7.0
.TP
.B Parameters
\fBconfiglist\fP (:    \fI\%list\fP < [\fI\%str\fP , \fI\%str\fP] >) \-\- list with filter configuration
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.filtersGroupBox module
.sp
filter widget
.INDENT 0.0
.TP
.B class lavuelib.filtersGroupBox.FiltersGroupBox(parent=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Select how an image should be transformed.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B changeView(showfilters=None)
show or hide widgets
.INDENT 7.0
.TP
.B Parameters
\fBshowfilters\fP (\fI\%bool\fP) \-\- filter widget shown
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B filtersChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) filter changed signal
.UNINDENT
.INDENT 7.0
.TP
.B setLabel(text)
sets filter label
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- label text
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setState(state)
sets filter state
.INDENT 7.0
.TP
.B Parameters
\fBtname\fP (\fI\%int\fP) \-\- filter state
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setToolTip(text)
sets filter label
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- tool tip text
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.geometryDialog module
.sp
detector geometry widget
.INDENT 0.0
.TP
.B class lavuelib.geometryDialog.GeometryDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
detector geometry widget class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B centerx
(\fI\%float\fP) x\-coordinates of the center of the image
.UNINDENT
.INDENT 7.0
.TP
.B centery
(\fI\%float\fP) y\-coordinates of the center of the image
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B detdistance
(\fI\%float\fP) detector distance in mm
.UNINDENT
.INDENT 7.0
.TP
.B energy
(\fI\%float\fP) energy in eV
.UNINDENT
.INDENT 7.0
.TP
.B pixelsizex
(\fI\%float\fP) pixel x\-size in um
.UNINDENT
.INDENT 7.0
.TP
.B pixelsizey
(\fI\%float\fP) pixel y\-size in um
.UNINDENT
.UNINDENT
.SS lavuelib.gradientDialog module
.sp
gradient dialog
.INDENT 0.0
.TP
.B class lavuelib.gradientDialog.GradientDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
interval widget class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%int\fP) gradient name
.UNINDENT
.UNINDENT
.SS lavuelib.h5cppwriter
.sp
Provides h5cpp file writer
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppAttribute(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTAttribute\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close attribute
.UNINDENT
.INDENT 7.0
.TP
.B property dtype
field data type
.INDENT 7.0
.TP
.B Returns
field data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if attribute is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B read()
read attribute value
.INDENT 7.0
.TP
.B Returns
python object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property shape
attribute shape
.INDENT 7.0
.TP
.B Returns
attribute shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write attribute value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- python object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppAttributeManager(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTAttributeManager\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close attribure manager
.UNINDENT
.INDENT 7.0
.TP
.B create(name, dtype, shape=None, overwrite=False)
create a new attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- attribute shape
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.UNINDENT
.TP
.B Returns
attribute object
.TP
.B Return type
\fBH5CppAtribute\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if link is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B names()
key values
.INDENT 7.0
.TP
.B Returns
attribute names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppDataFilter(h5object=None, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTDataFilter\fP
.sp
file tree deflate
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppDeflate(h5object=None, tparent=None)
Bases: \fI\%lavuelib.h5cppwriter.H5CppDataFilter\fP
.sp
deflate filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppField(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTField\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%H5CppAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close field
.UNINDENT
.INDENT 7.0
.TP
.B property dtype
field data type
.INDENT 7.0
.TP
.B Returns
field data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B grow(dim=0, ext=1)
grow the field
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdim\fP (\fI\%int\fP) \-\- growing dimension
.IP \(bu 2
\fBdim\fP \-\- size of the grow
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if field is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B read()
read the field value
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.INDENT 7.0
.TP
.B property shape
field shape
.INDENT 7.0
.TP
.B Returns
field shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property size
field size
.INDENT 7.0
.TP
.B Returns
field size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write the field value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppFile(h5object, filename)
Bases: \fI\%lavuelib.filewriter.FTFile\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close file
.UNINDENT
.INDENT 7.0
.TP
.B flush()
flash the data
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if file is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B property readonly
check if file is readonly
.INDENT 7.0
.TP
.B Returns
readonly flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen(readonly=False, swmr=False, libver=None)
reopen file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBswmr\fP (\fI\%bool\fP) \-\- swmr flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version, default: \(aqlatest\(aq
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B root()
root object
.INDENT 7.0
.TP
.B Returns
parent object
.TP
.B Return type
\fI\%H5CppGroup\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppGroup(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTGroup\fP
.sp
file tree group
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- tree parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class H5CppGroupIter(group)
Bases: \fI\%object\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBgroup\fP \-\- group object
.UNINDENT
.INDENT 7.0
.TP
.B next()
the next attribute
.INDENT 7.0
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%H5CppAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close group
.UNINDENT
.INDENT 7.0
.TP
.B create_field(name, type_code, shape=None, chunk=None, dfilter=None)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBtype_code\fP (\fI\%str\fP) \-\- nexus field type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBchunk\fP (\fI\%list\fP < \fI\%int\fP >) \-\- chunk
.IP \(bu 2
\fBdfilter\fP (\fI\%H5CppDataFilter\fP) \-\- filter deflater
.UNINDENT
.TP
.B Returns
file tree field
.TP
.B Return type
\fI\%H5CppField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_group(n, nxclass=None)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBnxclass\fP (\fI\%str\fP) \-\- group type
.UNINDENT
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%H5CppGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_virtual_field(name, layout, fillvalue=0)
creates a virtual filed tres element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- field name
.IP \(bu 2
\fBlayout\fP (\fBH5CppFieldLayout\fP) \-\- virual field layout
.IP \(bu 2
\fBfillvalue\fP (\fI\%int\fP or \fBnp.ndarray\fP) \-\- fill value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B exists(name)
if child exists
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- child name
.TP
.B Returns
existing flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if field is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B names()
read the child names
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%list\fP <\fIstr\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open(name)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fBFTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open_link(name)
open a file tree element as link
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fBFTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen group
.UNINDENT
.INDENT 7.0
.TP
.B property size
group size
.INDENT 7.0
.TP
.B Returns
group size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppLink(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTLink\fP
.sp
file tree link
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close group
.UNINDENT
.INDENT 7.0
.TP
.B classmethod getfilename(obj)
provides a filename from h5 node
.INDENT 7.0
.TP
.B Parameters
\fBobj\fP (\fBFTObject\fP) \-\- h5 node
.TP
.B Returns
file name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if link is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.INDENT 7.0
.TP
.B property target_path
target path
.INDENT 7.0
.TP
.B Returns
target path
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppTargetFieldView(filename, fieldpath, shape, dtype=None, maxshape=None)
Bases: \fI\%lavuelib.filewriter.FTTargetFieldView\fP
.sp
target field for VDS
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B fieldpath
(\fI\%str\fP) nexus field path
.UNINDENT
.INDENT 7.0
.TP
.B filename
(\fI\%str\fP) directory and file name
.UNINDENT
.INDENT 7.0
.TP
.B maxshape
(\fI\%list\fP < \fI\%int\fP >) maximal shape
.UNINDENT
.INDENT 7.0
.TP
.B shape
(\fI\%list\fP < \fI\%int\fP >) shape
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5cppwriter.H5CppVirtualFieldLayout(h5object, shape, dtype=None, maxshape=None)
Bases: \fI\%lavuelib.filewriter.FTVirtualFieldLayout\fP
.sp
virtual field layout
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add(key, source, sourcekey=None, shape=None)
add target field to layout
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBkey\fP (\fI\%tuple\fP) \-\- slide
.IP \(bu 2
\fBsource\fP (\fBH5PYTargetFieldView\fP) \-\- target field view
.IP \(bu 2
\fBsourcekey\fP (\fI\%tuple\fP) \-\- slide or selection
.IP \(bu 2
\fBshape\fP (\fI\%tuple\fP) \-\- target shape in the layout
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B maxshape
(\fI\%list\fP < \fI\%int\fP >) maximal shape
.UNINDENT
.INDENT 7.0
.TP
.B shape
(\fI\%list\fP < \fI\%int\fP >) shape
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.create_file(filename, overwrite=False, libver=None, swmr=None)
create a new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version: \(aqlastest\(aq or \(aqearliest\(aq
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5CppFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.data_filter()
create deflate filter
.INDENT 7.0
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%H5CppDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.deflate_filter()
create deflate filter
.INDENT 7.0
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%H5CppDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.get_links(parent)
get links
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
list of link objects
.TP
.B Returns
link object
.TP
.B Return type
.INDENT 7.0
.TP
.B obj
\fIlist\fP <\fI\%H5CppLink\fP>
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.is_image_file_supported()
provides if loading of image files are supported
.INDENT 7.0
.TP
.B Retruns
if loading of image files are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.is_unlimited_vds_supported()
provides if unlimited vds are supported
.INDENT 7.0
.TP
.B Retruns
if unlimited vds are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.is_vds_supported()
provides if vds are supported
.INDENT 7.0
.TP
.B Retruns
if vds are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.link(target, parent, name)
create link
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%str\fP) \-\- nexus path name
.IP \(bu 2
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- link name
.UNINDENT
.TP
.B Returns
link object
.TP
.B Return type
\fI\%H5CppLink\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.load_file(membuffer, filename=None, readonly=False, **pars)
load a file from memory byte buffer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmembuffer\fP (\fI\%bytes\fP or \fI\%io.BytesIO\fP) \-\- memory buffer
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fBH5PYFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.nptype(dtype)
converts to numpy types
.INDENT 7.0
.TP
.B Parameters
\fBdtype\fP (\fI\%str\fP) \-\- h5 writer type type
.TP
.B Returns
nupy type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.open_file(filename, readonly=False, libver=None, swmr=False)
open the new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version: \(aqlastest\(aq or \(aqearliest\(aq
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5CppFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.target_field_view(filename, fieldpath, shape, dtype=None, maxshape=None)
create target field view for VDS
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
target field view object
.TP
.B Return type
\fI\%H5CppTargetFieldView\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.unlimited(parent=None)
return dataspace UNLIMITED variable for the current writer module
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
dataspace UNLIMITED variable
.TP
.B Return type
\fBh5cpp.dataspace.UNLIMITED\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.unlimited_selection(sel, shape)
checks if hyperslab is unlimited
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsel\fP (\fBfilewriter.FTHyperslab\fP) \-\- hyperslab selection
.IP \(bu 2
\fBshape\fP (\fI\%list\fP) \-\- give shape
.UNINDENT
.TP
.B Returns
if hyperslab is unlimited list
.TP
.B Return type
\fI\%list\fP <\fI\%bool\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5cppwriter.virtual_field_layout(shape, dtype, maxshape=None)
creates a virtual field layout for a VDS file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
virtual layout
.TP
.B Return type
\fI\%H5CppVirtualFieldLayout\fP
.UNINDENT
.UNINDENT
.SS lavuelib.h5pywriter
.sp
Provides h5py file writer
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYAttribute(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTAttribute\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close attribute
.UNINDENT
.INDENT 7.0
.TP
.B property dtype
attribute data type
.INDENT 7.0
.TP
.B Returns
attribute data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if field is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read attribute value
.INDENT 7.0
.TP
.B Returns
python object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen attribute
.UNINDENT
.INDENT 7.0
.TP
.B property shape
attribute shape
.INDENT 7.0
.TP
.B Returns
attribute shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write attribute value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- python object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYAttributeManager(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTAttributeManager\fP
.sp
file tree attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class H5PYAttrIter(manager)
Bases: \fI\%object\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBmanager\fP (\fI\%H5PYAttributeManager\fP) \-\- attribute manager
.UNINDENT
.INDENT 7.0
.TP
.B next()
the next attribute
.INDENT 7.0
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close attribure manager
.UNINDENT
.INDENT 7.0
.TP
.B create(name, dtype, shape=None, overwrite=False)
create a new attribute
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- attribute shape
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.UNINDENT
.TP
.B Returns
attribute object
.TP
.B Return type
\fBH5PYAtribute\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if link is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) object name
.UNINDENT
.INDENT 7.0
.TP
.B names()
key values
.INDENT 7.0
.TP
.B Returns
attribute names
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYDataFilter(h5object=None, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTDataFilter\fP
.sp
file tree data filter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYDeflate(h5object=None, tparent=None)
Bases: \fI\%lavuelib.h5pywriter.H5PYDataFilter\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYField(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTField\fP
.sp
file writer field
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%H5PYAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close field
.UNINDENT
.INDENT 7.0
.TP
.B property dtype
field data type
.INDENT 7.0
.TP
.B Returns
field data type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B grow(dim=0, ext=1)
grow the field
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdim\fP (\fI\%int\fP) \-\- growing dimension
.IP \(bu 2
\fBdim\fP \-\- size of the grow
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if group is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read the field value
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%any\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.INDENT 7.0
.TP
.B property shape
field shape
.INDENT 7.0
.TP
.B Returns
field shape
.TP
.B Return type
\fI\%list\fP < \fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property size
field size
.INDENT 7.0
.TP
.B Returns
field size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B write(o)
write the field value
.INDENT 7.0
.TP
.B Parameters
\fBo\fP (\fI\%any\fP) \-\- h5 object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYFile(h5object, filename)
Bases: \fI\%lavuelib.filewriter.FTFile\fP
.sp
file tree file
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close file
.UNINDENT
.INDENT 7.0
.TP
.B flush()
flash the data
.UNINDENT
.INDENT 7.0
.TP
.B hasswmr()
if has swmr_mode
.INDENT 7.0
.TP
.B Returns
has swmr_mode
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if group is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B path
(\fI\%str\fP) object nexus path
.UNINDENT
.INDENT 7.0
.TP
.B property readonly
check if file is readonly
.INDENT 7.0
.TP
.B Returns
readonly flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen(readonly=False, swmr=False, libver=None)
reopen file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBswmr\fP (\fI\%bool\fP) \-\- swmr flag
.IP \(bu 2
\fBlibver\fP (\fI\%str\fP) \-\- library version, default: \(aqlatest\(aq
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B root()
root object
.INDENT 7.0
.TP
.B Returns
parent object
.TP
.B Return type
\fI\%H5PYGroup\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYGroup(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTGroup\fP
.sp
file tree group
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class H5PYGroupIter(group)
Bases: \fI\%object\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBgroup\fP \-\- group object
.UNINDENT
.INDENT 7.0
.TP
.B next()
the next attribute
.INDENT 7.0
.TP
.B Returns
attribute object
.TP
.B Return type
\fBFTAtribute\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property attributes
return the attribute manager
.INDENT 7.0
.TP
.B Returns
attribute manager
.TP
.B Return type
\fI\%H5PYAttributeManager\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close group
.UNINDENT
.INDENT 7.0
.TP
.B create_field(name, type_code, shape=None, chunk=None, dfilter=None)
creates a field tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBtype_code\fP (\fI\%str\fP) \-\- nexus field type
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBchunk\fP (\fI\%list\fP < \fI\%int\fP >) \-\- chunk
.IP \(bu 2
\fBdfilter\fP (\fI\%H5PYDataFilter\fP) \-\- filter deflater
.UNINDENT
.TP
.B Returns
file tree field
.TP
.B Return type
\fI\%H5PYField\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_group(n, nxclass=\(aq\(aq)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBn\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBnxclass\fP (\fI\%str\fP) \-\- group type
.UNINDENT
.TP
.B Returns
file tree group
.TP
.B Return type
\fI\%H5PYGroup\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B create_virtual_field(name, layout, fillvalue=None)
creates a virtual filed tres element
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- group name
.IP \(bu 2
\fBlayout\fP (\fBH5PYFieldLayout\fP) \-\- virual field layout
.IP \(bu 2
\fBfillvalue\fP (\fI\%int\fP) \-\- fill value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B exists(name)
if child exists
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- child name
.TP
.B Returns
existing flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if group is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B names()
read the child names
.INDENT 7.0
.TP
.B Returns
h5 object
.TP
.B Return type
\fI\%list\fP <\fIstr\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open(name)
open a file tree element
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fBFTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B open_link(name)
open a file tree element as link
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- element name
.TP
.B Returns
file tree object
.TP
.B Return type
\fBFTObject\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen file
.UNINDENT
.INDENT 7.0
.TP
.B property size
group size
.INDENT 7.0
.TP
.B Returns
group size
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYLink(h5object, tparent=None)
Bases: \fI\%lavuelib.filewriter.FTLink\fP
.sp
file tree link
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBtparent\fP (\fBFTObject\fP) \-\- treee parent
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B close()
close group
.UNINDENT
.INDENT 7.0
.TP
.B classmethod getfilename(obj)
provides a filename from h5 node
.INDENT 7.0
.TP
.B Parameters
\fBobj\fP (\fBFTObject\fP) \-\- h5 node
.TP
.B Returns
file name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B property is_valid
check if link is valid
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B read()
read object value
.INDENT 7.0
.TP
.B Returns
valid flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B refresh()
refresh the field
.INDENT 7.0
.TP
.B Returns
refreshed
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reopen()
reopen field
.UNINDENT
.INDENT 7.0
.TP
.B setname(name)
.UNINDENT
.INDENT 7.0
.TP
.B property target_path
target path
.INDENT 7.0
.TP
.B Returns
target path
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYTargetFieldView(h5object, shape)
Bases: \fI\%lavuelib.filewriter.FTTargetFieldView\fP
.sp
target field view for VDS
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B shape
(\fI\%list\fP < \fI\%int\fP >) shape
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.h5pywriter.H5PYVirtualFieldLayout(h5object, shape)
Bases: \fI\%lavuelib.filewriter.FTVirtualFieldLayout\fP
.sp
virtual field layout
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBh5object\fP (\fI\%any\fP) \-\- h5 object
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add(key, source, sourcekey=None, shape=None)
add target field to layout
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBkey\fP (\fI\%tuple\fP) \-\- slide
.IP \(bu 2
\fBsource\fP (\fI\%H5PYTargetFieldView\fP) \-\- target field view
.IP \(bu 2
\fBsourcekey\fP (\fI\%tuple\fP) \-\- slide or selection
.IP \(bu 2
\fBshape\fP (\fI\%tuple\fP) \-\- target shape in the layout
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B shape
(\fI\%list\fP < \fI\%int\fP >) shape
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.create_file(filename, overwrite=False, **pars)
create a new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBoverwrite\fP (\fI\%bool\fP) \-\- overwrite flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5PYFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.data_filter()
create deflate filter
.INDENT 7.0
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%H5PYDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.deflate_filter()
create deflate filter
.INDENT 7.0
.TP
.B Returns
deflate filter object
.TP
.B Return type
\fI\%H5PYDataFilter\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.get_links(parent)
get links
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
list of link objects
.TP
.B Returns
link object
.TP
.B Return type
.INDENT 7.0
.TP
.B obj
\fIlist\fP <\fI\%H5PYLink\fP>
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.is_image_file_supported()
provides if loading of image files are supported
.INDENT 7.0
.TP
.B Retruns
if loading of image files are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.is_mbs_supported()
provides if MultiBlockSlice are supported
.INDENT 7.0
.TP
.B Retruns
if MultiBlockSlice are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.is_strings_as_bytes()
provides if string read to bytes
.INDENT 7.0
.TP
.B Retruns
if string read to bytes
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.is_unlimited_vds_supported()
provides if unlimited vds are supported
.INDENT 7.0
.TP
.B Retruns
if unlimited vds are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.is_vds_supported()
provides if VDS are supported
.INDENT 7.0
.TP
.B Retruns
if VDS are supported
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.link(target, parent, name)
create link
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtarget\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- link name
.UNINDENT
.TP
.B Returns
link object
.TP
.B Return type
\fI\%H5PYLink\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.load_file(membuffer, filename=None, readonly=False, **pars)
load a file from memory byte buffer
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmembuffer\fP (\fI\%bytes\fP or \fI\%io.BytesIO\fP) \-\- memory buffer
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5PYFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.nptype(dtype)
converts to numpy types
.INDENT 7.0
.TP
.B Parameters
\fBdtype\fP (\fI\%str\fP) \-\- h5 writer type type
.TP
.B Returns
nupy type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.open_file(filename, readonly=False, **pars)
open the new file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBreadonly\fP (\fI\%bool\fP) \-\- readonly flag
.IP \(bu 2
\fBpars\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%str\fP>) \-\- parameters
.UNINDENT
.TP
.B Returns
file object
.TP
.B Return type
\fI\%H5PYFile\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.target_field_view(filename, fieldpath, shape, dtype=None, maxshape=None)
create target field view for VDS
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfilename\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBfieldpath\fP (\fI\%str\fP) \-\- nexus field path
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
target field view object
.TP
.B Return type
\fBFTTargetFieldView\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.unlimited(parent=None)
return dataspace UNLIMITED variable for the current writer module
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBFTObject\fP) \-\- parent object
.TP
.B Returns
dataspace UNLIMITED variable
.TP
.B Return type
\fBh5py.h5s.UNLIMITED\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.unlimited_selection(sel, shape)
checks if hyperslab is unlimited
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsel\fP (\fBfilewriter.FTHyperslab\fP) \-\- hyperslab selection
.IP \(bu 2
\fBshape\fP (\fI\%list\fP) \-\- give shape
.UNINDENT
.TP
.B Returns
if hyperslab is unlimited list
.TP
.B Return type
\fI\%list\fP <\fI\%bool\fP>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.h5pywriter.virtual_field_layout(shape, dtype, maxshape=None)
creates a virtual field layout for a VDS file
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.IP \(bu 2
\fBdtype\fP (\fI\%str\fP) \-\- attribute type
.IP \(bu 2
\fBmaxshape\fP (\fI\%list\fP < \fI\%int\fP >) \-\- shape
.UNINDENT
.TP
.B Returns
virtual layout
.TP
.B Return type
\fBFTVirtualFieldLayout\fP
.UNINDENT
.UNINDENT
.SS lavuelib.helpForm
.sp
help widget
.INDENT 0.0
.TP
.B class lavuelib.helpForm.HelpForm(page, parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpage\fP (\fI\%str\fP) \-\- the starting html page
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent widget
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B createActions()
creates actions and sets the command pool and stack
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
creates dialogs for help dialog
.UNINDENT
.INDENT 7.0
.TP
.B updatePageTitle()
resets the __pageLabel withg the document title
.UNINDENT
.UNINDENT
.SS lavuelib.hidraServerList module
.sp
A list of possible hidra servers. Take your pick.
.INDENT 0.0
.TP
.B lavuelib.hidraServerList.HIDRASERVERLIST = {\(aqp08\(aq: [\(aqhaspp08pil100.desy.de\(aq, \(aqhaspp08perk01.desy.de\(aq], \(aqp09\(aq: [\(aqhaspp09pilatus.desy.de\(aq], \(aqp10\(aq: [\(aqhaspp10pilatus.desy.de\(aq], \(aqp11\(aq: [\(aqhaspp11pilatus.desy.de\(aq], \(aqpool\(aq: [\(aqhaspilatus100k.desy.de\(aq]}
(\fI\%dict\fP < \fI\%str\fP, \fI\%list\fP <\fI\%str\fP> >)
server dictionary
.UNINDENT
.SS lavuelib.highValueMaskWidget module
.sp
mask widget
.INDENT 0.0
.TP
.B class lavuelib.highValueMaskWidget.HighValueMaskWidget(parent=None, settings=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Define and apply masking of the displayed image.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBsettings\fP (\fI\%lavuelib.settings.Settings\fP) \-\- lavue configuration settings
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B applyStateChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) apply state change signal
.UNINDENT
.INDENT 7.0
.TP
.B mask()
provides the image mask high value
.INDENT 7.0
.TP
.B Returns
high pixel value for masking
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B maskHighValueChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) mask high value changed signal
.UNINDENT
.INDENT 7.0
.TP
.B noValue()
unchecks the apply checkbox and clear the file display
.UNINDENT
.INDENT 7.0
.TP
.B setDisplayedValue(value)
sets displayed high pixel value
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- high pixel value
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMask(value)
sets the image mask high value
.INDENT 7.0
.TP
.B Parameters
\fBfname\fP (\fI\%str\fP) \-\- high pixel value for masking
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.histogramWidget module
.sp
Horizontal HistogramWidget
.INDENT 0.0
.TP
.B class lavuelib.histogramWidget.HistogramHLUTWidget(parent=None, bins=None, step=None, *args, **kargs)
Bases: \fI\%pyqtgraph.widgets.GraphicsView.GraphicsView\fP
.sp
Horizontal HistogramWidget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBbins\fP (\fI\%str\fP) \-\- bins edges algorithm for histogram, default: \(aqauto\(aq
.IP \(bu 2
\fBstep\fP (\fI\%str\fP or \fI\%int\fP) \-\- data step for calculation of histogram levels,
default: \(aqauto\(aq
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%any\fP>) \-\- HistogramHLUTItem parameters list
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- HistogramHLUTItem parameter dictionary
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B item
(\fBHistogramHLUTItem\fP) histogram item
.UNINDENT
.INDENT 7.0
.TP
.B setAutoFactor(factor)
sets auto level factor
.INDENT 7.0
.TP
.B Parameters
\fBfactor\fP (\fI\%float\fP) \-\- auto level factor of maximal peak
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setBins(bins)
sets bins edges algorithm for histogram
.INDENT 7.0
.TP
.B Parameters
\fBchannel\fP (\fI\%str\fP) \-\- bins edges algorithm for histogram
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setStep(step)
sets image step data for algorithm of histogram
.INDENT 7.0
.TP
.B Parameters
\fBchannel\fP (\fI\%int\fP) \-\- image step data for algorithm of histogram
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sizeHint()
sets size hint
.UNINDENT
.UNINDENT
.SS lavuelib.imageDisplayWidget module
.sp
image display widget
.INDENT 0.0
.TP
.B class lavuelib.imageDisplayWidget.AxesParameters
Bases: \fI\%object\fP
.sp
axes parameters
.sp
constructor
.INDENT 7.0
.TP
.B enabled
(\fI\%bool\fP) enabled flag
.UNINDENT
.INDENT 7.0
.TP
.B scale
(\fI\%tuple\fP <\fI\%float\fP, \fI\%float\fP> ) image scale (x,y)
.UNINDENT
.INDENT 7.0
.TP
.B xtext
(\fI\%str\fP) label of x\-axis
.UNINDENT
.INDENT 7.0
.TP
.B xunits
(\fI\%str\fP) units of x\-axis
.UNINDENT
.INDENT 7.0
.TP
.B ytext
(\fI\%str\fP) label of y\-axis
.UNINDENT
.INDENT 7.0
.TP
.B yunits
(\fI\%str\fP) units of y\-axis
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageDisplayWidget.ImageDisplayWidget(parent=None)
Bases: \fI\%pyqtgraph.widgets.GraphicsLayoutWidget.GraphicsLayoutWidget\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B addExtensions(extlist)
provides viewbox
:param extlist: extension list
:type extlist: \fI\%list\fP < \fBDisplayExtension\fP >
.UNINDENT
.INDENT 7.0
.TP
.B aspectLockedToggled
(\fBpyqtgraph.QtCore.pyqtSignal\fP) aspect locked toggled signal
.UNINDENT
.INDENT 7.0
.TP
.B autoRange()
sets auto range
.UNINDENT
.INDENT 7.0
.TP
.B axestext()
return axes text
:returns: x,y text
:rtype: (\fI\%str\fP, \fI\%str\fP)
.UNINDENT
.INDENT 7.0
.TP
.B axesunits()
return axes units
:returns: x,y units
:rtype: (\fI\%str\fP, \fI\%str\fP)
.UNINDENT
.INDENT 7.0
.TP
.B currentData()
provides the data
.INDENT 7.0
.TP
.B Returns
current data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentIntensity()
provides intensity for current mouse position
.INDENT 7.0
.TP
.B Returns
(x position, y position, pixel intensity,
x position, y position)
.TP
.B Return type
(\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B descaledxy(x, y, useraxes=True)
provides scaled x,y positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x pixel coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y pixel coordinate
.IP \(bu 2
\fBuseraxes\fP (\fI\%bool\fP) \-\- use user scaling
.UNINDENT
.TP
.B Returns
scaled x,y position
.TP
.B Return type
(\fI\%float\fP, \fI\%float\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B emitAspectLockedToggled(status)
emits aspectLockedToggled
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- aspectLockedToggled status
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B extension(name)
provides viewbox
:param name: extension name
:type name: \fI\%str\fP
:rtype: \fBDisplayExtension\fP
:returns: display extension
.UNINDENT
.INDENT 7.0
.TP
.B extensions()
provides extension names
.INDENT 7.0
.TP
.B Return type
\fI\%list\fP
.TP
.B Returns
extension names
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B gradientColors()
gets gradientcolors on/off
.INDENT 7.0
.TP
.B Returns
True for on and False for off
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B image(iid=0)
provides imageItem object
.INDENT 7.0
.TP
.B Parameters
\fBiid\fP (\fI\%int\fP) \-\- image id
.TP
.B Returns
image object
.TP
.B Return type
\fBpyqtgraph.imageItem.ImageItem\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B levelMode()
gets level mode
.INDENT 7.0
.TP
.B Returns
level mode, i.e. \fImono\fP or \fIrgba\fP
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mouseImageDoubleClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) mouse double clicked
.UNINDENT
.INDENT 7.0
.TP
.B mouseImagePositionChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) mouse position changed signal
.UNINDENT
.INDENT 7.0
.TP
.B mouseImageSingleClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) mouse single clicked
.UNINDENT
.INDENT 7.0
.TP
.B mouse_click(event)
updates image widget after mouse click
.INDENT 7.0
.TP
.B Parameters
\fBevent\fP (\fBpyqtgraph.QtCore.QEvent\fP) \-\- mouse click event
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B mouse_position(event=None)
updates image widget after mouse position change
.INDENT 7.0
.TP
.B Parameters
\fBevent\fP (\fBpyqtgraph.QtCore.QEvent\fP) \-\- mouse move event
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rangeWindowEnabled()
provide info if range window enabled
.INDENT 7.0
.TP
.B Returns
range window enabled
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rangeWindowScale()
provide info about range window sclae
.INDENT 7.0
.TP
.B Returns
range window scale
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rawData()
provides the raw data
.INDENT 7.0
.TP
.B Returns
current raw data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rgb()
gets RGB on/off
.INDENT 7.0
.TP
.B Returns
True for on and False for off
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scale(useraxes=True, noNone=False)
provides scale and position of the axes
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBuseraxes\fP (\fI\%bool\fP) \-\- use user scaling
.IP \(bu 2
\fBnoNone\fP (\fI\%bool\fP) \-\- return values without None
.UNINDENT
.TP
.B Return type
[\fI\%int\fP, \fI\%int\fP, \fI\%int\fP, \fI\%int\fP]
.TP
.B Returns
[posx, posy, scalex, scaley]
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scaledxy(x, y, useraxes=True)
provides scaled x,y positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x pixel coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y pixel coordinate
.IP \(bu 2
\fBuseraxes\fP (\fI\%bool\fP) \-\- use user scaling
.UNINDENT
.TP
.B Returns
scaled x,y position
.TP
.B Return type
(\fI\%float\fP, \fI\%float\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scaling()
provides scaling type
.INDENT 7.0
.TP
.B Returns
scaling type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scalingLabel()
provides scaling label
.INDENT 7.0
.TP
.B Returns
scaling label
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setAspectLocked(flag)
sets aspectLocked
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- state to set
.TP
.B Returns
old state
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setAutoDownSample(autodownsample)
sets auto levels
.INDENT 7.0
.TP
.B Parameters
\fBautolevels\fP (\fI\%bool\fP) \-\- auto down sample enabled
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setAutoLevels(autolevels)
sets auto levels
.INDENT 7.0
.TP
.B Parameters
\fBautolevels\fP (\fI\%bool\fP) \-\- auto levels enabled
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDisplayChannelLevels(levels=None)
sets maximum intensity levels
.INDENT 7.0
.TP
.B Parameters
\fBlevels\fP (\fI\%list\fP < (:obj\(gafloat\(ga:, :obj\(gafloat\(ga:)>) \-\- channel intensity levels
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDisplayMaxLevel(level=None)
sets maximum intensity level
.INDENT 7.0
.TP
.B Parameters
\fBlevel\fP (\fI\%float\fP) \-\- maximum intensity
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDisplayMinLevel(level=None)
sets minimum intensity level
.INDENT 7.0
.TP
.B Parameters
\fBlevel\fP (\fI\%float\fP) \-\- minimum intensity
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDoBFSubtraction(state)
sets do brightfield subtraction flag
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- do brightfield subtraction flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDoBkgSubtraction(state)
sets do background subtraction flag
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- do background subtraction flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDoubleClickLock(status=True)
sets double click lock
:param status: status flag
:type status: \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B setGradientColors(status=True)
sets gradientcolors on/off
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- True for on and False for off
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setLevelMode(levelmode=True)
sets levelmode
.INDENT 7.0
.TP
.B Parameters
\fBlevelmode\fP (\fI\%str\fP) \-\- level mode, i.e. \fImono\fP or \fIrgba\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setOverflowColor(color)
sets item color
.INDENT 7.0
.TP
.B Parameters
\fBcolor\fP (\fI\%str\fP) \-\- json list of overflow color
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setScalingType(scalingtype)
sets intensity scaling types
.INDENT 7.0
.TP
.B Parameters
\fBscalingtype\fP (\fI\%str\fP) \-\- intensity scaling type
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setStatsWOScaling(status)
sets statistics without scaling flag
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- statistics without scaling flag
.TP
.B Returns
change status
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setSubWidgets(parameters)
set subwidget properties
.INDENT 7.0
.TP
.B Parameters
\fBparameters\fP (\fBlavuelib.toolWidget.ToolParameters\fP) \-\- tool parameters
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTicks()
launch axes widget
.INDENT 7.0
.TP
.B Returns
apply status
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setToolScale(position=None, scale=None)
set axes scales
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBposition\fP ([\fI\%float\fP, \fI\%float\fP]) \-\- start position of axes
.IP \(bu 2
\fBscale\fP ([\fI\%float\fP, \fI\%float\fP]) \-\- scale axes
.IP \(bu 2
\fBupdate\fP \-\- update scales on image
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTransformations(transpose, leftrightflip, updownflip, orgtranspose)
sets coordinate transformations
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtranspose\fP (\fI\%bool\fP) \-\- transpose coordinates flag
.IP \(bu 2
\fBleftrightflip\fP (\fI\%bool\fP) \-\- left\-right flip coordinates flag
.IP \(bu 2
\fBupdownflip\fP (\fI\%bool\fP) \-\- up\-down flip coordinates flag
.IP \(bu 2
\fBorgtranspose\fP (\fI\%bool\fP) \-\- selected transpose coordinates flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setViewRange(rangelist)
set view range values
.INDENT 7.0
.TP
.B Parameters
\fBrangelist\fP (\fI\%str\fP) \-\- xmin,ymin,xsize,ysize
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setrgb(status=True)
sets RGB on/off
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- True for on and False for off
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transformations()
povides coordinates transformations
.INDENT 7.0
.TP
.B Returns
transpose, leftrightflip, updownflip flags,
original transpose
.TP
.B Return type
(\fI\%bool\fP, \fI\%bool\fP, \fI\%bool\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateImage(img=None, rawimg=None, maskimg=None)
updates the image to display
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBimg\fP (\fI\%numpy.ndarray\fP) \-\- 2d image array
.IP \(bu 2
\fBrawimg\fP (\fI\%numpy.ndarray\fP) \-\- 2d raw image array
.IP \(bu 2
\fBmaskarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d color mask image array
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(axisscales=None, axislabels=None, rescale=False)
update Metadata informations
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBaxisscales\fP ([\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP]) \-\- [xstart, ystart, xscale, yscale]
.IP \(bu 2
\fBaxislabels\fP ([\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP]) \-\- [xtext, ytext, xunits, yunits]
.IP \(bu 2
\fBrescale\fP (\fI\%True\fP) \-\- rescale or select range window
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateTicks(record)
update Ticks values
.INDENT 7.0
.TP
.B Parameters
\fBrecord\fP (\fBdict\(ga<:obj:\(gastr\fP, \fIany\fP>) \-\- dict record with the tick parameters:
"position" : [x, y]
"scale" : [sx, sy]
"xtext" : xlabel
"ytext" : ylabel
"xunits" : xunits
"yunits" : yunits
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B viewRange()
get view range values
.INDENT 7.0
.TP
.B Returns
xmin,ymin,xsize,ysize
.TP
.B Rtype rangelist
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B viewbox()
provides viewbox
:rtype: \fI\%pyqtgraph.ViewBox\fP
:returns: viewbox
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageDisplayWidget.IntensityParameters
Bases: \fI\%object\fP
.sp
intensity parameters
.sp
constructor
.INDENT 7.0
.TP
.B dobfsubtraction
(\fI\%bool\fP) do brightfield substraction
.UNINDENT
.INDENT 7.0
.TP
.B dobkgsubtraction
(\fI\%bool\fP) do background substraction
.UNINDENT
.INDENT 7.0
.TP
.B scaling
(\fI\%str\fP) intensity scaling
.UNINDENT
.INDENT 7.0
.TP
.B statswoscaling
(\fI\%bool\fP) calculate statistics without scaling
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageDisplayWidget.SafeImageItem(*args, **kargs)
Bases: \fI\%pyqtgraph.graphicsItems.ImageItem.ImageItem\fP
.sp
Image item which caught exceptions in paint
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%any\fP>) \-\- ImageItem parameters list
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- ImageItem parameter dictionary
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B paint(p, *args)
safe paint method
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBp\fP (\fBPyQt5.QtGui.QPainter\fP) \-\- painter
.IP \(bu 2
\fBargs\fP (\fI\%list\fP < \fI\%any\fP>) \-\- ImageItem parameters list
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageDisplayWidget.TransformationParameters
Bases: \fI\%object\fP
.sp
transformation parameters
.sp
constructor
.INDENT 7.0
.TP
.B leftrightflip
(\fI\%bool\fP) left\-right flip coordinates flag
.UNINDENT
.INDENT 7.0
.TP
.B orgtranspose
(\fI\%bool\fP) transpose coordinates flag
.UNINDENT
.INDENT 7.0
.TP
.B transpose
(\fI\%bool\fP) transpose coordinates flag
.UNINDENT
.INDENT 7.0
.TP
.B updownflip
(\fI\%bool\fP)  up\-down flip coordinates flag
.UNINDENT
.UNINDENT
.SS lavuelib.imageField
.sp
configuration widget
.INDENT 0.0
.TP
.B class lavuelib.imageField.ImageField(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B field
(\fI\%str\fP) selected field
.UNINDENT
.INDENT 7.0
.TP
.B fields
(\fI\%dict\fP <\fI\%str\fP,  \fI\%dict\fP <\fI\%str\fP, \fI\%any\fP>>)
image field dictionary
.UNINDENT
.INDENT 7.0
.TP
.B frame
(\fI\%int\fP) frame
.UNINDENT
.INDENT 7.0
.TP
.B growing
(\fI\%int\fP) growing dimension
.UNINDENT
.UNINDENT
.SS lavuelib.imageFileHandler module
.sp
this a simple file handler that loads image files
and delivers just the actual array
.INDENT 0.0
.TP
.B class lavuelib.imageFileHandler.CBFLoader
Bases: \fI\%object\fP
.sp
CBF loader
.INDENT 7.0
.TP
.B classmethod load(flbuffer)
loads CBF file image data into numpy array
.INDENT 7.0
.TP
.B Parameters
\fBflbuffer\fP (\fI\%numpy.ndarray\fP) \-\- numpy array with CBF file image data
.TP
.B Returns
image data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod metadata(flbuffer, premeta=None)
extract header_contents from CBF file image data
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBflbuffer\fP (\fI\%numpy.ndarray\fP or \fI\%str\fP) \-\- numpy array with CBF file image data
.IP \(bu 2
\fBpremeta\fP (\fI\%dict\fP  <\fI\%str\fP, \fI\%any\fP>) \-\- metadata to be merged
.UNINDENT
.TP
.B Returns
metadata dictionary
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageFileHandler.FABIO = True
(\fI\%bool\fP) fabio can be imported
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageFileHandler.ImageFileHandler(fname)
Bases: \fI\%object\fP
.sp
Simple file handler class.
Reads image from file and returns the numpy array.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBfname\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.INDENT 7.0
.TP
.B getImage()
provides the image data
.INDENT 7.0
.TP
.B Returns
image data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getMetaData()
provides the image metadata
.INDENT 7.0
.TP
.B Returns
JSON dictionary with image metadata
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageFileHandler.NexusFieldHandler(fname=None, writer=None)
Bases: \fI\%object\fP
.sp
Nexus file handler class.
Reads image from file and returns the numpy array.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfname\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBwriter\fP (\fI\%str\fP) \-\- h5 writer module: "h5cpp" or "h5py"
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod extract(value)
.UNINDENT
.INDENT 7.0
.TP
.B findImageFields()
provides a dictionary with of all image fields
.INDENT 7.0
.TP
.B Returns
dictionary of the field names and the field objects
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP,  \fI\%dict\fP <\fI\%str\fP, \fI\%any\fP>>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B frombuffer(membuffer, fname=None, writer=None)
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmembuffer\fP (\fI\%bytes\fP or \fI\%io.BytesIO\fP) \-\- memory buffer
.IP \(bu 2
\fBfname\fP (\fI\%str\fP) \-\- file name
.IP \(bu 2
\fBwriter\fP (\fI\%str\fP) \-\- h5 writer module: "h5py" or "h5py"
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod getFrameCount(node, growing=0, refresh=True)
provides the last frame number
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fI\%lavuelib.filewriter.FTField\fP) \-\- nexus field node
.IP \(bu 2
\fBgrowing\fP (\fI\%int\fP) \-\- growing dimension
.IP \(bu 2
\fBrefresh\fP (\fI\%bool\fP) \-\- refresh image node
.UNINDENT
.TP
.B Returns
a number of frames
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod getImage(node, frame=\- 1, growing=0, refresh=True)
parses the field and add it into the description list
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBnode\fP (\fI\%lavuelib.filewriter.FTField\fP) \-\- nexus field node
.IP \(bu 2
\fBframe\fP (\fI\%int\fP) \-\- frame to take, the last one is \-1
.IP \(bu 2
\fBgrowing\fP (\fI\%int\fP) \-\- growing dimension
.IP \(bu 2
\fBrefresh\fP (\fI\%bool\fP) \-\- refresh image node
.UNINDENT
.TP
.B Returns
get the image
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod getMetaData(node, mdata=None, maxrec=4)
provides the image metadata
.INDENT 7.0
.TP
.B Returns
JSON dictionary with image metadata
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getNode(field=None)
get node
:param field: field path
:type field: \fI\%str\fP
:returns: nexus field node
:rtype: \fI\%lavuelib.filewriter.FTField\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageFileHandler.PILLOW = True
(\fI\%bool\fP) PIL can be imported
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageFileHandler.TIFLoader
Bases: \fI\%object\fP
.sp
TIF loader
.INDENT 7.0
.TP
.B classmethod load(flbuffer)
loads TIF file image data into numpy array
.INDENT 7.0
.TP
.B Parameters
\fBflbuffer\fP (\fI\%numpy.ndarray\fP) \-\- numpy array with TIF file image data
.TP
.B Returns
image data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageFileHandler.WRITERS = {\(aqh5cpp\(aq: <module \(aqlavuelib.h5cppwriter\(aq from \(aq/home/jkotan/ndts/lavue/lavuelib/h5cppwriter.py\(aq>, \(aqh5py\(aq: <module \(aqlavuelib.h5pywriter\(aq from \(aq/home/jkotan/ndts/lavue/lavuelib/h5pywriter.py\(aq>}
(\fI\%dict\fP <\fI\%str\fP, \fBmodule\fP> ) nexus writer modules
.UNINDENT
.SS lavuelib.imageNexusExporter module
.sp
image Nexus exporter
.INDENT 0.0
.TP
.B class lavuelib.imageNexusExporter.ImageNexusExporter(item)
Bases: \fI\%pyqtgraph.exporters.Exporter.Exporter\fP
.sp
NeXus Raw Image Exporter
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBitem\fP \-\- image item
.IP \(bu 2
\fBitem\fP \-\- .INDENT 2.0
.TP
.B class
\fIpyqtgraph.PlotItem\fP or \fIpyqtgraph.GraphicsScene\fP
.UNINDENT

.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B Name = \(aqNeXus Raw Image\(aq
.UNINDENT
.INDENT 7.0
.TP
.B allowCopy = False
.UNINDENT
.INDENT 7.0
.TP
.B export(fileName=None)
export data image to NeXus file
.INDENT 7.0
.TP
.B Parameters
\fBfileName\fP \-\- output file name
.TP
.B Rtype fileName
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B parameters()
.INDENT 7.0
.TP
.B Returns
exporter parameters
.TP
.B Return type
\fI\%pyqtgraph.parametertree.Parameter\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B params
(\fI\%pyqtgraph.parametertree.Parameter\fP) exporter parameters
.UNINDENT
.INDENT 7.0
.TP
.B windows = []
.UNINDENT
.UNINDENT
.SS lavuelib.imageSource module
.sp
set of image sources
.INDENT 0.0
.TP
.B lavuelib.imageSource.ASAPO = True
(\fI\%bool\fP) asapo imported
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.ASAPOSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
asapo image source
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B disconnect()
disconnects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getMetaData()
get metadata
.INDENT 7.0
.TP
.B Returns
dictionary with metadata
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fI\%any\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setConfiguration(configuration)
set configuration
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.BaseSource(timeout=None)
Bases: \fI\%object\fP
.sp
source base class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B disconnect()
disconnects the source
.UNINDENT
.INDENT 7.0
.TP
.B errormessage
(\fI\%str\fP) errormessage
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getMetaData()
get metadata
.INDENT 7.0
.TP
.B Returns
dictionary with metadata
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fI\%any\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setConfiguration(configuration)
set configuration
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTimeOut(timeout)
set timeout
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout in ms
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.DATAARRAYdecoder
Bases: \fI\%object\fP
.sp
DATA ARRAY LIMA decoder
.sp
constructor
.INDENT 7.0
.TP
.B Brief
It clears the local variables
.UNINDENT
.INDENT 7.0
.TP
.B decode()
provides the decoded data
.INDENT 7.0
.TP
.B Returns
the decoded data if data was loaded
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dtype
(\fI\%str\fP) data type
.UNINDENT
.INDENT 7.0
.TP
.B format
(\fI\%str\fP) decoder format
.UNINDENT
.INDENT 7.0
.TP
.B frameNumber()
no data
.UNINDENT
.INDENT 7.0
.TP
.B load(data)
loads encoded data
.INDENT 7.0
.TP
.B Parameters
\fBdata\fP ([\fI\%str\fP, \fI\%str\fP]) \-\- encoded data
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) decoder name
.UNINDENT
.INDENT 7.0
.TP
.B shape()
provides the data shape
.INDENT 7.0
.TP
.B Returns
the data shape if data was loaded
.TP
.B Return type
\fI\%list\fP <\fI\%int\fP >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B steps()
provides the data steps
.INDENT 7.0
.TP
.B Returns
the data steps if data was loaded
.TP
.B Return type
\fI\%list\fP <\fI\%int\fP >
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.DOOCSPropSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as IMAGE DOOCS property
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.EpicsPVSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as Epics Process variable
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.FixTestSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as Tango attributes describing
an image file name and its directory
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B disconnect()
disconnects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.HIDRA = True
(\fI\%bool\fP) hidra imported
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.HTTPSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as HTTP request response
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.HiDRASource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
hidra image source
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B disconnect()
disconnects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setConfiguration(configuration)
set configuration
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.NXSFileSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as Tango attributes describing
an image file name and its directory
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B disconnect()
disconnects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setConfiguration(configuration)
set configuration
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.PILLOW = True
(\fI\%bool\fP) PIL imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.PYDOOCS = False
(\fI\%bool\fP) pydoocs imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.PYEPICS = True
(\fI\%bool\fP) pyepics imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.PYFAI = True
(\fI\%bool\fP) pyFAI imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.PYTG_BUG_213 = False
(\fI\%bool\fP) PyTango bug #213 flag related to EncodedAttributes in python3
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.REQUESTS = True
(\fI\%bool\fP) requests imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.TANGO = True
(\fI\%bool\fP) tango imported
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.TangoAttrSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as IMAGE Tango attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.TangoEventsCB(client, name, mutex)
Bases: \fI\%object\fP
.sp
tango attribute callback class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBclient\fP (\fI\%str\fP) \-\- tango controller client
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBmutex\fP \-\- mutex lock for CB
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B push_event(event_data)
callback method receiving the event
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.TangoEventsSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as IMAGE Tango attribute
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B disconnect()
disconnects the source
.UNINDENT
.INDENT 7.0
.TP
.B fresh
(\fI\%bool\fP) fresh attribute flag
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B reading
(\fI\%bool\fP) reading flag
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.TangoFileSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as Tango attributes describing
an image file name and its directory
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B disconnect()
disconnects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.TangoReadyEventsCB(client, name, mutex)
Bases: \fI\%object\fP
.sp
tango attribute callback class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBclient\fP (\fI\%str\fP) \-\- tango controller client
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBmutex\fP \-\- mutex lock for CB
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B push_event(event_data)
callback method receiving the event
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.TinePropSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as Tine Property
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setConfiguration(configuration)
set configuration
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.VDEOdecoder
Bases: \fI\%object\fP
.sp
VIDEO IMAGE LIMA decoder
.sp
constructor
.INDENT 7.0
.TP
.B Brief
It clears the local variables
.UNINDENT
.INDENT 7.0
.TP
.B decode()
provides the decoded data
.INDENT 7.0
.TP
.B Returns
the decoded data if data was loaded
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dtype
(\fI\%str\fP) data type
.UNINDENT
.INDENT 7.0
.TP
.B format
(\fI\%str\fP) decoder format
.UNINDENT
.INDENT 7.0
.TP
.B frameNumber()
provides the frame number
.INDENT 7.0
.TP
.B Returns
the frame number
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B load(data)
loads encoded data
.INDENT 7.0
.TP
.B Parameters
\fBdata\fP ([\fI\%str\fP, \fI\%str\fP]) \-\- encoded data
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) decoder name
.UNINDENT
.INDENT 7.0
.TP
.B shape()
provides the data shape
.INDENT 7.0
.TP
.B Returns
the data shape if data was loaded
.TP
.B Return type
\fI\%list\fP <\fI\%int\fP >
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.ZMQMAJOR = 4
(\fI\%str\fP,:obj:\fIstr\fP) zmq major version, zmq minor version
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.ZMQMINOR = 3
(\fI\%str\fP,:obj:\fIstr\fP) zmq major version, zmq minor version
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.imageSource.ZMQSource(timeout=None)
Bases: \fI\%lavuelib.imageSource.BaseSource\fP
.sp
image source as ZMQ stream
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBtimeout\fP (\fI\%int\fP) \-\- timeout for setting connection in ms
.UNINDENT
.INDENT 7.0
.TP
.B connect()
connects the source
.UNINDENT
.INDENT 7.0
.TP
.B disconnect()
disconnects the source
.UNINDENT
.INDENT 7.0
.TP
.B getData()
provides image name, image data and metadata
.INDENT 7.0
.TP
.B Returns
image name, image data, json dictionary with metadata
.TP
.B Return type
(\fI\%str\fP , \fI\%numpy.ndarray\fP , \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setConfiguration(configuration)
set configuration
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.currenttime()
provides current time in iso format
.INDENT 7.0
.TP
.B Returns
current time in iso format
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.fbmj = \(aq0\(aq
(\fI\%bool\fP) fabio can be imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.fbmn = \(aq11\(aq
(\fI\%bool\fP) fabio can be imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.fbpa = \(aq0\(aq
(\fI\%bool\fP) fabio can be imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.getLevel(elevel=None)
get log level in string
.INDENT 7.0
.TP
.B Parameters
\fBelevel\fP (\fI\%int\fP) \-\- effective log level
.TP
.B Returns
log level in string
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.tobytes(x)
decode str to bytes
.INDENT 7.0
.TP
.B Parameters
\fBx\fP (\fI\%str\fP) \-\- string
.TP
.B Returns
decode string in byte array
.TP
.B Return type
\fI\%bytes\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.imageSource.tostr(x)
decode bytes to str
.INDENT 7.0
.TP
.B Parameters
\fBx\fP (\fI\%bytes\fP) \-\- string
.TP
.B Returns
decode string in byte array
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.SS lavuelib.imageWidget module
.sp
image widget
.INDENT 0.0
.TP
.B class lavuelib.imageWidget.ImageWidget(parent=None, tooltypes=None, settings=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
The part of the GUI that incorporates the image view.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBtooltypes\fP (\fI\%list\fP <\fI\%str\fP>) \-\- tool class names
.IP \(bu 2
\fBsettings\fP (\fI\%lavuelib.settings.Settings\fP) \-\- lavue configuration settings
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B applyMask()
provides apply mask flag
.INDENT 7.0
.TP
.B Returns
True for apply mask
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B applyROIs(rlabel, roispin)
saves ROIs in sardana and add them to the measurement group
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrlabel\fP (\fI\%str\fP) \-\- rois aliases separated by space
.IP \(bu 2
\fBroispin\fP (\fI\%int\fP) \-\- the current number of rois
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B applyTipsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) apply tips changed signal
.UNINDENT
.INDENT 7.0
.TP
.B aspectLockedToggled
(\fBpyqtgraph.QtCore.pyqtSignal\fP) aspect locked toggled signal
.UNINDENT
.INDENT 7.0
.TP
.B autoRange()
sets auto range
.UNINDENT
.INDENT 7.0
.TP
.B axestext()
return axes text
.INDENT 7.0
.TP
.B Returns
x,y text
.TP
.B Return type
(\fI\%str\fP, \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B axesunits()
return axes units
.INDENT 7.0
.TP
.B Returns
x,y units
.TP
.B Return type
(\fI\%str\fP, \fI\%str\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B bottomplotShowMenu(freeze=False, clear=False)
shows freeze or/and clean action in the menu
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfreeze\fP (\fI\%bool\fP) \-\- freeze show status
.IP \(bu 2
\fBfreeze\fP \-\- clean show status
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B bottomplotStretch(stretch=1)
stretches the bottom plot
.INDENT 7.0
.TP
.B Parameters
\fBstretch\fP (\fI\%int\fP) \-\- stretch factor
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B calcROIsum()
calculates the current roi sum
.INDENT 7.0
.TP
.B Returns
sum roi value, roi id
.TP
.B Return type
(\fI\%str\fP, \fI\%int\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B calcROIsums()
calculates all roi sums
.INDENT 7.0
.TP
.B Returns
sum roi value, roi id
.TP
.B Return type
\fI\%list\fP < float >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changeMeshRegion()
changes the current roi region
.UNINDENT
.INDENT 7.0
.TP
.B changeROIRegion()
changes the current roi region
.UNINDENT
.INDENT 7.0
.TP
.B clearBottomPlotClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) clear clicked signal
.UNINDENT
.INDENT 7.0
.TP
.B colorsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) colors changed signal
.UNINDENT
.INDENT 7.0
.TP
.B currentCut()
provides current cut id
.INDENT 7.0
.TP
.B Returns
cut id
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentData()
provides the data
.INDENT 7.0
.TP
.B Returns
current data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentIntensity()
provides intensity for current mouse position
.INDENT 7.0
.TP
.B Returns
x position, y position, pixel intensity
.TP
.B Return type
(\fI\%float\fP, \fI\%float\fP, \fI\%float\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentROI()
provides current roi id
.INDENT 7.0
.TP
.B Returns
roi id
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentTool()
provides the current tool
.INDENT 7.0
.TP
.B Returns
current tool name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentToolChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) current tool changed signal
.UNINDENT
.INDENT 7.0
.TP
.B cutCoords()
provides cuts coordinates
.INDENT 7.0
.TP
.B Returns
cuts coordinates
.TP
.B Return type
\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B cutCoordsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) cut coordinate changed signal
.UNINDENT
.INDENT 7.0
.TP
.B cutData(cid=None)
provides the current cut data
.INDENT 7.0
.TP
.B Parameters
\fBcid\fP (\fI\%int\fP) \-\- cut id
.TP
.B Returns
current cut data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B cutNumberChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) cut number changed signal
.UNINDENT
.INDENT 7.0
.TP
.B disconnecttool()
disconnect current tool widget
.UNINDENT
.INDENT 7.0
.TP
.B emitAspectLockedToggled(status)
emits aspectLockedToggled
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- current state
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B emitCutCoordsChanged()
emits cutCoordsChanged
.UNINDENT
.INDENT 7.0
.TP
.B emitReplotImage(autorange=True)
emits replotImage
.UNINDENT
.INDENT 7.0
.TP
.B emitTCC()
emits toolConfigurationChanged
.UNINDENT
.INDENT 7.0
.TP
.B fetchROIs(rlabel)
loads ROIs from sardana
.INDENT 7.0
.TP
.B Parameters
\fBrlabel\fP (\fI\%str\fP) \-\- rois aliases separated by space
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B freezeBottomPlotClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) freeze clicked signal
.UNINDENT
.INDENT 7.0
.TP
.B geometryChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) geometry changed
.UNINDENT
.INDENT 7.0
.TP
.B getDoor()
runs macro
.INDENT 7.0
.TP
.B Parameters
\fBcommand\fP (\fI\%list\fP <\fI\%str\fP>) \-\- command list
.TP
.B Returns
macro runned
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getElementNames(listattr, typefilter=None)
provides experimental Channels
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBlistattr\fP (\fI\%str\fP) \-\- pool attribute with list
.IP \(bu 2
\fBtypefilter\fP (\fI\%list\fP <\fI\%str\fP>) \-\- pool attribute with list
.UNINDENT
.TP
.B Returns
names from given pool listattr
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B gradientColors()
gets gradientcolors on/off
.INDENT 7.0
.TP
.B Returns
True for on and False for off
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B image(iid=0)
provides imageItem object
.INDENT 7.0
.TP
.B Parameters
\fBiid\fP (\fI\%int\fP) \-\- image id
.TP
.B Returns
image object
.TP
.B Return type
\fI\%pyqtgraph.ImageItem\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B imageName()
provide the current image name
.INDENT 7.0
.TP
.B Returns
image name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B imagePlotted
(\fBpyqtgraph.QtCore.pyqtSignal\fP) image plotted signal
.UNINDENT
.INDENT 7.0
.TP
.B levelMode()
gets level mode
.INDENT 7.0
.TP
.B Returns
level mode, i.e. \fImono\fP or \fIrgba\fP
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B maskIndices()
provides mask image indices
.INDENT 7.0
.TP
.B Returns
mask image indices
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B maskValue()
provides high mask value
.INDENT 7.0
.TP
.B Returns
high mask value
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B maskValueIndices()
provides mask image value indices
.INDENT 7.0
.TP
.B Returns
mask image indices
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B meshCoords()
provides rois coordinates
.INDENT 7.0
.TP
.B Returns
rois coordinates
.TP
.B Return type
\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B meshCoordsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) mesh coordinate changed signal
.UNINDENT
.INDENT 7.0
.TP
.B mouseImageDoubleClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) mouse double clicked
.UNINDENT
.INDENT 7.0
.TP
.B mouseImagePositionChanged
.UNINDENT
.INDENT 7.0
.TP
.B mouseImageSingleClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) mouse single clicked
.UNINDENT
.INDENT 7.0
.TP
.B onedbarbottomplot()
creates 1d bottom bar plot
.INDENT 7.0
.TP
.B Returns
1d bottom bar plot
.TP
.B Return type
\fI\%pyqtgraph.BarGraphItem\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B onedbarrightplot()
creates 1d right bar plot
.INDENT 7.0
.TP
.B Returns
1d right bar plot
.TP
.B Return type
\fI\%pyqtgraph.BarGraphItem\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B onedbottomplot(clear=False, name=None)
creates 1d bottom plot
.INDENT 7.0
.TP
.B Parameters
\fBclear\fP (\fI\%bool\fP) \-\- clear flag
.TP
.B Returns
1d bottom plot
.TP
.B Return type
\fI\%pyqtgraph.PlotDataItem\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B onedrightplot(clear=False)
creates 1d right plot
.INDENT 7.0
.TP
.B Parameters
\fBclear\fP (\fI\%bool\fP) \-\- clear flag
.TP
.B Returns
1d right plot
.TP
.B Return type
\fI\%pyqtgraph.PlotDataItem\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B onedshowlegend(show=True)
shows/hides 1d bottom plot legend
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- show flag
.TP
.B Returns
1d bottom plot
.TP
.B Return type
\fI\%pyqtgraph.PlotDataItem\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B overflowValue()
provides overflow value
.INDENT 7.0
.TP
.B Returns
overflow value
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B overflowValueIndices()
provides overflow image value indices
.INDENT 7.0
.TP
.B Returns
overflow image indices
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B plot(array, rawarray=None, imagename=None, maskarray=None)
plots the image
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d image array
.IP \(bu 2
\fBrawarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d raw image array
.IP \(bu 2
\fBimagename\fP (\fI\%str\fP) \-\- image name
.IP \(bu 2
\fBmaskarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d color mask image array
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rangeWindowEnabled()
provide info if range window enabled
.INDENT 7.0
.TP
.B Returns
range window enabled
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rangeWindowScale()
provide info range window scale
.INDENT 7.0
.TP
.B Returns
range window scale
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rawData()
provides the raw data
.INDENT 7.0
.TP
.B Returns
current raw data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B removebottomplot(plot)
removes bottom plot
.INDENT 7.0
.TP
.B Parameters
\fBplot\fP (\fI\%pyqtgraph.PlotItem\fP) \-\- right plot item
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B removerightplot(plot)
removes right plot
.INDENT 7.0
.TP
.B Parameters
\fBplot\fP (\fI\%pyqtgraph.PlotItem\fP) \-\- right plot item
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B replotImage
(\fBpyqtgraph.QtCore.pyqtSignal\fP) replot image signal
.UNINDENT
.INDENT 7.0
.TP
.B rgb()
gets RGB on/off
.INDENT 7.0
.TP
.B Returns
True for on and False for off
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B roiAliasesChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi aliases changed signal
.UNINDENT
.INDENT 7.0
.TP
.B roiCoords()
provides rois coordinates
.INDENT 7.0
.TP
.B Returns
rois coordinates
.TP
.B Return type
\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B roiCoordsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi coordinate changed signal
.UNINDENT
.INDENT 7.0
.TP
.B roiLineEditChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi Line Edit changed signal
.UNINDENT
.INDENT 7.0
.TP
.B roiNumberChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi number changed signal
.UNINDENT
.INDENT 7.0
.TP
.B roiValueChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi value changed signal
.UNINDENT
.INDENT 7.0
.TP
.B roilabels
(obj\(gastr\(ga) roi labels
.UNINDENT
.INDENT 7.0
.TP
.B runMacro(command)
runs macro
.INDENT 7.0
.TP
.B Parameters
\fBcommand\fP (\fI\%list\fP <\fI\%str\fP>) \-\- command list
.TP
.B Returns
macro runned
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sardanaEnabled
(\fBpyqtgraph.QtCore.pyqtSignal\fP) sardana enabled signal
.UNINDENT
.INDENT 7.0
.TP
.B scale(useraxes=True, noNone=False)
provides scale and position of the axes
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBuseraxes\fP (\fI\%bool\fP) \-\- use user scaling
.IP \(bu 2
\fBnoNone\fP (\fI\%bool\fP) \-\- return values without None
.UNINDENT
.TP
.B Return type
[\fI\%int\fP, \fI\%int\fP, \fI\%int\fP, \fI\%int\fP]
.TP
.B Returns
[posx, posy, scalex, scaley]
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scaledxy(x, y, useraxes=True)
provides scaled x,y positions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBx\fP (\fI\%float\fP) \-\- x pixel coordinate
.IP \(bu 2
\fBy\fP (\fI\%float\fP) \-\- y pixel coordinate
.IP \(bu 2
\fBuseraxes\fP (\fI\%bool\fP) \-\- use user scaling
.UNINDENT
.TP
.B Returns
scaled x,y position
.TP
.B Return type
(\fI\%float\fP, \fI\%float\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scalesChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) scales changed signal
.UNINDENT
.INDENT 7.0
.TP
.B scaling()
provides scaling type
.INDENT 7.0
.TP
.B Returns
scaling type
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scalingLabel()
provides scaling label
.INDENT 7.0
.TP
.B Returns
scaling label
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setApplyMask(applymask=True)
sets apply mask flag
.INDENT 7.0
.TP
.B Params applymask
True for apply mask
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setAspectLocked(status)
sets aspectLocked
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- state to set
.TP
.B Returns
old state
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setAutoDownSample(autodownsample)
sets auto down sample
.INDENT 7.0
.TP
.B Parameters
\fBautolevels\fP (\fI\%bool\fP) \-\- auto down sample enabled
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setAutoLevels(autolevels)
sets auto levels
.INDENT 7.0
.TP
.B Parameters
\fBautolevels\fP (\fI:obj:\(aqint\(ga\fP) \-\- 2: auto levels enabled 1: with autofactor
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setChannelLevels(levels=None)
sets minimum intensity levels
.INDENT 7.0
.TP
.B Parameters
\fBlevels\fP (\fI\%list\fP < (:obj\(gafloat\(ga:, :obj\(gafloat\(ga:)>) \-\- channel intensity levels
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setColors(colors)
sets item colors
.INDENT 7.0
.TP
.B Parameters
\fBcolors\fP (\fI\%str\fP) \-\- json list of roi colors
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDisplayedText(text=None)
sets displayed info text and recalculates the current roi sum
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- text to display
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDoBFSubtraction(state)
sets do brightfield subtraction flag
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- do brightfield subtraction flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDoBkgSubtraction(state)
sets do background subtraction flag
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- do background subtraction flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDoubleClickLock(status=True)
sets double click lock
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- status flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setExtensionsRefreshTime(refreshtime)
set display extension refresh time
.INDENT 7.0
.TP
.B Parameters
\fBrefreshtime\fP (\fI\%float\fP) \-\- refresh time in seconds
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setGradientColors(status=True)
sets gradientcolors on/off
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- True for on and False for off
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setLevelMode(levelmode=True)
sets levelmode
.INDENT 7.0
.TP
.B Parameters
\fBlevelmode\fP (\fI\%str\fP) \-\- level mode, i.e. \fImono\fP or \fIrgba\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMaskIndices(maskindices)
sets mask image indices
.INDENT 7.0
.TP
.B Params maskindices
mask image indices
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMaskValue(maskvalue)
sets high mask value
.INDENT 7.0
.TP
.B Params maskvalue
high mask value
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMaskValueIndices(maskindices)
sets mask image indices
.INDENT 7.0
.TP
.B Params maskindices
mask image  value indices
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMaxLevel(level=None)
sets maximum intensity level
.INDENT 7.0
.TP
.B Parameters
\fBlevel\fP (\fI\%float\fP) \-\- maximum intensity
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMaximaPos(positionlist, offset=None)
sets maxima postions
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpositionlist\fP (\fI\%list\fP < (float, float) >) \-\- [(x1, y1), ... , (xn, yn)]
.IP \(bu 2
\fBoffset\fP ([ \fI\%float\fP, \fI\%float\fP]) \-\- offset of position
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMinLevel(level=None)
sets minimum intensity level
.INDENT 7.0
.TP
.B Parameters
\fBlevel\fP (\fI\%float\fP) \-\- minimum intensity
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setOverflowColor(color)
sets item color
.INDENT 7.0
.TP
.B Parameters
\fBcolor\fP (\fI\%str\fP) \-\- json list of overflow color
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setOverflowValue(overflowvalue)
sets overflow value
.INDENT 7.0
.TP
.B Params overflowvalue
overflow value
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setOverflowValueIndices(overflowindices)
sets overflow image indices
.INDENT 7.0
.TP
.B Params overflowindices
overflow image  value indices
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setSardanaUtils(sardana)
sets sardana utils
.INDENT 7.0
.TP
.B Parameters
\fBsardana\fP (\fI\%lavuelib.sardanaUtils.SardanaUtils\fP) \-\- sardana utils
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setScalingType(scalingtype)
sets intensity scaling types
.INDENT 7.0
.TP
.B Parameters
\fBscalingtype\fP (\fI\%str\fP) \-\- intensity scaling type
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setStatsWOScaling(status)
sets statistics without scaling flag
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- statistics without scaling flag
.TP
.B Returns
change status
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTangoClient(tangoclient)
sets tango client
.INDENT 7.0
.TP
.B Parameters
\fBtangoclient\fP (\fI\%lavuelib.controllerClient.ControllerClient\fP) \-\- attribute name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTicks()
launch axes widget
.INDENT 7.0
.TP
.B Returns
apply status
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTool(tool)
sets tool from string
.INDENT 7.0
.TP
.B Parameters
\fBtool\fP (\fI\%str\fP) \-\- tool name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setToolConfiguration(config)
sets tool configuration from JSON dictionary
.INDENT 7.0
.TP
.B Parameters
\fBconfig\fP (\fI\%str\fP) \-\- JSON dictionary with tool configuration
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setToolScale(position=None, scale=None)
get axes parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBposition\fP ([\fI\%float\fP, \fI\%float\fP]) \-\- start position of axes
.IP \(bu 2
\fBscale\fP ([\fI\%float\fP, \fI\%float\fP]) \-\- scale axes
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTransformations(transpose, leftrightflip, updownflip, orgtranspose, orgleftrightflip, orgupdownflip)
sets coordinate transformations
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtranspose\fP (\fI\%bool\fP) \-\- transpose coordinates flag
.IP \(bu 2
\fBleftrightflip\fP (\fI\%bool\fP) \-\- left\-right flip coordinates flag
.IP \(bu 2
\fBupdownflip\fP (\fI\%bool\fP) \-\- up\-down flip coordinates flag
.IP \(bu 2
\fBorgtranspose\fP (\fI\%bool\fP) \-\- selected transpose coordinates flag
.IP \(bu 2
\fBorgleftrightflip\fP (\fI\%bool\fP) \-\- selected left\-right flip coordinates flag
.IP \(bu 2
\fBorgupdownflip\fP (\fI\%bool\fP) \-\- selected up\-down flip coordinates flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setViewRange(rangelist)
set view range values
.INDENT 7.0
.TP
.B Parameters
\fBrangelist\fP (\fI\%str\fP) \-\- xmin,ymin,xsize,ysize
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setrgb(status=True)
sets RGB on/off
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- True for on and False for off
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B settings()
provides settings
.INDENT 7.0
.TP
.B Returns
setting object
.TP
.B Return type
\fI\%lavuelib.settings.Settings\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showCurrentTool()
shows the current tool
.UNINDENT
.INDENT 7.0
.TP
.B showDoorError()
show door error
.UNINDENT
.INDENT 7.0
.TP
.B showTool(text)
shows the current tool
.UNINDENT
.INDENT 7.0
.TP
.B tool()
provices tool from string
.INDENT 7.0
.TP
.B Parameters
\fBtool\fP (\fI\%str\fP) \-\- tool name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B toolConfiguration()
provides tool configuration
.INDENT 7.0
.TP
.B Returns
JSON dictionary with tool configuration
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B toolConfigurationChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) tool configuration changed signal
.UNINDENT
.INDENT 7.0
.TP
.B transformations()
povides coordinates transformations
.INDENT 7.0
.TP
.B Returns
transpose, leftrightflip, updownflip flags,
original transpose
.TP
.B Return type
(\fI\%bool\fP, \fI\%bool\fP, \fI\%bool\fP, \fI\%bool\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateBeamCenterX(x)
updates the beam center x
.INDENT 7.0
.TP
.B Parameters
\fBx\fP (\fI\%float\fP) \-\- beam center x
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateBeamCenterY(y)
updates the beam center y
.INDENT 7.0
.TP
.B Parameters
\fBy\fP (\fI\%float\fP) \-\- beam center y
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateCenter(xdata, ydata)
updates the image center
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBxdata\fP (\fI\%float\fP) \-\- x pixel position
.IP \(bu 2
\fBydata\fP (\fI\%float\fP) \-\- y\-pixel position
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateCuts(cid, coords=None)
update Cuts
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcid\fP (\fI\%int\fP) \-\- cut id
.IP \(bu 2
\fBcoords\fP (\fI\%list\fP
< [float, float, float, float, float] >) \-\- cut coordinates and width
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateDetectorDistance(distance)
updates the detector distance
.INDENT 7.0
.TP
.B Parameters
\fBdistance\fP (\fI\%float\fP) \-\- detector distance
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateDetectorROIs(rois)
updates the detector ROIs
.INDENT 7.0
.TP
.B Parameters
\fBdistance\fP (\fI\%str\fP) \-\- json dictionary with detector ROIs
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateDisplayedText(text)
sets displayed info text
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- text to display
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateDisplayedTextTip(text)
sets displayed info text tup
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- tip text to display
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateEnergy(energy)
updates the beam energy
.INDENT 7.0
.TP
.B Parameters
\fBenergy\fP (\fI\%float\fP) \-\- beam energy
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateHBounds(xdata1, xdata2)
updates the vertical bounds
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBxdata1\fP (\fI\%float\fP) \-\- first x\-pixel position
.IP \(bu 2
\fBxdata2\fP (\fI\%float\fP) \-\- second x\-pixel position
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateImage(array=None, rawarray=None, maskarray=None)
update the image
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d image array
.IP \(bu 2
\fBrawarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d raw image array
.IP \(bu 2
\fBmaskarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d color mask image array
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(axisscales=None, axislabels=None, rescale=False)
update Metadata informations
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBaxisscales\fP ([\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP]) \-\- [xstart, ystart, xscale, yscale]
.IP \(bu 2
\fBaxislabels\fP ([\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP]) \-\- [xtext, ytext, xunits, yunits]
.IP \(bu 2
\fBrescale\fP (\fI\%True\fP) \-\- rescale or select range window
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updatePixelSizeX(x)
updates the pixel x\-size
.INDENT 7.0
.TP
.B Parameters
\fBx\fP (\fI\%float\fP) \-\- pixel x\-size
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updatePixelSizeY(y)
updates the pixel y\-size
.INDENT 7.0
.TP
.B Parameters
\fBy\fP (\fI\%float\fP) \-\- pixel y\-size
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updatePositionMark(xdata, ydata, scaled=False)
updates the position mark
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBxdata\fP (\fI\%float\fP) \-\- x pixel position
.IP \(bu 2
\fBydata\fP (\fI\%float\fP) \-\- y\-pixel position
.IP \(bu 2
\fBscaled\fP (\fI\%bool\fP) \-\- scaled flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updatePositionTrackingMark(xdata, ydata, scaled=False)
updates the position tracking mark
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBxdata\fP (\fI\%float\fP) \-\- x pixel position
.IP \(bu 2
\fBydata\fP (\fI\%float\fP) \-\- y\-pixel position
.IP \(bu 2
\fBscaled\fP (\fI\%bool\fP) \-\- scaled flag
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateROIs(rid, coords=None)
update ROIs
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrid\fP (\fI\%int\fP) \-\- roi id
.IP \(bu 2
\fBcoords\fP (\fI\%list\fP
< [\fI\%float\fP, \fI\%float\fP, \fI\%float\fP, \fI\%float\fP] >) \-\- roi coordinates
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateRegions(points=None, rid=None)
update Ranges
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpoints\fP (\fI\%list\fP <  \fI\%list\fP <  \fI\%list\fP
< (\fI\%float\fP, \fI\%float\fP) > > >) \-\- roi coordinates
.IP \(bu 2
\fBrid\fP (\fI\%int\fP) \-\- region id
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateTicks(record)
update Ticks values
.INDENT 7.0
.TP
.B Parameters
\fBrecord\fP (\fBdict\(ga<:obj:\(gastr\fP, \fIany\fP>) \-\- dict record with the tick parameters:
"position" : [x, y]
"scale" : [sx, sy]
"xtext" : xlabel
"ytext" : ylabel
"xunits" : xunits
"yunits" : yunits
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateToolComboBox(toolnames, name=None)
set tool by changing combobox
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtoolnames\fP (\fI\%list\fP < \fI\%str\fP >) \-\- tool names
.IP \(bu 2
\fBindex\fP (\fI\%int\fP) \-\- combobox index
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateVBounds(ydata1, ydata2)
updates the vertical bounds
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBydata1\fP (\fI\%float\fP) \-\- first x\-pixel position
.IP \(bu 2
\fBydata2\fP (\fI\%float\fP) \-\- second x\-pixel position
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateinfowidgets(parameters)
.UNINDENT
.INDENT 7.0
.TP
.B viewRange()
get view range values
.INDENT 7.0
.TP
.B Returns
xmin,ymin,xsize,ysize
.TP
.B Rtype rangelist
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B writeAttribute(name, value)
writes attribute value of device
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- attribute name
.IP \(bu 2
\fBvalue\fP (\fI\%any\fP) \-\- attribute value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B writeDetectorAttributes()
write detector settings from ai object
.UNINDENT
.INDENT 7.0
.TP
.B writeDetectorROIsAttribute()
writes DetectorROIsattribute value of device
.UNINDENT
.INDENT 7.0
.TP
.B writeDetectorROIsValuesAttribute(rvalues)
writes DetectorROIsValuesattribute of device
.INDENT 7.0
.TP
.B Parameters
\fBrvalues\fP (\fIobj\(galist < :obj:\(gafloat\fP>) \-\- list of roi values
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.intervalsDialog module
.sp
interval device widget
.INDENT 0.0
.TP
.B class lavuelib.intervalsDialog.IntervalsDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
interval widget class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B itime
(\fI\%float\fP) integration time in seconds
.UNINDENT
.INDENT 7.0
.TP
.B xintervals
(\fI\%int\fP) number of x intervals
.UNINDENT
.INDENT 7.0
.TP
.B yintervals
(\fI\%int\fP) number of y intervals
.UNINDENT
.UNINDENT
.SS lavuelib.levelsGroupBox module
.sp
level widget
.INDENT 0.0
.TP
.B class lavuelib.levelsGroupBox.LevelsGroupBox(parent=None, settings=None, expertmode=False)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Set minimum and maximum displayed values and its color.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBsettings\fP (\fI\%lavuelib.settings.Settings\fP) \-\- lavue configuration settings
.IP \(bu 2
\fBexpertmode\fP (\fI\%bool\fP) \-\- expert mode flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B autoFactor()
provides factor for automatic levels
.INDENT 7.0
.TP
.B Returns
factor for automatic levels
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B autoLevelsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) automatic levels changed signal
.UNINDENT
.INDENT 7.0
.TP
.B changeView(showhistogram=None, showlevels=None, showadd=None)
shows or hides the histogram widget
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshowhistogram\fP (\fI\%bool\fP) \-\- if histogram should be shown
.IP \(bu 2
\fBshowlevels\fP (\fI\%bool\fP) \-\- if levels should be shown
.IP \(bu 2
\fBshowadd\fP (\fI\%bool\fP) \-\- if additional histogram should be shown
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B channelLevels()
provides levels from configuration string
.INDENT 7.0
.TP
.B Returns
channel levels
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B channelLevelsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) channel levels changed signal
.UNINDENT
.INDENT 7.0
.TP
.B gradient()
provides the current color gradient
.INDENT 7.0
.TP
.B Returns
gradient name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B gradientChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) gradient changed signal
.UNINDENT
.INDENT 7.0
.TP
.B gradientColors()
gets gradientcolors on/off
.INDENT 7.0
.TP
.B Returns
True for on and False for off
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isAutoLevel()
returns if automatics levels are enabled
.INDENT 7.0
.TP
.B Returns
if automatics levels are enabled
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B levelMode()
return historgram level mode
.INDENT 7.0
.TP
.B Returns
level mode
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B levels()
provides levels from configuration string
.INDENT 7.0
.TP
.B Returns
configuration string: lowlim,uplim or
lowlim,uplim;c1l,c1u;c2l,c2u;c3l,c3u
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B levelsChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) levels changed signal
.UNINDENT
.INDENT 7.0
.TP
.B maxLevelChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) maximum level changed signal
.UNINDENT
.INDENT 7.0
.TP
.B minLevelChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) minimum level changed signal
.UNINDENT
.INDENT 7.0
.TP
.B setAutoFactor(factor)
sets factor for automatic levels
.INDENT 7.0
.TP
.B Parameters
\fBfactor\fP (\fI\%str\fP) \-\- factor for automatic levels
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setAutoLevels(auto)
enables or disables automatic levels
.INDENT 7.0
.TP
.B Parameters
\fBauto\fP (\fI\%bool\fP or \fI\%int\fP) \-\- if automatics levels to be set
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setBins(index)
sets bins edges algorithm for histogram
.INDENT 7.0
.TP
.B Parameters
\fBindex\fP (\fI\%int\fP) \-\- bins edges algorithm index for histogram
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setGradient(name, iid=None)
sets gradient
.sp
:param name  gradient name
:type name: \fI\%str\fP
:param iid: image id
:type iid: \fI\%int\fP
.UNINDENT
.INDENT 7.0
.TP
.B setGradientColors(status=True)
sets gradientcolors on/off
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- True for on and False for off
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setImageItem(image, iid=0)
sets histogram image
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBimage\fP (\fI\%pyqtgraph.graphicsItems.ImageItem.ImageItem\fP) \-\- histogram image
.IP \(bu 2
\fBiid\fP (\fI\%int\fP) \-\- image id
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setLevels(cnflevels)
set levels from configuration string
.INDENT 7.0
.TP
.B Parameters
\fBcnflevels\fP (\fI\%str\fP) \-\- configuration string: lowlim,uplim   or
lowlim,uplim;lowred,upred;lowgreen,upgreen;lowblue,upblue
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setRGBChannels(rgbchannels)
rgb channel indexes
.INDENT 7.0
.TP
.B Parameters
\fBrgbchannels\fP (\fI\%tuple\fP <\fI\%int\fP>) \-\- rgb channel indexes
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setScalingLabel(scalingtype)
sets scaling label
.INDENT 7.0
.TP
.B Parameters
\fBscalingtype\fP (\fI\%str\fP) \-\- scaling type, i.e. log, linear, sqrt
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setrgb(status=True)
sets RGB on/off
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- True for on and False for off
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showChannels(status=True)
show/hide channel widget
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- show channel flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showGradient(status=True)
show/hide gradient widget
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- show gradient flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showHistograms(status=True)
show/hide gradient widget
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- show gradient flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B storeSettingsRequested
(\fBpyqtgraph.QtCore.pyqtSignal\fP) store settings requested
.UNINDENT
.INDENT 7.0
.TP
.B updateAutoLevels(lowlim, uplim, channels=None)
set min/max level spinboxes and histogram from the parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBlowlim\fP (\fI\%float\fP) \-\- minimum intensity value
.IP \(bu 2
\fBuplim\fP (\fI\%float\fP) \-\- maximum intensity value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateCustomGradients(gradients)
.UNINDENT
.INDENT 7.0
.TP
.B updateHistoImage(autoLevel=None)
executes imageChanged of histogram with the givel autoLevel
.INDENT 7.0
.TP
.B Parameters
\fBautoLevel\fP (\fI\%bool\fP) \-\- if automatics levels to be set
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateLevels(lowlim, uplim, channels=None, signals=True, force=False)
set min/max level spinboxes and histogram from the parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBlowlim\fP (\fI\%float\fP) \-\- minimum intensity value
.IP \(bu 2
\fBuplim\fP (\fI\%float\fP) \-\- maximum intensity value
.IP \(bu 2
\fBsignal\fP (\fI\%bool\fP) \-\- dont disconnect signals
.IP \(bu 2
\fBforce\fP (\fI\%bool\fP) \-\- force update histogram
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.liveViewer module
.sp
live viewer settings
.INDENT 0.0
.TP
.B class lavuelib.liveViewer.LavueState
Bases: \fI\%object\fP
.sp
lavue state
.sp
constructor
.INDENT 7.0
.TP
.B dump()
returns string representation
.INDENT 7.0
.TP
.B Returns
string representation
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateState(dct)
update lavue state dictonary
.INDENT 7.0
.TP
.B Parameters
\fBdct\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- lavue state dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.liveViewer.LiveViewer(options, parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
The master class for the dialog, contains all other
widget and handles communication.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- commandline options
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B closeEvent(event)
stores the setting before finishing the application
.INDENT 7.0
.TP
.B Parameters
\fBevent\fP (\fBpyqtgraph.QtCore.QEvent\fP:) \-\- close event
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B keyPressEvent(event)
skips escape key action
.INDENT 7.0
.TP
.B Parameters
\fBevent\fP (\fBpyqtgraph.QtCore.QEvent\fP:) \-\- close event
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rgb()
gets RGB on/off
.INDENT 7.0
.TP
.B Returns
True for on and False for off
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setLavueState(dct=None)
update LavueState of LavueController
.INDENT 7.0
.TP
.B Parameters
\fBdct\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- lavue state dictionary
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setState()
set current state
.UNINDENT
.INDENT 7.0
.TP
.B setrgb(status=True)
sets RGB on/off
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- True for on and False for off
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.liveViewer.MainWindow(options, parent=None)
Bases: \fBPyQt5.QtWidgets.QMainWindow\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBoptions\fP (\fI\%argparse.Namespace\fP) \-\- commandline options
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B closeEvent(event)
stores the setting before finishing the application
.INDENT 7.0
.TP
.B Parameters
\fBevent\fP (\fBpyqtgraph.QtCore.QEvent\fP:) \-\- close event
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.liveViewer.PartialData(name, rawdata, metadata, x, y, tr)
Bases: \fI\%object\fP
.sp
partial data
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- data name
.IP \(bu 2
\fBrawdata\fP (\fI\%numpy.ndarray\fP) \-\- raw data
.IP \(bu 2
\fBmetadata\fP (\fI\%str\fP) \-\- json dictionary with metadata
.IP \(bu 2
\fBx\fP (\fI\%int\fP) \-\- x translation
.IP \(bu 2
\fBy\fP (\fI\%int\fP) \-\- y translation
.IP \(bu 2
\fBtr\fP (\fI\%str\fP) \-\- transformation, e.g. fup, flr, t, r90, r180, r270, r180t
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B data()
provides transformed data
.INDENT 7.0
.TP
.B Returns
transformed data
.TP
.B Return type
\fI\%numpy.ndarray\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B dtype()
provides data type
.INDENT 7.0
.TP
.B Returns
numpy data type
.TP
.B Return type
\fI\%numpy.dtype\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B intmaxvalue()
provides data type maximal value
.INDENT 7.0
.TP
.B Returns
integer data type maximal value
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B metadata
(\fI\%str\fP) json dictionary with metadata
.UNINDENT
.INDENT 7.0
.TP
.B name
(\fI\%str\fP) data name
.UNINDENT
.INDENT 7.0
.TP
.B scc
(\fI\%int\fP) color channel size
.UNINDENT
.INDENT 7.0
.TP
.B sx
(\fI\%int\fP) x size
.UNINDENT
.INDENT 7.0
.TP
.B sy
(\fI\%int\fP) y size
.UNINDENT
.INDENT 7.0
.TP
.B tolist()
converts partial data to a list
.INDENT 7.0
.TP
.B Returns
a list: [name, rawdata, metadata, x, y, sx, sy, tr]
.TP
.B Return type
[\fI\%str\fP, \fBnumpy.ndarray\(aq, :obj:\(gastr\fP, \fI\%int\fP,
\fI\%int\fP, \fI\%int\fP, \fI\%int\fP, \fI\%str\fP]
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B tpose = {\(aqflr\(aq: False, \(aqfup\(aq: False, \(aqnone\(aq: False, \(aqr180\(aq: False, \(aqr180t\(aq: True, \(aqr270\(aq: True, \(aqr90\(aq: True, \(aqt\(aq: True}
.UNINDENT
.INDENT 7.0
.TP
.B tr
(\fI\%str\fP) transformation
.UNINDENT
.INDENT 7.0
.TP
.B x
(\fI\%int\fP) x translation
.UNINDENT
.INDENT 7.0
.TP
.B y
(\fI\%int\fP) y translation
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.liveViewer.setLoggerLevel(logger, level)
.UNINDENT
.SS lavuelib.maskWidget module
.sp
mask widget
.INDENT 0.0
.TP
.B class lavuelib.maskWidget.MaskWidget(parent=None, settings=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Define and apply masking of the displayed image.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBsettings\fP (\fI\%lavuelib.settings.Settings\fP) \-\- lavue configuration settings
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B applyStateChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) apply state change signal
.UNINDENT
.INDENT 7.0
.TP
.B isMaskApplied()
if background subtraction applied
:returns: apply status
:rtype: \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B maskFileSelected
(\fBpyqtgraph.QtCore.pyqtSignal\fP) mask file selected signal
.UNINDENT
.INDENT 7.0
.TP
.B noImage()
unchecks the apply checkbox and clear the file display
.UNINDENT
.INDENT 7.0
.TP
.B setDisplayedName(name)
sets displayed file name
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMask(fname)
sets the image mask
.INDENT 7.0
.TP
.B Parameters
\fBfname\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.memoExportDialog
.sp
image display widget
.INDENT 0.0
.TP
.B lavuelib.memoExportDialog.GraphicsScene_showExportDialog(self)
dynamic replacement of GraphicsScene.showExportDialog
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.memoExportDialog.MemoExportDialog(scene)
Bases: \fBpyqtgraph.GraphicsScene.exportDialog.ExportDialog\fP
.sp
ExportDialog with bookkeeping  parameters
.INDENT 7.0
.TP
.B exportFormatChanged(item, prev)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.memoExportDialog.MemoPlotWidget(parent=None, background=\(aqdefault\(aq, **kargs)
Bases: \fI\%pyqtgraph.widgets.PlotWidget.PlotWidget\fP
.sp
Plot Widget with improved Export Dialog
.sp
When initializing PlotWidget, \fIparent\fP and \fIbackground\fP are passed to 
\fBGraphicsWidget.__init__()\fP
and all others are passed
to \fBPlotItem.__init__()\fP\&.
.INDENT 7.0
.TP
.B clearClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) clear clicked signal
.UNINDENT
.INDENT 7.0
.TP
.B freezeClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) freeze clicked signal
.UNINDENT
.INDENT 7.0
.TP
.B showMenu(freeze=False, clear=False)
shows freeze or/and clear action in the menu
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfreeze\fP (\fI\%bool\fP) \-\- freeze show status
.IP \(bu 2
\fBfreeze\fP \-\- clear show status
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.memoryBufferGroupBox
.sp
Memory Buffer widget
.INDENT 0.0
.TP
.B class lavuelib.memoryBufferGroupBox.MemoryBufferGroupBox(parent=None)
Bases: \fBPyQt5.QtWidgets.QGroupBox\fP
.sp
Set circular memory buffer for images
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B bufferSize()
provides buffer size
.INDENT 7.0
.TP
.B Returns
buffer size if buffer is on
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B bufferSizeChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) state updated signal
.UNINDENT
.INDENT 7.0
.TP
.B changeView(show=False)
shows or hides the histogram widget
.INDENT 7.0
.TP
.B Parameters
\fBshow\fP (\fI\%bool\fP) \-\- if histogram should be shown
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B initialize()
initialize the filter
.UNINDENT
.INDENT 7.0
.TP
.B isOn()
is on flag
.INDENT 7.0
.TP
.B Returns
is on flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B onOff(status)
switch on/off  the widget
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%int\fP) \-\- flag on/off
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B process(image, imagename)
append image to the buffer and returns image buffer and metadata
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBimage\fP (\fI\%numpy.ndarray\fP) \-\- numpy array with an image
.IP \(bu 2
\fBimagename\fP (\fI\%str\fP) \-\- image name
.UNINDENT
.TP
.B Returns
numpy array with an image
.TP
.B Return type
(\fI\%numpy.ndarray\fP, :obj\(gadict\(ga<\fI\%str\fP, \fI\%str\fP>)
or \fINone\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setBufferSize(buffersize)
sets buffer size
.INDENT 7.0
.TP
.B Parameters
\fBbuffersize\fP (\fI\%int\fP or \fI\%str\fP) \-\- maximal number of images in the buffer
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setComputeSum(computesum)
sets compute sum flag
.INDENT 7.0
.TP
.B Parameters
\fBcomputesum\fP (\fI\%bool\fP) \-\- compute sum flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setMaxBufferSize(maxbuffersize)
sets maximal buffer size
.INDENT 7.0
.TP
.B Parameters
\fBmaxbuffersize\fP (\fI\%int\fP or \fI\%str\fP) \-\- maximal number of images in the buffer
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.messageBox module
.sp
error message box
.INDENT 0.0
.TP
.B class lavuelib.messageBox.MessageBox(parent)
Bases: \fBPyQt5.QtCore.QObject\fP
.sp
error message box
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B classmethod getText(default, error=None)
provides error message text fro sys.exc_info()
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdefault\fP (\fI\%str\fP) \-\- default message test
.IP \(bu 2
\fBerror\fP (\fI\%Exception\fP) \-\- exception to describe
.UNINDENT
.TP
.B Returns
exception message
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod warning(parent, title, text, detailedText=None, icon=None)
creates warning messagebox
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBtitle\fP (\fI\%str\fP) \-\- message box title
.IP \(bu 2
\fBtext\fP (\fI\%str\fP) \-\- message box text
.IP \(bu 2
\fBdetailedText\fP (\fI\%str\fP) \-\- message box detailed text
.IP \(bu 2
\fBicon\fP (\fBpyqtgraph.QtCore.QIcon\fP) \-\- message box icon
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.messageBox.TANGO = True
(\fI\%bool\fP) tango imported
.UNINDENT
.SS lavuelib.motorWatchThread module
.sp
motor watch thread
.INDENT 0.0
.TP
.B class lavuelib.motorWatchThread.AttributeWatchThread(aproxies, refreshtime=None)
Bases: \fI\%lavuelib.omniQThread.OmniQThread\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrefreshtime\fP (\fI\%tango.DeviceProxy\fP) \-\- refresh time
.IP \(bu 2
\fBaproxies\fP (\fI\%list\fP <\fI\%tango.DeviceProxy\fP>) \-\- attribute proxies
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B attrValuesSignal
(\fBpyqtgraph.QtCore.pyqtSignal\fP) signal with attribute values
.UNINDENT
.INDENT 7.0
.TP
.B isWatching()
is datasource source connected
.INDENT 7.0
.TP
.B Returns
if datasource source connected
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B stop()
stops loop
.UNINDENT
.INDENT 7.0
.TP
.B watchingFinished
(\fBpyqtgraph.QtCore.pyqtSignal\fP) watching finished
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.motorWatchThread.GLOBALREFRESHTIME = 0.1
(\fI\%float\fP) refresh time in seconds
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.motorWatchThread.MotorWatchThread(motor1, motor2, server=None)
Bases: \fI\%lavuelib.omniQThread.OmniQThread\fP
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBmotor1\fP (\fI\%tango.DeviceProxy\fP) \-\- first motor device proxy
.IP \(bu 2
\fBmotor2\fP (\fI\%tango.DeviceProxy\fP) \-\- second motor device proxy
.IP \(bu 2
\fBmserver\fP (\fI\%tango.DeviceProxy\fP) \-\- door server device proxy
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isWatching()
is datasource source connected
.INDENT 7.0
.TP
.B Returns
if datasource source connected
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B motorStatusSignal
(\fBpyqtgraph.QtCore.pyqtSignal\fP) signal with motor status
.UNINDENT
.INDENT 7.0
.TP
.B stop()
stops loop
.UNINDENT
.INDENT 7.0
.TP
.B watchingFinished
(\fBpyqtgraph.QtCore.pyqtSignal\fP) watching finished
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.motorWatchThread.POLLINGINTERVAL = 1.0
(\fI\%float\fP) polling inverval in seconds
.UNINDENT
.SS lavuelib.normalizationWidget module
.sp
normalization widget
.INDENT 0.0
.TP
.B class lavuelib.normalizationWidget.NormalizationWidget(parent=None, settings=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Define bkg image and subtract from displayed image.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBsettings\fP (\fI\%lavuelib.settings.Settings\fP) \-\- lavue configuration settings
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B applyBFStateChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) apply state change signal
.UNINDENT
.INDENT 7.0
.TP
.B bfFileSelected
.UNINDENT
.INDENT 7.0
.TP
.B bfScalingFactor()
provides bright field scaling factor
.INDENT 7.0
.TP
.B Returns
bright field scaling factor
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B bfScalingFactorChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) BF scaling factor change signal
.UNINDENT
.INDENT 7.0
.TP
.B checkBFSubtraction(state)
unchecks apply CheckBox if state is 1 and it is checked
and reset the display
.INDENT 7.0
.TP
.B Parameters
\fBstate\fP (\fI\%int\fP) \-\- checkbox state
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isBFSubApplied()
if brightfield correction applied
:returns: apply status
:rtype: \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B setBFScalingFactor(scale)
sets the bright field scaling factor
.INDENT 7.0
.TP
.B Parameters
\fBscale\fP (\fI\%float\fP or \fI\%str\fP) \-\- bright field scaling factor
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setBrightField(fname)
sets the image background
.INDENT 7.0
.TP
.B Parameters
\fBfname\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setDisplayedBFName(name)
sets displayed file name
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- file name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showScalingFactors(show=True)
.UNINDENT
.INDENT 7.0
.TP
.B useCurrentImageAsBF
(\fBpyqtgraph.QtCore.pyqtSignal\fP) use current image signal
.UNINDENT
.UNINDENT
.SS lavuelib.omniQThread module
.sp
omni qt thread
.INDENT 0.0
.TP
.B class lavuelib.omniQThread.OmniQThread(parent=None)
Bases: \fBPyQt5.QtCore.QThread\fP
.sp
constructor
.INDENT 7.0
.TP
.B run()
runner of the fetching thread
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.omniQThread.TANGO = True
(\fI\%bool\fP) tango imported
.UNINDENT
.SS lavuelib.preparationGroupBox module
.sp
preparationbox widget
.INDENT 0.0
.TP
.B class lavuelib.preparationGroupBox.PreparationGroupBox(parent=None, settings=None)
Bases: \fBPyQt5.QtWidgets.QGroupBox\fP
.sp
colection of image preperation widgets
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBsettings\fP (\fI\%lavuelib.settings.Settings\fP) \-\- lavue configuration settings
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B changeView(showmask=None, showsub=None, showtrans=None, showhighvaluemask=None, showsubsf=None, shownorm=None, shownormsf=None)
show or hide widgets in the preparation colection
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBshowmask\fP (\fI\%bool\fP) \-\- mask widget shown
.IP \(bu 2
\fBshowsub\fP (\fI\%bool\fP) \-\- subtraction widget shown
.IP \(bu 2
\fBshowtrans\fP (\fI\%bool\fP) \-\- transformation widget shown
.IP \(bu 2
\fBshowhighvaluemask\fP (\fI\%bool\fP) \-\- mask widget shown
.IP \(bu 2
\fBshowsubsf\fP (\fI\%bool\fP) \-\- subtraction scaling widget shown
.IP \(bu 2
\fBshownorm\fP (\fI\%bool\fP) \-\- normalization widget shown
.IP \(bu 2
\fBshownormsf\fP (\fI\%bool\fP) \-\- normalization scaling widget shown
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B highValueMaskWidget
(\fBlavuelib.maskWidget.Maskwidget\fP) mask widget
.UNINDENT
.INDENT 7.0
.TP
.B maskWidget
(\fBlavuelib.maskWidget.Maskwidget\fP) mask widget
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.preparationGroupBox.QHLine
Bases: \fBPyQt5.QtWidgets.QFrame\fP
.sp
horizontal line
.sp
constructor
.UNINDENT
.SS lavuelib.qtuic module
.sp
uic support
.INDENT 0.0
.TP
.B class lavuelib.qtuic.QWebView(parent: QWidget = None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.INDENT 7.0
.TP
.B back(self)
.UNINDENT
.INDENT 7.0
.TP
.B changeEvent(self, QEvent)
.UNINDENT
.INDENT 7.0
.TP
.B contextMenuEvent(self, QContextMenuEvent)
.UNINDENT
.INDENT 7.0
.TP
.B createWindow(self, QWebPage.WebWindowType) -> QWebView
.UNINDENT
.INDENT 7.0
.TP
.B dragEnterEvent(self, QDragEnterEvent)
.UNINDENT
.INDENT 7.0
.TP
.B dragLeaveEvent(self, QDragLeaveEvent)
.UNINDENT
.INDENT 7.0
.TP
.B dragMoveEvent(self, QDragMoveEvent)
.UNINDENT
.INDENT 7.0
.TP
.B dropEvent(self, QDropEvent)
.UNINDENT
.INDENT 7.0
.TP
.B event(self, QEvent) -> \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B findText(self, str, options: QWebPage.FindFlags = 0) -> \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B focusInEvent(self, QFocusEvent)
.UNINDENT
.INDENT 7.0
.TP
.B focusNextPrevChild(self, bool) -> \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B focusOutEvent(self, QFocusEvent)
.UNINDENT
.INDENT 7.0
.TP
.B forward(self)
.UNINDENT
.INDENT 7.0
.TP
.B hasSelection(self) -> \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B history(self) -> QWebHistory
.UNINDENT
.INDENT 7.0
.TP
.B icon(self) -> QIcon
.UNINDENT
.INDENT 7.0
.TP
.B iconChanged
iconChanged(self) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B inputMethodEvent(self, QInputMethodEvent)
.UNINDENT
.INDENT 7.0
.TP
.B inputMethodQuery(self, Qt.InputMethodQuery) -> Any
.UNINDENT
.INDENT 7.0
.TP
.B isModified(self) -> \fI\%bool\fP
.UNINDENT
.INDENT 7.0
.TP
.B keyPressEvent(self, QKeyEvent)
.UNINDENT
.INDENT 7.0
.TP
.B keyReleaseEvent(self, QKeyEvent)
.UNINDENT
.INDENT 7.0
.TP
.B linkClicked
linkClicked(self, QUrl) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B load(self, QUrl)
load(self, QNetworkRequest, operation: QNetworkAccessManager.Operation = QNetworkAccessManager.GetOperation, body: Union[QByteArray, bytes, bytearray] = QByteArray())
.UNINDENT
.INDENT 7.0
.TP
.B loadFinished
loadFinished(self, bool) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B loadProgress
loadProgress(self, int) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B loadStarted
loadStarted(self) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B mouseDoubleClickEvent(self, QMouseEvent)
.UNINDENT
.INDENT 7.0
.TP
.B mouseMoveEvent(self, QMouseEvent)
.UNINDENT
.INDENT 7.0
.TP
.B mousePressEvent(self, QMouseEvent)
.UNINDENT
.INDENT 7.0
.TP
.B mouseReleaseEvent(self, QMouseEvent)
.UNINDENT
.INDENT 7.0
.TP
.B page(self) -> QWebPage
.UNINDENT
.INDENT 7.0
.TP
.B pageAction(self, QWebPage.WebAction) -> QAction
.UNINDENT
.INDENT 7.0
.TP
.B paintEvent(self, QPaintEvent)
.UNINDENT
.INDENT 7.0
.TP
.B print(self, QPrinter)
.UNINDENT
.INDENT 7.0
.TP
.B print_(self, QPrinter)
.UNINDENT
.INDENT 7.0
.TP
.B reload(self)
.UNINDENT
.INDENT 7.0
.TP
.B renderHints(self) -> QPainter.RenderHints
.UNINDENT
.INDENT 7.0
.TP
.B resizeEvent(self, QResizeEvent)
.UNINDENT
.INDENT 7.0
.TP
.B selectedHtml(self) -> \fI\%str\fP
.UNINDENT
.INDENT 7.0
.TP
.B selectedText(self) -> \fI\%str\fP
.UNINDENT
.INDENT 7.0
.TP
.B selectionChanged
selectionChanged(self) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B setContent(self, Union[QByteArray, bytes, bytearray], mimeType: str = \(aq\(aq, baseUrl: QUrl = QUrl())
.UNINDENT
.INDENT 7.0
.TP
.B setHtml(self, str, baseUrl: QUrl = QUrl())
.UNINDENT
.INDENT 7.0
.TP
.B setPage(self, QWebPage)
.UNINDENT
.INDENT 7.0
.TP
.B setRenderHint(self, QPainter.RenderHint, enabled: bool = True)
.UNINDENT
.INDENT 7.0
.TP
.B setRenderHints(self, QPainter.RenderHints)
.UNINDENT
.INDENT 7.0
.TP
.B setUrl(self, QUrl)
.UNINDENT
.INDENT 7.0
.TP
.B setZoomFactor(self, float)
.UNINDENT
.INDENT 7.0
.TP
.B settings(self) -> QWebSettings
.UNINDENT
.INDENT 7.0
.TP
.B sizeHint(self) -> QSize
.UNINDENT
.INDENT 7.0
.TP
.B statusBarMessage
statusBarMessage(self, str) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B stop(self)
.UNINDENT
.INDENT 7.0
.TP
.B title(self) -> \fI\%str\fP
.UNINDENT
.INDENT 7.0
.TP
.B titleChanged
titleChanged(self, str) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B triggerPageAction(self, QWebPage.WebAction, checked: bool = False)
.UNINDENT
.INDENT 7.0
.TP
.B url(self) -> QUrl
.UNINDENT
.INDENT 7.0
.TP
.B urlChanged
urlChanged(self, QUrl) [signal]
.UNINDENT
.INDENT 7.0
.TP
.B wheelEvent(self, QWheelEvent)
.UNINDENT
.INDENT 7.0
.TP
.B zoomFactor(self) -> \fI\%float\fP
.UNINDENT
.UNINDENT
.SS lavuelib.rangeDialog module
.sp
detector range widget
.INDENT 0.0
.TP
.B class lavuelib.rangeDialog.RangeDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
detector range widget class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B polend
(\fI\%float\fP) end position of polar angle
.UNINDENT
.INDENT 7.0
.TP
.B polsize
(\fI\%int\fP) grid size of polar angle
.UNINDENT
.INDENT 7.0
.TP
.B polstart
(\fI\%float\fP) start position of polar angle
.UNINDENT
.INDENT 7.0
.TP
.B radqend
(\fI\%float\fP) end position of radial coordinate
.UNINDENT
.INDENT 7.0
.TP
.B radqsize
(\fI\%int\fP) grid size of radial coordinate
.UNINDENT
.INDENT 7.0
.TP
.B radqstart
(\fI\%float\fP) start position of radial coordinate
.UNINDENT
.INDENT 7.0
.TP
.B radthend
(\fI\%float\fP) end position of radial coordinate
.UNINDENT
.INDENT 7.0
.TP
.B radthsize
(\fI\%int\fP) grid size of radial coordinate
.UNINDENT
.INDENT 7.0
.TP
.B radthstart
(\fI\%float\fP) start position of radial coordinate
.UNINDENT
.UNINDENT
.SS lavuelib.rangeWindowGroupBox module
.sp
range window widget
.INDENT 0.0
.TP
.B class lavuelib.rangeWindowGroupBox.RangeWindowGroupBox(parent=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Select how an image should be transformed.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B changeView(showrangeWindow=None)
show or hide widgets
.INDENT 7.0
.TP
.B Parameters
\fBshowrangeWindow\fP (\fI\%bool\fP) \-\- widget shown
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B factor()
provides the current resize factor
.INDENT 7.0
.TP
.B Returns
resize factor
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B factorChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) factor changed signal
.UNINDENT
.INDENT 7.0
.TP
.B function()
provides the reduction function name, i.e. max, min, mean, sum
.INDENT 7.0
.TP
.B Returns
function name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B functionChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) function changed signal
.UNINDENT
.INDENT 7.0
.TP
.B rangeWindow()
provides the range window
.INDENT 7.0
.TP
.B Returns
x1, y1, x2, y2 of range window bounds
.TP
.B Return type
\fI\%list\fP <\fI\%int\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rangeWindowChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) range window changed signal
.UNINDENT
.INDENT 7.0
.TP
.B setFactor(factor)
provides the current resize factor
.INDENT 7.0
.TP
.B Parameters
\fBfactor\fP (\fI\%int\fP) \-\- resize factor
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setFunction(name)
sets the reduction function
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- function name, i.e. max, min, mean, sum
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setRangeWindow(bounds)
provides the range window
.INDENT 7.0
.TP
.B Parameters
\fBbounds\fP \-\- range window bounds: x1:x2,y1:y2
.TP
.B Type
\fI\%str\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.release module
.sp
release version
.SS lavuelib.sardanaUtils module
.sp
sardana utils
.INDENT 0.0
.TP
.B class lavuelib.sardanaUtils.SardanaUtils
Bases: \fI\%object\fP
.sp
sardanamacro server
.sp
constructor
.INDENT 7.0
.TP
.B getDeviceName(cname, db=None)
finds device of give class
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcname\fP (\fI\%str\fP) \-\- device class name
.IP \(bu 2
\fBdb\fP (\fI\%tango.Database\fP) \-\- tango database
.UNINDENT
.TP
.B Returns
device name if exists
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getElementNames(door, listattr, typefilter=None)
provides experimental Channels
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdoor\fP (\fI\%str\fP) \-\- door device name
.IP \(bu 2
\fBlistattr\fP (\fI\%str\fP) \-\- pool attribute with list
.IP \(bu 2
\fBtypefilter\fP (\fI\%list\fP <\fI\%str\fP>) \-\- pool attribute with list
.UNINDENT
.TP
.B Returns
names from given pool listattr
.TP
.B Return type
\fI\%list\fP <\fI\%str\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getError(door)
stores Scan Environment Data
.INDENT 7.0
.TP
.B Parameters
\fBdoor\fP (\fI\%str\fP) \-\- door device
.TP
.B Returns
error or warning
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getMacroServer(door)
door macro server device name
.INDENT 7.0
.TP
.B Parameters
\fBdoor\fP (\fI\%str\fP) \-\- door device name
.TP
.B Returns
macroserver device proxy
.TP
.B Return type
\fI\%tango.DeviceProxy\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getPools(door)
provides pool devices
.INDENT 7.0
.TP
.B Parameters
\fBdoor\fP (\fI\%str\fP) \-\- door device name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod getProxies(names)
provides proxies of given device names
.INDENT 7.0
.TP
.B Parameters
\fBnames\fP (\fI\%list\fP <\fI\%str\fP>) \-\- given device names
.TP
.B Returns
list of device DeviceProxies
.TP
.B Return type
\fI\%list\fP <\fI\%tango.DeviceProxy\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B getScanEnv(door, params=None)
fetches Scan Environment Data
.INDENT 7.0
.TP
.B Parameters
\fBdoor\fP (\fI\%str\fP) \-\- door device
.TP
.B Returns
JSON String with important variables
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod openProxy(device, counter=100)
opens device proxy of the given device
.INDENT 7.0
.TP
.B Parameters
\fBdevice\fP (\fI\%str\fP) \-\- device name
.TP
.B Returns
DeviceProxy of device
.TP
.B Return type
\fI\%tango.DeviceProxy\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod pickleloads(bytestr)
loads pickle byte string
:param bytestr: byte string to convert
:type bytesstr: \fI\%bytes\fP
:returns: loaded bytestring
:rtype: \fI\%any\fP
.UNINDENT
.INDENT 7.0
.TP
.B runMacro(door, command, wait=True)
stores Scan Environment Data
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdoor\fP (\fI\%str\fP) \-\- door device
.IP \(bu 2
\fBcommand\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list with the macro name and its parameters
.IP \(bu 2
\fBwait\fP (\fI\%bool\fP) \-\- wait till macro is finished
.UNINDENT
.TP
.B Returns
result, error or warning
.TP
.B Return type
[\fI\%str\fP, \fI\%str\fP]
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setScanEnv(door, jdata)
stores Scan Environment Data
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdoor\fP (\fI\%str\fP) \-\- door device
.IP \(bu 2
\fBjdata\fP (\fI\%str\fP) \-\- JSON String with important variables
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod toString(obj)
converts list/dict/object of unicode/string to string object
.INDENT 7.0
.TP
.B Parameters
\fBobj\fP (\fIany\fP) \-\- given unicode/string object
.TP
.B Returns
string object
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B wait(name=None, proxy=None, maxcount=100)
stores Scan Environment Data
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- device name
.IP \(bu 2
\fBproxy\fP (\fI\%str\fP) \-\- door device proxy
.IP \(bu 2
\fBmaxcount\fP (\fI\%int\fP) \-\- number of 0.01s to wait
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.sardanaUtils.TANGO = True
(\fI\%bool\fP) tango imported
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.sardanaUtils.debugmethod(method)
debug wrapper for methods
:param method: any class method
:type method: \fBany\fP
:returns: wrapped class method
:rtype: \fBany\fP
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sardanaUtils.numpyEncoder(*, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, default=None)
Bases: \fBjson.encoder.JSONEncoder\fP
.sp
numpy json encoder with list
.sp
Constructor for JSONEncoder, with sensible defaults.
.sp
If skipkeys is false, then it is a TypeError to attempt
encoding of keys that are not str, int, float or None.  If
skipkeys is True, such items are simply skipped.
.sp
If ensure_ascii is true, the output is guaranteed to be str
objects with all incoming non\-ASCII characters escaped.  If
ensure_ascii is false, the output can contain non\-ASCII characters.
.sp
If check_circular is true, then lists, dicts, and custom encoded
objects will be checked for circular references during encoding to
prevent an infinite recursion (which would cause an OverflowError).
Otherwise, no such check takes place.
.sp
If allow_nan is true, then NaN, Infinity, and \-Infinity will be
encoded as such.  This behavior is not JSON specification compliant,
but is consistent with most JavaScript based encoders and decoders.
Otherwise, it will be a ValueError to encode such floats.
.sp
If sort_keys is true, then the output of dictionaries will be
sorted by key; this is useful for regression tests to ensure
that JSON serializations can be compared on a day\-to\-day basis.
.sp
If indent is a non\-negative integer, then JSON array
elements and object members will be pretty\-printed with that
indent level.  An indent level of 0 will only insert newlines.
None is the most compact representation.
.sp
If specified, separators should be an (item_separator, key_separator)
tuple.  The default is (\(aq, \(aq, \(aq: \(aq) if \fIindent\fP is \fBNone\fP and
(\(aq,\(aq, \(aq: \(aq) otherwise.  To get the most compact JSON representation,
you should specify (\(aq,\(aq, \(aq:\(aq) to eliminate whitespace.
.sp
If specified, default is a function that gets called for objects
that can\(aqt otherwise be serialized.  It should return a JSON encodable
version of the object or raise a \fBTypeError\fP\&.
.INDENT 7.0
.TP
.B default(obj)
default encoder
.INDENT 7.0
.TP
.B Parameters
\fBobj\fP (\fI\%object\fP or \fIany\fP) \-\- numpy array object
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.scalingGroupBox module
.sp
scalingGroupBox
.INDENT 0.0
.TP
.B class lavuelib.scalingGroupBox.ScalingGroupBox(parent=None)
Bases: \fBPyQt5.QtWidgets.QGroupBox\fP
.sp
Select how the image intensity is supposed to be scaled.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B changeView(showscale=False)
shows or hides the scale widget
.INDENT 7.0
.TP
.B Parameters
\fBshowscale\fP (\fI\%bool\fP) \-\- if scale widget should be shown
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentScaling()
provides the current scaling
.INDENT 7.0
.TP
.B Returns
current scaline
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B scalingChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) scaling changed signal
.UNINDENT
.INDENT 7.0
.TP
.B setScaling(scaling)
sets scaling from string
.INDENT 7.0
.TP
.B Parameters
\fBscaling\fP \-\- scaling name, i.e. linear, log or sqrt
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B simpleScalingChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) simple scaling changed signal
.UNINDENT
.UNINDENT
.SS lavuelib.settings module
.sp
live viewer image display base it on a qt dialog
.INDENT 0.0
.TP
.B lavuelib.settings.PYFAI = True
(\fI\%bool\fP) pyFAI imported
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.settings.Settings
Bases: \fI\%object\fP
.sp
lavue configuration settings
.sp
constructor
.INDENT 7.0
.TP
.B accelbuffersum
(\fI\%bool\fP) accelerate buffer sum
.UNINDENT
.INDENT 7.0
.TP
.B addrois
(\fI\%bool\fP) add rois to sardana
.UNINDENT
.INDENT 7.0
.TP
.B aimutex
(\fBpyqtgraph.QtCore.QMutex\fP) ai mutex
.UNINDENT
.INDENT 7.0
.TP
.B analysisdevice
(\fI\%str\fP) analysis device name
.UNINDENT
.INDENT 7.0
.TP
.B asapobeamtime
(\fI\%str\fP) asapo beamtime id
.UNINDENT
.INDENT 7.0
.TP
.B asapodatasources
(\fI\%list\fP < \fI\%str\fP > ) asapo datasources
.UNINDENT
.INDENT 7.0
.TP
.B asaposerver
(\fI\%str\fP) asapo server
.UNINDENT
.INDENT 7.0
.TP
.B asaposourcepath
(\fI\%str\fP) asapo sourcepath
.UNINDENT
.INDENT 7.0
.TP
.B asapotoken
(\fI\%str\fP) asapo token
.UNINDENT
.INDENT 7.0
.TP
.B aspectlocked
(\fI\%bool\fP) image aspect ratio locked
.UNINDENT
.INDENT 7.0
.TP
.B autodownsample
(\fI\%bool\fP) auto down sample
.UNINDENT
.INDENT 7.0
.TP
.B autorefreshtime
(\fI\%bool\fP) auto enlarge refresh time
.UNINDENT
.INDENT 7.0
.TP
.B autozmqtopics
(\fI\%bool\fP) automatic zmq source topics
.UNINDENT
.INDENT 7.0
.TP
.B bfimagename
(\fI\%str\fP) last brightfield image file name
.UNINDENT
.INDENT 7.0
.TP
.B bkgimagename
(\fI\%str\fP) last background/darkfield image file name
.UNINDENT
.INDENT 7.0
.TP
.B calcvariance
(\fI\%bool\fP) calculate variance
.UNINDENT
.INDENT 7.0
.TP
.B calibrationfilename
(\fI\%str\fP) calibration file name
.UNINDENT
.INDENT 7.0
.TP
.B centerx
(\fI\%float\fP) x\-coordinates of the center of the image
.UNINDENT
.INDENT 7.0
.TP
.B centery
(\fI\%float\fP) y\-coordinates of the center of the image
.UNINDENT
.INDENT 7.0
.TP
.B correctsolidangle
(\fI\%bool\fP) correct solid angle flag
.UNINDENT
.INDENT 7.0
.TP
.B crosshairlocker
(\fI\%bool\fP) crosshair locker switched on
.UNINDENT
.INDENT 7.0
.TP
.B customGradients()
sets source display parameters
.INDENT 7.0
.TP
.B Returns
custom gradients
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B defdetservers
(\fI\%bool\fP) use default detector servers
.UNINDENT
.INDENT 7.0
.TP
.B detdistance
(\fI\%float\fP) detector distance in mm
.UNINDENT
.INDENT 7.0
.TP
.B detname
(\fI\%str\fP) detector name
.UNINDENT
.INDENT 7.0
.TP
.B detponi1
(\fI\%float\fP) poni1 parameter in m
.UNINDENT
.INDENT 7.0
.TP
.B detponi2
(\fI\%float\fP) poni2 parameter in m
.UNINDENT
.INDENT 7.0
.TP
.B detrot1
(\fI\%float\fP) rot1 parameter in rad
.UNINDENT
.INDENT 7.0
.TP
.B detrot2
(\fI\%float\fP) rot2 parameter in rad
.UNINDENT
.INDENT 7.0
.TP
.B detrot3
(\fI\%float\fP) rot3 parameter in rad
.UNINDENT
.INDENT 7.0
.TP
.B detservers
(\fI\%list\fP < \fI\%str\fP>) hidra detector server list
.UNINDENT
.INDENT 7.0
.TP
.B detsplinefile
(\fI\%str\fP) detector splineFile
.UNINDENT
.INDENT 7.0
.TP
.B diffnpt
(\fI\%int\fP) number of points for diffractogram
.UNINDENT
.INDENT 7.0
.TP
.B dirtrans
(\fI\%str\fP) file name translation json dictionary
.UNINDENT
.INDENT 7.0
.TP
.B distance2m(distance)
converts distance to m units
.INDENT 7.0
.TP
.B Parameters
\fBdistance\fP (\fI\%float\fP or (\fI\%float\fP, \fI\%str\fP)) \-\- distance as value in m or tuple with units
.TP
.B Returns
distance in m
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B distance2mm(distance)
converts distance to mm units
.INDENT 7.0
.TP
.B Parameters
\fBdistance\fP (\fI\%float\fP or (\fI\%float\fP, \fI\%str\fP)) \-\- distance as value in m or tuple with units
.TP
.B Returns
distance in mm
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B distance2pixels(distance, psize)
converts distance to pixels
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdistance\fP (\fI\%float\fP or (\fI\%float\fP, \fI\%str\fP)) \-\- distance as value in pixels or tuple with units
.IP \(bu 2
\fBpsize\fP (\fI\%float\fP) \-\- pixel size
.UNINDENT
.TP
.B Returns
distance in pixels
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B distance2um(distance)
converts distance to um units
.INDENT 7.0
.TP
.B Parameters
\fBdistance\fP (\fI\%float\fP or (\fI\%float\fP, \fI\%str\fP)) \-\- distance as value in m or tuple with units
.TP
.B Returns
distance in um
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B doorname
(\fI\%str\fP) door device name
.UNINDENT
.INDENT 7.0
.TP
.B energy
(\fI\%float\fP) energy in eV
.UNINDENT
.INDENT 7.0
.TP
.B energy2m(energy)
converts energy to m
.INDENT 7.0
.TP
.B Parameters
\fBenergy\fP (\fI\%float\fP or (\fI\%float\fP, \fI\%str\fP)) \-\- energy as value in eV or tuple with units
.TP
.B Returns
length in m
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B filters
(\fI\%str\fP) json list with filters
.UNINDENT
.INDENT 7.0
.TP
.B floattype
(\fI\%str\fP) float type for pixel intensity
.UNINDENT
.INDENT 7.0
.TP
.B geometryfromsource
(\fI\%bool\fP) fetch geometry from source
.UNINDENT
.INDENT 7.0
.TP
.B gradientcolors
(\fI\%bool\fP) image channels shown with gradient colors
.UNINDENT
.INDENT 7.0
.TP
.B hidraport
(\fI\%str\fP) hidra data port
.UNINDENT
.INDENT 7.0
.TP
.B imagechannels
(\fI\%bool\fP) map image sources to color channels
.UNINDENT
.INDENT 7.0
.TP
.B imagename
(\fI\%str\fP) last image file name
.UNINDENT
.INDENT 7.0
.TP
.B imagesources
(\fI\%str\fP) json list with image source widget names
.UNINDENT
.INDENT 7.0
.TP
.B interruptonerror
(\fI\%bool\fP) interrupt on error
.UNINDENT
.INDENT 7.0
.TP
.B keepcoords
(\fI\%bool\fP) keep original coordinates
.UNINDENT
.INDENT 7.0
.TP
.B lazyimageslider
(\fI\%bool\fP) lazy image slider
.UNINDENT
.INDENT 7.0
.TP
.B length2ev(length)
converts length to energy  in eV
.INDENT 7.0
.TP
.B Parameters
\fBlength\fP (\fI\%float\fP or (\fI\%float\fP, \fI\%str\fP)) \-\- length as value in A or tuple with units
.TP
.B Returns
energy in eV
.TP
.B Return type
\fI\%float\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B load(settings)
load settings
.INDENT 7.0
.TP
.B Parameters
\fBsettings\fP (\fBpyqtgraph.QtCore.QSettings\fP) \-\- QSettings object
.TP
.B Returns
error messages list
.TP
.B Return type
\fI\%list\fP < (\fI\%str\fP, \fI\%str\fP) >
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B maskimagename
(\fI\%str\fP) last mask image file name
.UNINDENT
.INDENT 7.0
.TP
.B maxmbuffersize
(\fI\%str\fP) maximal number of images in memory buffer
.UNINDENT
.INDENT 7.0
.TP
.B nanmask
(\fI\%bool\fP) nan mask enabled
.UNINDENT
.INDENT 7.0
.TP
.B negmask
(\fI\%bool\fP) adding maximal type value to negative high value mask
.UNINDENT
.INDENT 7.0
.TP
.B nrsources
(\fI\%int\fP) number of image sources
.UNINDENT
.INDENT 7.0
.TP
.B nxslast
(\fI\%bool\fP) nexus file source starts from the last image
.UNINDENT
.INDENT 7.0
.TP
.B nxsopen
(\fI\%bool\fP) nexus file source keeps the file open
.UNINDENT
.INDENT 7.0
.TP
.B orderrois
(\fI\%bool\fP) fetch rois order enabled
.UNINDENT
.INDENT 7.0
.TP
.B overflowcolor
(\fI\%str\fP) json list with overflow color
.UNINDENT
.INDENT 7.0
.TP
.B pixelsize2um(psize)
converts pixel size to um units
.INDENT 7.0
.TP
.B Parameters
\fBpsize\fP (\fI\%float\fP or
(\fI\%float\fP, \fI\%str\fP, \fI\%float\fP, \fI\%str\fP)) \-\- pixelsize as value in m or tuple with units
.TP
.B Returns
pixelsize in  um
.TP
.B Return type
(\fI\%float\fP, \fI\%float\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B pixelsizex
(\fI\%float\fP) pixel x\-size in um
.UNINDENT
.INDENT 7.0
.TP
.B pixelsizey
(\fI\%float\fP) pixel y\-size in um
.UNINDENT
.INDENT 7.0
.TP
.B refreshtime
(\fI\%float\fP) refresh time is s
.UNINDENT
.INDENT 7.0
.TP
.B roiscolors
(\fI\%str\fP) json list with roi colors
.UNINDENT
.INDENT 7.0
.TP
.B sardana
(\fI\%bool\fP) sardana enabled
.UNINDENT
.INDENT 7.0
.TP
.B secautoport
(\fI\%bool\fP) search for security stream port automatically
.UNINDENT
.INDENT 7.0
.TP
.B seccontext
(\fI\%zmq.Context\fP) zmq context
.UNINDENT
.INDENT 7.0
.TP
.B secport
(\fI\%str\fP) security stream port
.UNINDENT
.INDENT 7.0
.TP
.B secsocket
(\fI\%zmq.Socket\fP) zmq security stream socket
.UNINDENT
.INDENT 7.0
.TP
.B secsockopt
(\fI\%bool\fP) security stream options
.UNINDENT
.INDENT 7.0
.TP
.B secstream
(\fI\%bool\fP) security stream enabled
.UNINDENT
.INDENT 7.0
.TP
.B sendresults
(\fI\%bool\fP) send results to LavueController flag
.UNINDENT
.INDENT 7.0
.TP
.B sendrois
(\fI\%bool\fP) send rois to LavueController flag
.UNINDENT
.INDENT 7.0
.TP
.B setCustomGradients(gradients)
sets custom gradients
.INDENT 7.0
.TP
.B Parameters
\fBgradients\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- custom gradients
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setSourceDisplay(source, values)
sets source display parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsource\fP (\fI\%str\fP) \-\- source name
.IP \(bu 2
\fBvalues\fP (\fI\%dict\fP <\fI\%str\fP, \fIany\fP>) \-\- display parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showaddhisto
(\fI\%bool\fP) show intensity hostogram
.UNINDENT
.INDENT 7.0
.TP
.B showallrois
(\fI\%bool\fP) show all rois flag
.UNINDENT
.INDENT 7.0
.TP
.B showfilters
(\fI\%bool\fP) show filter widget
.UNINDENT
.INDENT 7.0
.TP
.B showframerate
(\fI\%bool\fP) show frame rate widget
.UNINDENT
.INDENT 7.0
.TP
.B showhighvaluemask
(\fI\%bool\fP) show high mask value widget
.UNINDENT
.INDENT 7.0
.TP
.B showhisto
(\fI\%bool\fP) show intensity hostogram
.UNINDENT
.INDENT 7.0
.TP
.B showlevels
(\fI\%bool\fP) show intensity levels widget
.UNINDENT
.INDENT 7.0
.TP
.B showmask
(\fI\%bool\fP) show mask widget
.UNINDENT
.INDENT 7.0
.TP
.B showmbuffer
(\fI\%bool\fP) show memory buffer widget
.UNINDENT
.INDENT 7.0
.TP
.B shownorm
(\fI\%bool\fP) show image normalization widget
.UNINDENT
.INDENT 7.0
.TP
.B shownormsf
(\fI\%bool\fP) show image normalization scaling factor widget
.UNINDENT
.INDENT 7.0
.TP
.B showoverflow
(\fI\%bool\fP) show intensity overflow widget
.UNINDENT
.INDENT 7.0
.TP
.B showrange
(\fI\%bool\fP) show range window widget
.UNINDENT
.INDENT 7.0
.TP
.B showscale
(\fI\%bool\fP) show intensity scale widget
.UNINDENT
.INDENT 7.0
.TP
.B showstats
(\fI\%bool\fP) show statistics widget
.UNINDENT
.INDENT 7.0
.TP
.B showsteps
(\fI\%bool\fP) show image step widget
.UNINDENT
.INDENT 7.0
.TP
.B showsub
(\fI\%bool\fP) show bakcground subtraction widget
.UNINDENT
.INDENT 7.0
.TP
.B showsubsf
(\fI\%bool\fP) show bakcground subtraction scaling factor widget
.UNINDENT
.INDENT 7.0
.TP
.B showtrans
(\fI\%bool\fP) show transformation widget
.UNINDENT
.INDENT 7.0
.TP
.B singlerois
(\fI\%bool\fP) single rois flag
.UNINDENT
.INDENT 7.0
.TP
.B sourceDisplay(source)
gets source display parameters
.INDENT 7.0
.TP
.B Parameters
\fBsource\fP (\fI\%str\fP) \-\- source name
.TP
.B Returns
display parameter dictionary
.TP
.B Return type
\fI\%dict\fP <\fI\%str\fP, \fIany\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sourcedisplay
(\fI\%bool\fP) store display parameters for specific sources
.UNINDENT
.INDENT 7.0
.TP
.B statswoscaling
(\fI\%bool\fP) statistics without scaling
.UNINDENT
.INDENT 7.0
.TP
.B store(settings)
Stores settings in QSettings object
.INDENT 7.0
.TP
.B Parameters
\fBsettings\fP (\fBpyqtgraph.QtCore.QSettings\fP) \-\- QSettings object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B storegeometry
(\fI\%bool\fP) store detector geometry
.UNINDENT
.INDENT 7.0
.TP
.B timeout
(\fI\%int\fP) image source timeout for connection
.UNINDENT
.INDENT 7.0
.TP
.B toolpollinginterval
(\fI\%float\fP) tool polling interval is s
.UNINDENT
.INDENT 7.0
.TP
.B toolrefreshtime
(\fI\%float\fP) tool refresh time is s
.UNINDENT
.INDENT 7.0
.TP
.B toolwidgets
(\fI\%str\fP)  json list with tool widget names
.UNINDENT
.INDENT 7.0
.TP
.B updateAISettings()
update AI settings
.UNINDENT
.INDENT 7.0
.TP
.B updateDetectorParameters()
update physical parameters
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(**kargs)
update physical parameters
.INDENT 7.0
.TP
.B Parameters
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- physical parameter dictionary
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B xyposition2pixels(xypos)
converts xy position to pixel units
.INDENT 7.0
.TP
.B Parameters
\fBxypos\fP (\fI\%float\fP or
(\fI\%float\fP, \fI\%str\fP, \fI\%float\fP, \fI\%str\fP)) \-\- xy\-position a tuple value or tuple with units
.TP
.B Returns
xy\-position in  pixels
.TP
.B Return type
(\fI\%float\fP, \fI\%float\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B zeromask
(\fI\%bool\fP) zero mask enabled
.UNINDENT
.INDENT 7.0
.TP
.B zmqcolon
(\fI\%bool\fP) zmq colon configuration separator
.UNINDENT
.INDENT 7.0
.TP
.B zmqtopics
(\fI\%list\fP < \fI\%str\fP > ) zmq source topics
.UNINDENT
.UNINDENT
.SS lavuelib.sourceTabWidget module
.sp
image source selection
.INDENT 0.0
.TP
.B class lavuelib.sourceTabWidget.SourceForm(parent=None, sourceid=0, usersourcenames=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
source form
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBexpertmode\fP (\fI\%bool\fP) \-\- expert mode flag
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBusersourcenames\fP (\fI\%list\fP < \fI\%str\fP >) \-\- user source names
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addCommonWidgets(sln)
add common widgets after given row in the grid layout
.INDENT 7.0
.TP
.B Parameters
\fBsln\fP (\fI\%int\fP) \-\- given row in the grid layout
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addIconClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) add Icon Clicked signal
.UNINDENT
.INDENT 7.0
.TP
.B addWidgets(st, expertmode)
add widgets
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBst\fP (\fBsourceWidget.SourceBaseWidget\fP) \-\- source type class
.IP \(bu 2
\fBexpertmode\fP (\fI\%bool\fP) \-\- expert mode
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B buttonEnabled
(\fBpyqtgraph.QtCore.pyqtSignal\fP) push button enabled signal
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectFailure()
set connection status off and display connection status
.UNINDENT
.INDENT 7.0
.TP
.B connectSuccess(port=None)
set connection status on and display connection status
.INDENT 7.0
.TP
.B Parameters
\fBport\fP \-\- zmq port
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connect widget
.UNINDENT
.INDENT 7.0
.TP
.B currentDataSource()
current data source
.INDENT 7.0
.TP
.B Returns
current datasource class name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentDataSourceAlias()
current data source name
.INDENT 7.0
.TP
.B Returns
current datasource class name alias
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentDataSourceName()
current data source name
.INDENT 7.0
.TP
.B Returns
current datasource class name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnect widget
.UNINDENT
.INDENT 7.0
.TP
.B emitButtonEnabled(status)
emit buttonEnabled
.INDENT 7.0
.TP
.B Parameters
\fBtrans\fP (\fI\%bool\fP) \-\- enabled status of button
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B emitSourceChanged()
emits sourceChanged signal
.UNINDENT
.INDENT 7.0
.TP
.B emitTranslationChanged(trans)
emit translationChanged
.INDENT 7.0
.TP
.B Parameters
\fBtrans\fP (\fI\%str\fP) \-\- x,y translation, e.g. 50,45
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B gridLayout()
provide grid layout
.INDENT 7.0
.TP
.B Returns
grid layout
.TP
.B Return type
\fBPyQt5.QtWidgets.QGridLayout\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B init()
initialize widget
.UNINDENT
.INDENT 7.0
.TP
.B isConnected()
is datasource source connected
.INDENT 7.0
.TP
.B Returns
if datasource source connected
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B onSourceChanged()
update current source widgets
.UNINDENT
.INDENT 7.0
.TP
.B pushButtonClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) push button clicked signal
.UNINDENT
.INDENT 7.0
.TP
.B pushButtonEnabled()
provide status of push button
.INDENT 7.0
.TP
.B Returns
if push button enabled
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B removeCommonWidgets()
remove common widgets
.UNINDENT
.INDENT 7.0
.TP
.B removeIconClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) remove Icon Clicked signal
.UNINDENT
.INDENT 7.0
.TP
.B setErrorStatus(status=\(aq\(aq)
set error status
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%str\fP) \-\- error status
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setSource(name=None, disconnect=True)
set source with the given name
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- source name
.IP \(bu 2
\fBdisconnect\fP (\fI\%bool\fP) \-\- disconnect signals on update
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setSourceComboBoxByName(name)
set source by changing combobox by name
.INDENT 7.0
.TP
.B Parameters
\fBname\fP (\fI\%str\fP) \-\- combobox name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTranslation(trans)
stores translation of the given source
.INDENT 7.0
.TP
.B Param
x,y tranlation, e.g. 2345,354
.TP
.B Type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showItem(trans)
show items of the widget
.INDENT 7.0
.TP
.B Parameters
\fBtrans\fP (\fI\%bool\fP) \-\- translation item show status
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sourceChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source state signal
.UNINDENT
.INDENT 7.0
.TP
.B sourceLabelChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source label name signal
.UNINDENT
.INDENT 7.0
.TP
.B sourceStateChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source state signal
.UNINDENT
.INDENT 7.0
.TP
.B sourceStatus()
source status
.INDENT 7.0
.TP
.B Returns
source type id
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B start()
starts viewing if pushButton enable
.UNINDENT
.INDENT 7.0
.TP
.B toggleServerConnection()
toggles server connection
.UNINDENT
.INDENT 7.0
.TP
.B translationChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) translation changed signal
.UNINDENT
.INDENT 7.0
.TP
.B updateButton(status)
update slot for source button
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%bool\fP) \-\- button state
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateLayout()
update source layout
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(**kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateSourceComboBox(sourcenames, name=None)
set source by changing combobox
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourcenames\fP (\fI\%list\fP < \fI\%str\fP >) \-\- source names
.IP \(bu 2
\fBindex\fP (\fI\%int\fP) \-\- combobox index
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceTabWidget.SourceTabWidget(parent=None, sourcetypes=None, expertmode=False, nrsources=1)
Bases: \fBPyQt5.QtWidgets.QTabWidget\fP
.sp
image source selection
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.IP \(bu 2
\fBsourcetypes\fP (\fI\%list\fP <\fI\%str\fP>) \-\- source type class names
.IP \(bu 2
\fBexpertmode\fP (\fI\%bool\fP) \-\- expert mode flag
.IP \(bu 2
\fBnrsources\fP (\fI\%int\fP) \-\- number of sources
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B addIconClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) add Icon Clicked
.UNINDENT
.INDENT 7.0
.TP
.B addTab(widget, title)
add tab widget
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBwidget\fP (\fBpyqtgraph.QtWidgets.QWidget\fP) \-\- tab widget
.IP \(bu 2
\fBtitle\fP (\fI\%str\fP) \-\- tab title
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(sid, configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectFailure()
set connection status off and display connection status
.UNINDENT
.INDENT 7.0
.TP
.B connectSuccess(port=None)
set connection status on and display connection status
.INDENT 7.0
.TP
.B Parameters
\fBport\fP \-\- zmq port
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentDataSourceAlias()
current data source name alias
.INDENT 7.0
.TP
.B Returns
current datasource class name alias
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentDataSourceNames()
current data source name
.INDENT 7.0
.TP
.B Returns
current datasource class name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B currentDataSources()
current data source
.INDENT 7.0
.TP
.B Returns
current datasource class name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B emitSourceChanged()
emits sourceChanged signal
.UNINDENT
.INDENT 7.0
.TP
.B isChecked(sid)
check if tab is active
.INDENT 7.0
.TP
.B Parameters
\fBsid\fP (\fI\%int\fP) \-\- source id
.TP
.B Returns
check state
.TP
.B Return type
\fI\%int\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B isConnected()
is datasource source connected
.INDENT 7.0
.TP
.B Returns
if datasource source connected
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B onSourceChanged()
update current source widgets
.UNINDENT
.INDENT 7.0
.TP
.B removeIconClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) remove Icon Clicked
.UNINDENT
.INDENT 7.0
.TP
.B removeTab(sid)
remove tab widget
.INDENT 7.0
.TP
.B Parameters
\fBsid\fP (\fI\%int\fP) \-\- source id
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setCheckState(sid, state)
set check status
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBstate\fP (\fI\%int\fP) \-\- checkbox state
.IP \(bu 2
\fBsid\fP (\fI\%int\fP) \-\- source id
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setErrorStatus(status=\(aq\(aq)
set error status
.INDENT 7.0
.TP
.B Parameters
\fBstatus\fP (\fI\%str\fP) \-\- error status
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setNumberOfSources(nrsources)
set a number of image sources
.INDENT 7.0
.TP
.B Parameters
\fBnrsources\fP (\fI\%int\fP) \-\- a number of image sources
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setSourceComboBoxByName(sid, name)
set source by changing combobox by name
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBname\fP (\fI\%str\fP) \-\- combobox name
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTranslation(trans, sid)
stores translation of the given source
.INDENT 7.0
.TP
.B Param
x,y tranlation, e.g. 2345,354
.TP
.B Type
\fI\%str\fP
.TP
.B Parameters
\fBsid\fP (\fI\%int\fP) \-\- source id
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B showItem(trans)
show items of the widget
.INDENT 7.0
.TP
.B Parameters
\fBtrans\fP (\fI\%bool\fP) \-\- translation item show status
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sourceChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source state signal
.UNINDENT
.INDENT 7.0
.TP
.B sourceConnected
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source connected signal
.UNINDENT
.INDENT 7.0
.TP
.B sourceDisconnected
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source disconnected signal
.UNINDENT
.INDENT 7.0
.TP
.B sourceLabelChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source label name signal
.UNINDENT
.INDENT 7.0
.TP
.B sourceStateChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source state signal
.UNINDENT
.INDENT 7.0
.TP
.B start()
starts viewing if pushButton enable
.UNINDENT
.INDENT 7.0
.TP
.B tabCheckBoxStates()
provides checkbox states
.INDENT 7.0
.TP
.B Returns
checkbox state
.TP
.B Return type
\fBlist <\fP\fI\%int\fP>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B toggleServerConnection()
toggles server connection
.UNINDENT
.INDENT 7.0
.TP
.B translationChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) translation changed signal
.UNINDENT
.INDENT 7.0
.TP
.B updateButton(status, sid)
update slot for image source
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBstatus\fP (\fI\%bool\fP) \-\- button status
.IP \(bu 2
\fBsid\fP (\fI\%int\fP) \-\- source id
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateLayout()
update source layout
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(**kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateSourceComboBox(sourcenames, names=None)
set source by changing combobox
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourcenames\fP (\fI\%list\fP < \fI\%str\fP >) \-\- source names
.IP \(bu 2
\fBsourcenames\fP \-\- source names to set
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateSourceMetaData(sid, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.sourceWidget module
.sp
image source selection
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.ASAPOSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqasapo\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqASAPOSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqASAPO\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqASAPO\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton(disconnect=True)
update slot for Asapo source
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(asaposerver=None, asapotoken=None, asapobeamtime=None, asapodatasources=None, asapostreams=None, asaposourcepath=None, disconnect=True, **kargs)
update source input parameters
.sp
:param asaposervers asapo servers, i.e. host:port
:type asaposervers: \fI\%str\fP
:param asapotoken: asapo token
:type asapotoken: \fI\%str\fP
:param asapobeamtime: beamtime id
:type asapobeamtime: \fI\%str\fP
:param asapodatasources: asapo datasource names
:type asapodatasources: \fI\%list\fP <\fI\%str\fP> >
:param asapostreams: asapo stream names
:type asapostreams: \fI\%list\fP <\fI\%str\fP> >
:param asaposourcepath: source path
:type asaposourcepath: \fI\%str\fP
:param disconnect: disconnect on update
:type disconnect: \fI\%bool\fP
:param kargs:  source widget input parameter dictionary
:type kargs: \fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.DOOCSPropSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqdoocsprop\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqDOOCSPropSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqDOOCS Property\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqPYDOOCS\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for Doocs attribute source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
updates ComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(doocsprops=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBdoocsprops\fP (\fI\%str\fP) \-\- json dictionary with
(label, doocs attribute) items
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.EpicsPVSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqepicspv\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqEpicsPVSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqEpics PV\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqPYEPICS\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for Epics file source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
updates ComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(epicspvnames=None, epicspvshapes=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBepicspvnames\fP (\fI\%str\fP) \-\- json dictionary with
(label, file epics attribute) items
.IP \(bu 2
\fBepicspvshapes\fP (\fI\%str\fP) \-\- json dictionary with
(label, dir epics attribute) items
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.HTTPSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqhttp\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqHTTPSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqHTTP response\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqREQUESTS\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for HTTP response source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
updates ComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(httpurls=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBhttpurls\fP (\fI\%str\fP) \-\- json dictionary with
(label, http urls) items
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.HidraSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqhidra\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqHiDRASource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqHidra\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqHIDRA\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for Hidra source
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(serverdict=None, hidraport=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBserverdict\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%list\fP <\fI\%str\fP> >) \-\- server dictionary
.IP \(bu 2
\fBhidaraport\fP \-\- list of hidra ports
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.NXSFileSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqnxsfile\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqNXSFileSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqNeXus File\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for nexus file source
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(nxsopen=None, nxslast=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBnxsopen\fP (\fI\%bool\fP) \-\- nexus file source keeps the file open
.IP \(bu 2
\fBnxslast\fP (\fI\%bool\fP) \-\- nexus file source starts from the last image
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.SourceBaseWidget(sourceid=0, parent=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
general source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B active
(\fI\%bool\fP) source widget active
.UNINDENT
.INDENT 7.0
.TP
.B addIconClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) add Icon Clicked
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqtest\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B buttonEnabled
(\fBpyqtgraph.QtCore.pyqtSignal\fP) push button enabled signal
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqBaseSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventObjectFilter(event, combobox, varname, atdict, atlist)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B expertmode
(\fI\%bool\fP) expertmode flag
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqTest\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B removeIconClicked
(\fBpyqtgraph.QtCore.pyqtSignal\fP) remove Icon Clicked
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B setActive(active=True)
set active flag
.INDENT 7.0
.TP
.B Parameters
\fBactive\fP (\fI\%bool\fP) \-\- active flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B sourceLabelChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source label name signal
.UNINDENT
.INDENT 7.0
.TP
.B sourceStateChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) source state signal
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for test source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
abstract updateComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(**kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.INDENT 7.0
.TP
.B widgets
(\fI\%list\fP <\fBPyQt5.QtWidgets.QWidget\fP>) subwidget objects
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.TangoAttrSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqtangoattr\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqTangoAttrSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqTango Attribute\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqTANGO\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for Tango attribute source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
updates ComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(tangoattrs=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtangoattrs\fP (\fI\%str\fP) \-\- json dictionary with
(label, tango attribute) items
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.TangoEventsSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqtangoevents\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqTangoEventsSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqTango Events\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqTANGO\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for Tango attribute source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
updates ComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(tangoevattrs=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtangoevattrs\fP (\fI\%str\fP) \-\- json dictionary with
(label, tango attribute) items
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.TangoFileSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqtangofile\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqTangoFileSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqTango File\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqTANGO\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for Tango file source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
updates ComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(tangofileattrs=None, tangodirattrs=None, dirtrans=None, nxsopen=None, nxslast=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtangofileattrs\fP (\fI\%str\fP) \-\- json dictionary with
(label, file tango attribute) items
.IP \(bu 2
\fBtangodirattrs\fP (\fI\%str\fP) \-\- json dictionary with
(label, dir tango attribute) items
.IP \(bu 2
\fBdirtrans\fP (\fI\%str\fP) \-\- json dictionary with directory
and file name translation
.IP \(bu 2
\fBnxsopen\fP (\fI\%bool\fP) \-\- nexus file source keeps the file open
.IP \(bu 2
\fBnxslast\fP (\fI\%bool\fP) \-\- nexus file source starts from the last image
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.TestSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.TinePropSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqtineprop\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns
configuration string
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqTinePropSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqTine Property\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqPYTINE\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B updateButton()
update slot for Tine property source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
updates ComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(tineprops=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtineprops\fP (\fI\%str\fP) \-\- json dictionary with
(label, tine property) items
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.sourceWidget.ZMQSourceWidget(sourceid=0, parent=None)
Bases: \fI\%lavuelib.sourceWidget.SourceBaseWidget\fP
.sp
test source widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBsourceid\fP (\fI\%int\fP) \-\- source id
.IP \(bu 2
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqzmq\(aq
(\fI\%str\fP) source alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current image source
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current image source
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B connectWidget()
connects widget
.UNINDENT
.INDENT 7.0
.TP
.B datasource = \(aqZMQSource\(aq
(\fI\%str\fP) datasource class name
.UNINDENT
.INDENT 7.0
.TP
.B disconnectWidget()
disconnects widget
.UNINDENT
.INDENT 7.0
.TP
.B eventFilter(obj, event)
event filter
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBobj\fP \-\- qt object
.IP \(bu 2
\fBevent\fP \-\- qt event
.UNINDENT
.TP
.B Returns
status flag
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B label()
return a label of the current detector
.INDENT 7.0
.TP
.B Returns
label of the current detector
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqZMQ Stream\(aq
(\fI\%str\fP) source name
.UNINDENT
.INDENT 7.0
.TP
.B updateButton(disconnect=True)
update slot for ZMQ source
.UNINDENT
.INDENT 7.0
.TP
.B updateComboBox()
updates ComboBox
.UNINDENT
.INDENT 7.0
.TP
.B updateMetaData(zmqtopics=None, autozmqtopics=None, datasources=None, disconnect=True, zmqservers=None, zmqcolon=None, **kargs)
update source input parameters
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBzmqtopics\fP (\fI\%list\fP <\fI\%str\fP> >) \-\- zmq source topics
.IP \(bu 2
\fBautozmqtopics\fP (\fI\%bool\fP) \-\- automatic zmq topics enabled
.IP \(bu 2
\fBdatasources\fP (\fI\%list\fP <\fI\%str\fP> >) \-\- automatic zmq source topics
.IP \(bu 2
\fBdisconnect\fP (\fI\%bool\fP) \-\- disconnect on update
.IP \(bu 2
\fBzmqservers\fP (\fI\%str\fP) \-\- json dictionary with
(label, zmq servers) items
.IP \(bu 2
\fBzmqcolon\fP (\fI\%bool\fP) \-\- zmq colon configuation separator
.IP \(bu 2
\fBkargs\fP (\fI\%dict\fP < \fI\%str\fP, \fI\%any\fP>) \-\- source widget input parameter dictionary
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B widgetnames
(\fI\%list\fP <\fI\%str\fP>) subwidget object names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.sourceWidget.swproperties = [{\(aqalias\(aq: \(aqhidra\(aq, \(aqname\(aq: \(aqHidra\(aq, \(aqwidget\(aq: \(aqHidraSourceWidget\(aq, \(aqrequires\(aq: (\(aqHIDRA\(aq,)}, {\(aqalias\(aq: \(aqhttp\(aq, \(aqname\(aq: \(aqHTTP response\(aq, \(aqwidget\(aq: \(aqHTTPSourceWidget\(aq, \(aqrequires\(aq: (\(aqREQUESTS\(aq,)}, {\(aqalias\(aq: \(aqtangoattr\(aq, \(aqname\(aq: \(aqTango Attribute\(aq, \(aqwidget\(aq: \(aqTangoAttrSourceWidget\(aq, \(aqrequires\(aq: (\(aqTANGO\(aq,)}, {\(aqalias\(aq: \(aqtangoevents\(aq, \(aqname\(aq: \(aqTango Events\(aq, \(aqwidget\(aq: \(aqTangoEventsSourceWidget\(aq, \(aqrequires\(aq: (\(aqTANGO\(aq,)}, {\(aqalias\(aq: \(aqtangofile\(aq, \(aqname\(aq: \(aqTango File\(aq, \(aqwidget\(aq: \(aqTangoFileSourceWidget\(aq, \(aqrequires\(aq: (\(aqTANGO\(aq,)}, {\(aqalias\(aq: \(aqdoocsprop\(aq, \(aqname\(aq: \(aqDOOCS Property\(aq, \(aqwidget\(aq: \(aqDOOCSPropSourceWidget\(aq, \(aqrequires\(aq: (\(aqPYDOOCS\(aq,)}, {\(aqalias\(aq: \(aqzmq\(aq, \(aqname\(aq: \(aqZMQ Stream\(aq, \(aqwidget\(aq: \(aqZMQSourceWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqnxsfile\(aq, \(aqname\(aq: \(aqNeXus File\(aq, \(aqwidget\(aq: \(aqNXSFileSourceWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqtineprop\(aq, \(aqname\(aq: \(aqTine Property\(aq, \(aqwidget\(aq: \(aqTinePropSourceWidget\(aq, \(aqrequires\(aq: (\(aqPYTINE\(aq,)}, {\(aqalias\(aq: \(aqepicspv\(aq, \(aqname\(aq: \(aqEpics PV\(aq, \(aqwidget\(aq: \(aqEpicsPVSourceWidget\(aq, \(aqrequires\(aq: (\(aqPYEPICS\(aq,)}, {\(aqalias\(aq: \(aqasapo\(aq, \(aqname\(aq: \(aqASAPO\(aq, \(aqwidget\(aq: \(aqASAPOSourceWidget\(aq, \(aqrequires\(aq: (\(aqASAPO\(aq,)}, {\(aqalias\(aq: \(aqtest\(aq, \(aqname\(aq: \(aqTest\(aq, \(aqwidget\(aq: \(aqTestSourceWidget\(aq, \(aqrequires\(aq: ()}]
( \fI\%dict\fP < \fI\%str\fP, any > ) source widget properties
.UNINDENT
.SS lavuelib.statisticsGroupBox module
.sp
statistics widget
.INDENT 0.0
.TP
.B class lavuelib.statisticsGroupBox.StatisticsGroupBox(parent=None)
Bases: \fBPyQt5.QtWidgets.QGroupBox\fP
.sp
Display some general image statistics.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B changeView(showstats=False, showvariance=False)
shows or hides the histogram widget
.INDENT 7.0
.TP
.B Parameters
\fBshowhistogram\fP (\fI\%bool\fP) \-\- if histogram should be shown
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateStatistics(mean, maximum, variance, scaling)
update image statistic values
.INDENT 7.0
.TP
.B Parameters
\fBmeanparent\fP \-\- parent object
.UNINDENT
.UNINDENT
.UNINDENT
.SS lavuelib.takeMotorsDialog module
.sp
motor device widget
.INDENT 0.0
.TP
.B lavuelib.takeMotorsDialog.TANGO = True
(\fI\%bool\fP) tango imported
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.takeMotorsDialog.TakeMotorsDialog(parent=None)
Bases: \fBPyQt5.QtWidgets.QDialog\fP
.sp
detector geometry widget class
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B accept()
updates class variables with the form content
.UNINDENT
.INDENT 7.0
.TP
.B createGUI()
create GUI
.UNINDENT
.INDENT 7.0
.TP
.B motortips
(\fBlist\(ga<:obj:\(gastr\fP>) motortips list
.UNINDENT
.INDENT 7.0
.TP
.B title
(\fI\%str\fP) group title
.UNINDENT
.INDENT 7.0
.TP
.B xmotordevice
(\fI\%tango.DeviceProxy\fP) x motor device
.UNINDENT
.INDENT 7.0
.TP
.B xmotorname
(\fI\%str\fP) x motor name
.UNINDENT
.INDENT 7.0
.TP
.B ymotordevice
(\fI\%tango.DeviceProxy\fP) y motor device
.UNINDENT
.INDENT 7.0
.TP
.B ymotorname
(\fI\%str\fP) y motor name
.UNINDENT
.UNINDENT
.SS lavuelib.toolWidget module
.sp
image widget
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.AngleQToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
angle/q tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqangle/q\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B beforeplot(array, rawarray)
command  before plot
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d image array
.IP \(bu 2
\fBrawarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d raw image array
.UNINDENT
.TP
.B Returns
2d image array and raw image
.TP
.B Return type
(\fI\%numpy.ndarray\fP, \fI\%numpy.ndarray\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
deactivates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqAngle/Q\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.INDENT 7.0
.TP
.B updateGeometryTip()
update geometry tips
.UNINDENT
.INDENT 7.0
.TP
.B updateRangeTip()
update geometry tips
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.DiffractogramToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
diffractogram tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B afterplot()
command after plot
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqdiffractogram\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B beforeplot(array, rawarray)
command  before plot
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d image array
.IP \(bu 2
\fBrawarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d raw image array
.UNINDENT
.TP
.B Returns
2d image array and raw image
.TP
.B Return type
(\fI\%numpy.ndarray\fP, \fI\%numpy.ndarray\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
deactivates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B findregions()
find regions lists
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqDiffractogram\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqPYFAI\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B runProgress(commands, onclose=\(aq_closeReset\(aq, text=\(aqUpdating diffractogram ranges ...\(aq)
starts progress thread with the given commands
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBcommands\fP (\fI\%list\fP <\fI\%str\fP>) \-\- list of commands
.IP \(bu 2
\fBonclose\fP (\fI\%str\fP) \-\- close command name
.IP \(bu 2
\fBtext\fP (\fI\%str\fP) \-\- text to display
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setColors(colors=None, force=False)
sets colors
.INDENT 7.0
.TP
.B Parameters
\fBcolors\fP (\fI\%str\fP) \-\- json list of roi colors
.TP
.B Returns
change status
.TP
.B Return type
\fI\%bool\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.INDENT 7.0
.TP
.B updateGeometryTip()
update geometry tips
.UNINDENT
.INDENT 7.0
.TP
.B updateRangeTip()
update geometry tips
.UNINDENT
.INDENT 7.0
.TP
.B waitForThread()
waits for running thread
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.IntensityToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
intensity tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B afterplot()
command after plot
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqintensity\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqIntensity\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.LineCutToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
line\-cut tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B afterplot()
command after plot
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqlinecut\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqLineCut\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.MaximaToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
maxima tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqmaxima\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B beforeplot(array, rawarray)
command  before plot
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d image array
.IP \(bu 2
\fBrawarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d raw image array
.UNINDENT
.TP
.B Returns
2d image array and raw image
.TP
.B Return type
(\fI\%numpy.ndarray\fP, \fI\%numpy.ndarray\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
deactivates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqMaxima\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.INDENT 7.0
.TP
.B updateGeometryTip()
update geometry tips
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.MeshToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
mesh tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqmeshscan\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
deactivates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqMeshScan\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqTANGO\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B roiInfoChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi info Changed signal
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.INDENT 7.0
.TP
.B updateROIDisplayText(text, currentroi, roiVal)
updates ROI display text
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtext\fP (\fI\%str\fP) \-\- standard display text
.IP \(bu 2
\fBcurrentroi\fP (\fI\%str\fP) \-\- current roi label
.IP \(bu 2
\fBtext\fP \-\- roi sum value
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.MotorsToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
motors tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqmovemotors\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqMoveMotors\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqTANGO\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.OneDToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
1d plot tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B afterplot()
command after plot
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aq1d\-plot\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B beforeplot(array, rawarray)
command  before plot
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d image array
.IP \(bu 2
\fBrawarray\fP (\fI\%numpy.ndarray\fP) \-\- 2d raw image array
.UNINDENT
.TP
.B Returns
2d image array and raw image
.TP
.B Return type
(\fI\%numpy.ndarray\fP, \fI\%numpy.ndarray\fP)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aq1d\-Plot\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.ParametersToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
motors tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqparameters\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B convert = {\(aqbool\(aq: <bound method Converters.toBool of <class \(aqlavuelib.toolWidget.Converters\(aq>>, \(aqfloat\(aq: <class \(aqfloat\(aq>, \(aqfloat16\(aq: <class \(aqfloat\(aq>, \(aqfloat32\(aq: <class \(aqfloat\(aq>, \(aqfloat64\(aq: <class \(aqfloat\(aq>, \(aqint\(aq: <class \(aqint\(aq>, \(aqint16\(aq: <class \(aqint\(aq>, \(aqint32\(aq: <class \(aqint\(aq>, \(aqint64\(aq: <class \(aqint\(aq>, \(aqint8\(aq: <class \(aqint\(aq>, \(aqstr\(aq: <class \(aqstr\(aq>, \(aqstring\(aq: <class \(aqstr\(aq>, \(aquint\(aq: <class \(aqint\(aq>, \(aquint16\(aq: <class \(aqint\(aq>, \(aquint32\(aq: <class \(aqint\(aq>, \(aquint64\(aq: <class \(aqint\(aq>, \(aquint8\(aq: <class \(aqint\(aq>}
(\fI\%dict\fP <\fI\%str\fP , \fI\%type\fP or \fI\%types.MethodType\fP >) map of type : converting function
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqParameters\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = (\(aqTANGO\(aq,)
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.ProjectionToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
Projections tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B afterplot()
command after plot
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqprojections\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqProjections\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.QROIProjToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
angle/q +roi + projections tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B afterplot()
command after plot
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqq+roi+proj\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B applyROIPressed
(\fBpyqtgraph.QtCore.pyqtSignal\fP) apply ROI pressed signal
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
deactivates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B fetchROIPressed
(\fBpyqtgraph.QtCore.pyqtSignal\fP) fetch ROI pressed signal
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqQ+ROI+Proj\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B roiInfoChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi info Changed signal
.UNINDENT
.INDENT 7.0
.TP
.B setROIsNumber(rid)
sets a number of rois
.INDENT 7.0
.TP
.B Parameters
\fBrid\fP (\fI\%int\fP) \-\- number of rois
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.INDENT 7.0
.TP
.B updateApplyTips(rid)
updates apply tips
.INDENT 7.0
.TP
.B Parameters
\fBrid\fP (\fI\%int\fP) \-\- current roi id
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateGeometryTip()
update geometry tips
.UNINDENT
.INDENT 7.0
.TP
.B updateROIButton(enabled)
enables/disables ROI buttons
.INDENT 7.0
.TP
.B Parameters
\fBenable\fP (\fI\%bool\fP) \-\- buttons enabled
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateROIDisplayText(text, currentroi, roiVal)
updates ROI display text
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtext\fP (\fI\%str\fP) \-\- standard display text
.IP \(bu 2
\fBcurrentroi\fP (\fI\%str\fP) \-\- current roi label
.IP \(bu 2
\fBtext\fP \-\- roi sum value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateROILineEdit(text)
updates ROI line edit text
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- text to update
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class lavuelib.toolWidget.ROIToolWidget(parent=None)
Bases: \fBlavuelib.toolWidget.ToolBaseWidget\fP
.sp
roi tool widget
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B activate()
activates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B alias = \(aqroi\(aq
(\fI\%str\fP) tool name alias
.UNINDENT
.INDENT 7.0
.TP
.B applyROIPressed
(\fBpyqtgraph.QtCore.pyqtSignal\fP) apply ROI pressed signal
.UNINDENT
.INDENT 7.0
.TP
.B configuration()
provides configuration for the current tool
.INDENT 7.0
.TP
.B Returns configuration
configuration string
.TP
.B Rtype configuration
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B configure(configuration)
set configuration for the current tool
.INDENT 7.0
.TP
.B Parameters
\fBconfiguration\fP (\fI\%str\fP) \-\- configuration string
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B deactivate()
deactivates tool widget
.UNINDENT
.INDENT 7.0
.TP
.B fetchROIPressed
(\fBpyqtgraph.QtCore.pyqtSignal\fP) fetch ROI pressed signal
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqROI\(aq
(\fI\%str\fP) tool name
.UNINDENT
.INDENT 7.0
.TP
.B requires = ()
(\fI\%tuple\fP <\fI\%str\fP>) capitalized required packages
.UNINDENT
.INDENT 7.0
.TP
.B roiInfoChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) roi info Changed signal
.UNINDENT
.INDENT 7.0
.TP
.B setROIsNumber(rid)
sets a number of rois
.INDENT 7.0
.TP
.B Parameters
\fBrid\fP (\fI\%int\fP) \-\- number of rois
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B signal2slot
(\fI\%list\fP < [\fBpyqtgraph.QtCore.pyqtSignal\fP, \fI\%str\fP] >)
list of [signal, slot] object to connect
.UNINDENT
.INDENT 7.0
.TP
.B updateApplyTips(rid)
updates apply tips
.INDENT 7.0
.TP
.B Parameters
\fBrid\fP (\fI\%int\fP) \-\- current roi id
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateROIButton(enabled)
enables/disables ROI buttons
.INDENT 7.0
.TP
.B Parameters
\fBenable\fP (\fI\%bool\fP) \-\- buttons enabled
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateROIDisplayText(text, currentroi, roiVal)
updates ROI display text
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBtext\fP (\fI\%str\fP) \-\- standard display text
.IP \(bu 2
\fBcurrentroi\fP (\fI\%str\fP) \-\- current roi label
.IP \(bu 2
\fBtext\fP \-\- roi sum value
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B updateROILineEdit(text)
updates ROI line edit text
.INDENT 7.0
.TP
.B Parameters
\fBtext\fP (\fI\%str\fP) \-\- text to update
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B lavuelib.toolWidget.twproperties = [{\(aqalias\(aq: \(aqintensity\(aq, \(aqname\(aq: \(aqIntensity\(aq, \(aqwidget\(aq: \(aqIntensityToolWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqroi\(aq, \(aqname\(aq: \(aqROI\(aq, \(aqwidget\(aq: \(aqROIToolWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqlinecut\(aq, \(aqname\(aq: \(aqLineCut\(aq, \(aqwidget\(aq: \(aqLineCutToolWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqangle/q\(aq, \(aqname\(aq: \(aqAngle/Q\(aq, \(aqwidget\(aq: \(aqAngleQToolWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqmovemotors\(aq, \(aqname\(aq: \(aqMoveMotors\(aq, \(aqwidget\(aq: \(aqMotorsToolWidget\(aq, \(aqrequires\(aq: (\(aqTANGO\(aq,)}, {\(aqalias\(aq: \(aqmeshscan\(aq, \(aqname\(aq: \(aqMeshScan\(aq, \(aqwidget\(aq: \(aqMeshToolWidget\(aq, \(aqrequires\(aq: (\(aqTANGO\(aq,)}, {\(aqalias\(aq: \(aq1d\-plot\(aq, \(aqname\(aq: \(aq1d\-Plot\(aq, \(aqwidget\(aq: \(aqOneDToolWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqprojections\(aq, \(aqname\(aq: \(aqProjections\(aq, \(aqwidget\(aq: \(aqProjectionToolWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqmaxima\(aq, \(aqname\(aq: \(aqMaxima\(aq, \(aqwidget\(aq: \(aqMaximaToolWidget\(aq, \(aqrequires\(aq: ()}, {\(aqalias\(aq: \(aqparameters\(aq, \(aqname\(aq: \(aqParameters\(aq, \(aqwidget\(aq: \(aqParametersToolWidget\(aq, \(aqrequires\(aq: (\(aqTANGO\(aq,)}, {\(aqalias\(aq: \(aqdiffractogram\(aq, \(aqname\(aq: \(aqDiffractogram\(aq, \(aqwidget\(aq: \(aqDiffractogramToolWidget\(aq, \(aqrequires\(aq: (\(aqPYFAI\(aq,)}, {\(aqalias\(aq: \(aqq+roi+proj\(aq, \(aqname\(aq: \(aqQ+ROI+Proj\(aq, \(aqwidget\(aq: \(aqQROIProjToolWidget\(aq, \(aqrequires\(aq: ()}]
( \fI\%dict\fP < \fI\%str\fP, any > ) tool widget properties
.UNINDENT
.SS lavuelib.transformationsWidget module
.sp
transformation widget
.INDENT 0.0
.TP
.B class lavuelib.transformationsWidget.TransformationsWidget(parent=None)
Bases: \fBPyQt5.QtWidgets.QWidget\fP
.sp
Select how an image should be transformed.
.sp
constructor
.INDENT 7.0
.TP
.B Parameters
\fBparent\fP (\fBpyqtgraph.QtCore.QObject\fP) \-\- parent object
.UNINDENT
.INDENT 7.0
.TP
.B setEnable(flag)
disables or enables the combobox
.INDENT 7.0
.TP
.B Parameters
\fBflag\fP (\fI\%bool\fP) \-\- combobox to be enabled
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setKeepCoordsLabel(flag, transpose=False)
sets keep original coordinates label according to flag
.INDENT 7.0
.TP
.B Parameters
\fBflag\fP (\fI\%bool\fP) \-\- keep original coordinates flag
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B setTransformation(tname)
sets transformation from the string
.INDENT 7.0
.TP
.B Parameters
\fBtname\fP (\fI\%str\fP) \-\- transfromation name
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transformation()
provides transformation name
.INDENT 7.0
.TP
.B Returns
transfromation name
.TP
.B Return type
\fI\%str\fP
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B transformationChanged
(\fBpyqtgraph.QtCore.pyqtSignal\fP) transformation changed signal
.UNINDENT
.UNINDENT
.SS Module contents
.sp
Live Viewer widgets
.INDENT 0.0
.IP \(bu 2
genindex
.IP \(bu 2
modindex
.IP \(bu 2
search
.UNINDENT
.nf
\fBLaVue Documentation\fP:  \fI\%LaVue\fP
\fBLavueController\fP Tango Server API: \fI\%LaVueController documentation\fP
\fBConflunce\fP page: \fI\%https://confluence.desy.de/display/FSEC/LaVue+\-+Live+Image+Viewer\fP
\fBGithub\fP repository: \fI\%https://github.com/lavue\-org/lavue\fP
.fi
.sp
.SH AUTHOR
Author
.SH COPYRIGHT
2017 DESY, Jan Kotanski <jkotan@mail.desy.de>, Christoph Rosemann <christoph.rosemann@desy.de> 

GNU GENERAL PUBLIC LICENSE, version 2
.\" Generated by docutils manpage writer.
.
